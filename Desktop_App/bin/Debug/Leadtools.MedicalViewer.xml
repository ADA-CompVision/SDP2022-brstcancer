<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Leadtools.MedicalViewer</name>
  </assembly>
  <members>
    <member name="T:Leadtools.MedicalViewer.MedicalViewer">
      <summary>Represents a LEADTOOLS MedicalViewer control for displaying medical images.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.#ctor">
      <summary>Initializes a new instance of the MedicalViewer class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewer class object with explicit parameters.</summary>
      <param name="gridmode">A value that represents whether to initialize the MedicalViewer in grid mode. If this parameter is false the grid will be initialized in layout mode. Each cell will be able to be positioned at a specific location. Otherwise it will be in row column mode.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of a MedicalViewer object with explicit parameters.</summary>
      <param name="rows">The number of rows. The maximum allowed number of rows is 8.</param>
      <param name="columns">The number of columns. The maximum allowed number of columns is 8.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.BeginUpdate">
      <summary>Stops the viewer from being refreshed if changes are applied. This is useful to increase the control speed efficiency.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.BurnTag(Leadtools.RasterImage,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,System.String)">
      <summary>Burns the tag onto the image with the specified parameters.</summary>
      <param name="image">The input image where the tag is going to be burn on.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">An enumerated MedicalViewerTagAlignment value that represents the text alignment.</param>
      <param name="text">The user's text.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.BurnTag(Leadtools.RasterImage,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,System.String,Font)">
      <summary>Burns the tag onto the image with the specified parameters.</summary>
      <param name="image">The input image where the tag is going to be burn on.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">An enumerated MedicalViewerTagAlignment value that represents the text alignment.</param>
      <param name="text">The user's text.</param>
      <param name="font">The font used for the text.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.BurnTag(Leadtools.RasterImage,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,System.String,Font,System.Int32,System.Int32)">
      <summary>Burns the tag onto the image with the specified parameters .</summary>
      <param name="image">The input image where the tag is going to be burn on.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">An enumerated MedicalViewerTagAlignment value that represents the text alignment.</param>
      <param name="text">The user's text.</param>
      <param name="font">The font used for the text.</param>
      <param name="shadowColor">The color of the text.</param>
      <param name="textColor">The color of the text's shadow.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.EndUpdate">
      <summary>Refreshes the control to include all the changes made after using the BeginUpdate method.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.Invalidate">
      <summary>Redraws all the cells in the medical viewer.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.LoadLayout(System.IO.Stream)">
      <summary>Loads the layout from the specified stream.</summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.Refresh">
      <summary>Updates and recalculates the data of all the cells in the medical viewer.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.SaveAnnotations(System.String,System.Boolean)">
      <summary>Saves the annotation container(s) of a cell to a file.</summary>
      <param name="fileName">A string that contains the path to the file to save the annotation container to.</param>
      <param name="selected">True to save only the selected annotation objects. False to save all the annotation objects.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.SaveLayout(System.IO.Stream)">
      <summary>Saves the layout to the specified stream.</summary>
      <param name="stream">The stream with the layout to be saved.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewer.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.Finalize">
      <summary>This member overrides Finalize.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.IsInputKey(Keys)">
      <summary>Overrides Control.IsInputKey.</summary>
      <param name="keyData">One of the System.Windows.Forms.Keys values.</param>
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.OnCreateControl">
      <summary>Overrides the Control.OnCreateControl.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.OnHandleCreated(System.EventArgs)">
      <summary>Overrides Control.OnHandleCreated.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.OnSizeChanged(System.EventArgs)">
      <summary>Overrides Control.OnSizeChanged.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer.WndProc(Message@)">
      <summary>Processes Windows messages. Overrides WndProc.</summary>
      <param name="m">System.Windows.Forms.MessageWhich represents the Windows Message to process.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewer.DeleteCell">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewer.SelectedCellsChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewer.ViewerDragDrop">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewer.ViewerDragOver">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewer.ViewerScroll">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.AlignScrollBarToLeft">
      <summary>Gets or sets the value that determines whether to align the medical viewer scrollbar to the left or right.</summary>
      <value>True to align the scroll bar to the left; false to align the scrollbar to the right.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.AllowMultipleSelection">
      <summary>Gets or sets the value that indicates whether multiple cells can be selected at the same time (Using the CTRL key), or through MedicalViewerBaseCell.Selected.</summary>
      <value>true to allow the user to select multiple cells at the same time; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.AutoScroll">
      <summary>Enables or disables whether scroll bars automatically appear when the control contents are larger than the visible area.</summary>
      <value>true to enable scroll bars; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.BackColor">
      <summary>Gets or sets the color of the control area that has not been filled with cells.</summary>
      <value>The color of the control area that has not been filled with cells.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.CellMaintenance">
      <summary>Enables or disables maintaining the cell size if the user moves a splitter, the vertical or horizontal line that separates.</summary>
      <value>true to enable cell maintenance; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.Cells">
      <summary>Gets the MedicalViewerCellCollection\&lt;MedicalViewerBaseCell\&gt; assigned to the control.</summary>
      <value>The MedicalViewerCellCollection\&lt;MedicalViewerBaseCell\&gt;.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.Columns">
      <summary>Gets or sets the number of columns.</summary>
      <value>The number of columns. The maximum allowed number of columns is 8.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.ColumnSplitters">
      <summary>Gets the collection that contains information about the column splitters.</summary>
      <value>MedicalViewerSplitterCollection\&lt;MedicalViewerSplitter\&gt; that represents the collection which contains information about the column splitters.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.Cursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is hovering over the medical control.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is hovering over the medical control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.CustomSplitterColor">
      <summary>Enables or disables painting the splitters with a custom color specified in SplitterColor.</summary>
      <value>true to use the color specified in SplitterColor, false to use the system theme color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.Exploded">
      <summary>Gets or sets the value that determines whether the viewer is in the exploded mode or not.</summary>
      <value>true if the viewer is in the exploded mode, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.FullExplode">
      <summary>Gets or sets the value that determines whether to allow the viewer to enter a full explode mode (focus mode) when a cell or sub-cell is double clicked.</summary>
      <value>true to enable full explode mode in the viewer; otherwise, it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.GridMode">
      <summary>Gets a value indicating whether the MedicalViewer was created in grid mode.</summary>
      <value>`true` if created in created in grid mode; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.LayoutOptions">
      <summary>Gets the layout options for the MedicalViewer control.</summary>
      <value>The layout options.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.LowMemoryUsageEnabled">
      <summary>Gets or set whether to enable the low memory usage feature of the medical viewer.</summary>
      <value>true to enable the low memory usage feature, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.ResizeBoth">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the intersection between the horizontal and vertical splitters.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is over the intersection between the horizontal and vertical splitters.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.ResizeHorizontalCursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the horizontal splitter of the medical control.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is over the horizontal splitter of the medical control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.ResizeVerticalCursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the vertical splitter of the medical control.</summary>
      <value>A Cursor object that represents the cursor to display when the mouse pointer is over the vertical splitter of the medical control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.Rows">
      <summary>Gets or sets the number of rows.</summary>
      <value>The number of rows.The maximum allowed number of rows is 8.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.RowSplitters">
      <summary>Gets the collection that contains information about the row splitters.</summary>
      <value>MedicalViewerSplitterCollection\&lt;MedicalViewerSplitter\&gt; that represents the collection which contains information about the row splitters.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.ShowSelectedReferenceLine">
      <summary>Gets or sets the value that indicates whether to show the reference line only of the selected cells.</summary>
      <value>true to show only the reference line of the selected cell(s); otherwise, it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.SplitterColor">
      <summary>Gets or sets the color of the splitter.</summary>
      <value>The color of the splitter. This is useful only if CustomSplitterColor is true</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.SplitterStyle">
      <summary>Gets or sets the enumerated value that indicates the painting the style of the splitter.</summary>
      <value>An enumerated value that indicates the style of the splitter.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.SynchronizationType">
      <summary>Gets or sets the synchronization type used to synchronize the cells in this viewer.</summary>
      <value>The synchronization type.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.UseExtraSplitters">
      <summary>Enables or disables showing the extra splitters at the bottom and the right of the viewer.</summary>
      <value>true to show the splitters; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.VisibleRow">
      <summary>Gets or sets the index of the first visible row in the MedicalViewer.</summary>
      <value>The index of the first visible row in the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer.CreateParams">
      <summary>Overrides the property CreateParams. Encapsulates the information needed when creating a control.</summary>
      <value>Overrides the property CreateParams.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewer3DFrameRequestedEventArgs">
      <summary>The MedicalViewer3DFrameRequestedEventArgs class provides data for the MedicalViewerCell.Data3DFrameRequested event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewer3DFrameRequestedEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerData3DRequestedEventArgs class object with explicit parameters.</summary>
      <param name="frameIndex">the index of the frame requested. The user should retrieve this image and place it in the property Image</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer3DFrameRequestedEventArgs.Image">
      <summary>Gets or sets the image that is requested by the Medical Viewer engine and the Medical 3D Engine.</summary>
      <value>Leadtools.RasterImage that represents the requested image, which is requested by the Medical Viewer engine and the Medical 3D Engine.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewer3DFrameRequestedEventArgs.ImageIndex">
      <summary>Gets the value that indicates the index of the requested image</summary>
      <value>A value that indicates the index of the requested image, which the user is responsible for providing. The user should retrieve this image and place it in the property Image</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerActiveSubCellChangedEventArgs">
      <summary>The MedicalViewerActiveSubCellChangedEventArgs class provides data about the MedicalViewerMultiCell.ActiveSubCellChanged event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerActiveSubCellChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerActiveSubCellChangedEventArgs class.</summary>
      <param name="cellIndex">The index of the cell that has its subcell changed.</param>
      <param name="subCellIndex">The index of the sub-cell that has been activated.</param>
      <param name="previousSubCellIndex">The index of the sub-cell that has lost the active state.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerActiveSubCellChangedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that has its active sub-cell changed. This value is only valid if the cell has been added to the MedicalViewer.</summary>
      <value>Value that indicates the zero-based index of the cell that has its active sub-cell changed. This value is only valid if the cell has been add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerActiveSubCellChangedEventArgs.PreviousSubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that has lost the active state.</summary>
      <value>Value that indicates the zero-based index of the sub-cell that has lost the active state.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerActiveSubCellChangedEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that has been activated.</summary>
      <value>Value that indicates the zero-based index of the sub-cell that has been activated.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAlpha">
      <summary>Represents the class that contains the properties of the alpha channel.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAlpha.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAlpha class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAlpha.#ctor(System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerAlpha class with a specified alpha factor.</summary>
      <param name="alpha">The alpha factor.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAlpha.#ctor(System.Int32,System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerAlpha class with a specified alpha factor, mouse sensitivity, mouse behavior and cursor parameters.</summary>
      <param name="alpha">The alpha factor.</param>
      <param name="sensitivity">An integer value that represents the mouse sensitivity, in percent. Possible values are 1 - 100. Default is 100. A value of 100 indicates that the amount of change in the action is equal to the amount of movement of the mouse. For example, if the mouse is moved 1 pixel, the action changes by 1 unit. A value of 50 indicates that the amount of change in the action is 50 percent of the amount of mouse movement. For example, if the mouse is moved 2 pixels, the action only changes by one unit.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAlpha.Alpha">
      <summary>Gets or sets the value that indicates the alpha factor.</summary>
      <value>Value that indicates the alpha factor in the function operation specified in the FillType property of the MedicalViewerWindowLevel. This property is used only if FillType is Exponential, Logarithmic or Sigmoid. If none of those flags are selected, the value of the Factor can be any integer (+/-). If the Logarithmic flag is selected, the Factor value should be &gt;= 0. If the Factor = 0, the lookup table will be filled linearly.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnimation">
      <summary>Represents the class that is used to animate or change the animation properties of those cells that have more than one frame.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnimation.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnimation class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.AnimateAllSubCells">
      <summary>Gets or sets the value that determines whether to animate all the sub-cells.</summary>
      <value>true to animate all the sub-cell in the cell; false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.Animated">
      <summary>Gets or sets the value that determines whether the animation is running on the specified cell.</summary>
      <value>true if the animation is running on that cell; false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.Flags">
      <summary>Gets or sets the enumerated flags that describe how to play the animation.</summary>
      <value>An enumerated MedicalViewerAnimationFlags value that describes how to play the animation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.FrameCount">
      <summary>Gets or sets the value that indicates the number of frames that will be included in the animation.</summary>
      <value>Value that indicates the number of frames that will be included in the animation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.Frames">
      <summary>Gets or sets the value that indicates which frames are included in the animation.</summary>
      <value>Value that indicates which frames are included in the animation. Default is -1 (all frames).</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.Interval">
      <summary>Gets or sets the value that indicates the amount of time to wait (in milli-seconds) before showing the next frame.</summary>
      <value>Value that indicates the amount of time to wait (in milliseconds) before showing the next frame.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.IntervalType">
      <summary>Gets or sets the enumeration that determines whether to make the engine interpret the wait Interval value as milliseconds or frames per second.</summary>
      <value>MedicalViewerAnimationIntervalType enumeration that determines whether to make the engine interpret the Interval wait value as milliseconds or frames per second.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimation.StartFrame">
      <summary>Gets or sets the value that indicates the frame from which the animation will start.</summary>
      <value>Zero-based index value that indicates the first frame from which the animation will start. The start frame is included within the animation.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnimationInformationEventArgs">
      <summary>The MedicalViewerAnimationInformationEventArgs class provides data for various MedicalViewer events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnimationInformationEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerAnimationInformationEventArgs class object with explicit parameters.</summary>
      <param name="cellIndex">The index of the cell which has its animation engine started or stopped.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnimationInformationEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell which has its animation engine started or stopped. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the zero-based index of the cell which has its animation engine started or stopped. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotation">
      <summary>Represents the base class used by the annotation action classes.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotation.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotation class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotation.AnnotationColor">
      <summary>Gets or sets the color of the annotation object.</summary>
      <value>A Leadtools.RasterColor that represents the color of the annotation object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotation.Flags">
      <summary>Gets or sets the enumerated value that represents the type of annotations the properties are applied to.</summary>
      <value>Enumerated value that represents the type of annotations should to which the properties should be applied.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationAngle">
      <summary>Represents the class that contains the properties of the annotation angle action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationAngle.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationAngle class.</summary>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationArrow">
      <summary>Represents the class that contains the properties of the annotation arrow action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationArrow.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationArrow class.</summary>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationAttributes">
      <summary>Represents the class that is used to retrieve the attributes for the selected annotation object.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationAttributes.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationAttributes class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationAttributes.Type">
      <summary>Gets a value which indicates which annotation type is selected.</summary>
      <value>Enumerated value that indicates which type of annotation is selected.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationChangedEventArgs">
      <summary>The MedicalViewerAnnotationChangedEventArgs class provides data for the MedicalViewerBaseCell.AnnotationChanged event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationChangedEventArgs.#ctor(System.Int32,Leadtools.Annotations.Engine.AnnObject,Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationChangedEventArgs class object with explicit parameters.</summary>
      <param name="subCellIndex">the index of the sub-cell that hold the annotation container with the changed object</param>
      <param name="annObject">the object subjected to change..</param>
      <param name="changeType">enum that represents what exactly is the change.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationChangedEventArgs.ChangeType">
      <summary>Gets or set the type of change applied to the annotation object.</summary>
      <value>MedicalViewerAnnotationChangeType enum that represents the type of change applied to the annotation object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationChangedEventArgs.Object">
      <summary>Gets or sets the annotation object that caused the MedicalViewerBaseCell.AnnotationChanged to get triggered.</summary>
      <value>Leadtools.Annotations.Engine.AnnObject that represents the annotation object that caused the MedicalViewerBaseCell.AnnotationChanged to get triggered.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationChangedEventArgs.SubCellIndex">
      <summary>Gets or set the index of the sub-cell that contains the changed annotation object</summary>
      <value>Value that represents the index of the sub-cell that contains the changed annotation object</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs">
      <summary>The MedicalViewerAnnotationClickedEventArgs class provides data for the MedicalViewerBaseCell.AnnotationClicked event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerMouseButtons)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationClickedEventArgs class with explicit parameters.</summary>
      <param name="cellIndex">The index of the cell that that has had its annotation clicked.</param>
      <param name="subCellIndex">The index of the sub-cell that has had its annotation clicked.</param>
      <param name="x">The pointer X position.</param>
      <param name="y">The pointer Y position.</param>
      <param name="mouseButton">An enumerated MedicalViewerMouseButtons value that represents the button that was used to click on the annotation object.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.Button">
      <summary>Gets an enumerated value that indicates which Mouse button was used to click on the annotation object.</summary>
      <value>An enumerated MedicalViewerMouseButtons value that represents the button that was used to click on the annotation object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that has the annotation that was clicked. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the zero-based index of the cell that has the annotation that was clicked. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that has the annotation that was clicked.</summary>
      <value>Value that indicates the zero-based index of the sub-cell that has the annotation that was clicked.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.X">
      <summary>Gets the value that indicates the X position for the pointer.</summary>
      <value>Value that indicates the X position for the pointer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationClickedEventArgs.Y">
      <summary>Gets the value that indicates the Y position for the pointer.</summary>
      <value>Value that indicates the Y position for the pointer.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs">
      <summary>The MedicalViewerAnnotationCreatedEventArgs class provides data for the MedicalViewerBaseCell.AnnotationCreated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.#ctor(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationCreatedEventArgs class with explicit parameters.</summary>
      <param name="cellIndex">The index of the cell that has the annotation that was created.</param>
      <param name="subCellIndex">The index of the sub-cell that has the annotation that was created.</param>
      <param name="annotationType">An enumerated MedicalViewerActionType value that represents which annotation type was created.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.#ctor(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.Annotations.Engine.AnnObject)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationCreatedEventArgs class with explicit parameters.</summary>
      <param name="cellIndex">The index of the cell that has the newly created annotation.</param>
      <param name="subCellIndex">The index of the sub-cell that has the newly created annotation.</param>
      <param name="annotationType">An enumerated MedicalViewerActionType value that represents the type of annotation created.</param>
      <param name="annObject">The newly created annotation object.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.AnnotationType">
      <summary>Gets an enumerated value that indicates which type of annotation was created.</summary>
      <value>An enumerated MedicalViewerActionType value that represents which type of annotation was created.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that has the annotation that was created. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the zero-based index of the cell that has the annotation that was created. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.Object">
      <summary>Gets the created annotation object.</summary>
      <value>Leadtools.Annotations.Engine.AnnObject class that represents the created annotation object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationCreatedEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that has the annotation that was created.</summary>
      <value>Value that indicates the index of the sub-cell that has the annotation that was created.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationEllipse">
      <summary>Represents the class that contains the properties of the annotation ellipse action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationEllipse.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationEllipse class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationEllipse.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationEllipse class, specifying how the ellipse is to be drawn.</summary>
      <param name="createFromCenter">true to create the ellipse from center, false to create from edge.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationEllipse.CreateFromCenter">
      <summary>Indicates whether to create the object from the center or from the edge.</summary>
      <value>true to create the ellipse from the center; false to create from the edge.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationHilite">
      <summary>Represents the class that contains the properties of the annotation hilite action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationHilite.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationHilite class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationHilite.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationHilite class, specifying how to create it.</summary>
      <param name="createFromCenter">true to create the hilite from the center; false to create it from the edge.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationHilite.CreateFromCenter">
      <summary>Indicates whether to create the object from the center or from the edge.</summary>
      <value>true to create the object from the center, false to create it from the edge.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationRectangle">
      <summary>Represents the class that contains the properties of the annotation rectangle action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationRectangle.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationRectangle class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationRectangle.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationRectangle class.</summary>
      <param name="createFromCenter">true to create the ellipse from center, false to create from edge.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationRectangle.CreateFromCenter">
      <summary>Indicates whether to create the object from the center or from the edge.</summary>
      <value>true to create the object from the center, false to create it from the edge.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationRuler">
      <summary>Represents the class that contains the properties of the annotation ruler action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationRuler.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationRuler class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationRuler.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationRuler class.</summary>
      <param name="simpleRuler">true to create a ruler without tick marks (which means that the ruler will be like a line; otherwise, false.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationRuler.SimpleRuler">
      <summary>Indicates whether to draw the ruler along with the tick marks.</summary>
      <value>true to draw the ruler without tick marks (which means that the ruler will simply be a line); otherwise, false.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationText">
      <summary>Represents the class that contains the properties of the annotation text action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationText.#ctor">
      <summary>Initializes a new instance of the MedicalViewerAnnotationText class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerAnnotationText.#ctor(Color)">
      <summary>Initializes a new instance of the MedicalViewerAnnotationText class with explicit parameters.</summary>
      <param name="textColor">The color of the text.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerAnnotationText.TextColor">
      <summary>Gets or sets the color of the text.</summary>
      <value>The System.Drawing.Color object that represents the color of the text.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerBaseAction">
      <summary>Represents the base class for the action classes.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseAction.#ctor">
      <summary>Initializes a new instance of the MedicalViewerBaseAction class.</summary>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerBaseCell">
      <summary>Represents the base cell class that contains the basic cell properties and methods that the user must inherit his custom control from in order to be able to add the custom control to the MedicalViewer.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.#ctor">
      <summary>Initializes a new Leadtools.MedicalViewer.MedicalViewerBaseCell class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.#ctor(Leadtools.MedicalViewer.MedicalViewerLayoutPosition)">
      <summary>Initializes a new instance of the MedicalViewerCell class.</summary>
      <param name="location">The location of the cell in the viewer.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.AddAction(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Adds a new action to the medical viewer.</summary>
      <param name="actionType">The action to be added.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationAttach(Leadtools.Annotations.Engine.AnnContainer)">
      <summary>Called when AnnAutomation.Attach is called.</summary>
      <param name="container">The container to attach.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationDetach">
      <summary>Called when AnnAutomation.Detach is called.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationInvalidate(Leadtools.LeadRectD)">
      <summary>Invalidates the specified region of the control.</summary>
      <param name="invalidateRect">A Leadtools.LeadRectD that represents the region to invalidate. If this value is LeadRectD.Empty, then the entire control area must be invalidated. This value is in pixel control coordinate.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Calibrate(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit)">
      <summary>Calibrates the cell based on information provided by the user. This allows the user to calibrate a cell without using an annotation ruler.</summary>
      <param name="sourceDistance">The old length to be calibrated.</param>
      <param name="sourceMeasurementUnit">The unit of measure.</param>
      <param name="targetDistance">The new length.</param>
      <param name="targetMeasurementUnit">The unit of measure.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Calibrate(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,Leadtools.MedicalViewer.MedicalViewerCalibrationAxis)">
      <summary>Calibrates the cell along the specified axis based on information provided by the user. This allows the user to calibrate a cell without using an annotation ruler.</summary>
      <param name="sourceDistance">The old length to be calibrated.</param>
      <param name="sourceMeasurementUnit">The unit of measure.</param>
      <param name="targetDistance">The new length.</param>
      <param name="targetMeasurementUnit">The unit of measure.</param>
      <param name="axis">The calibration axis.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.CalibrateRuler(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit)">
      <summary>Changes the length of the selected annotation ruler according to the new value.</summary>
      <param name="distance">The new length of the annotation ruler.</param>
      <param name="measurementUnit">The unit of measure</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.CalibrateRuler(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,Leadtools.MedicalViewer.MedicalViewerCalibrationAxis)">
      <summary>Changes the length of the selected annotation ruler according to the new value.</summary>
      <param name="distance">The new length of the annotation ruler.</param>
      <param name="measurementUnit">The unit of measure.</param>
      <param name="axis">The calibration axis.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.CanExecuteAction(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>A method that is used to determine whether the action *actionType* can be executed in the Medical Viewer Cell.</summary>
      <param name="actionType">MedicalViewerActionTypethat represents the action which will be tested if it can be executed in the Medical Viewer Cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.DeclareActionAsAnnotation(Leadtools.MedicalViewer.MedicalViewerActionType,System.Type)">
      <summary>Declares the custom action sent as annotation action.</summary>
      <param name="action">the custom action index that will be identified as a custom annotation action.</param>
      <param name="annotationObjectType">the type of the custom annotation object, you can retrieve this value by using typeof().</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.DeleteSelectedAnnotation">
      <summary>This method deletes the selected annotation from the cell and active sub-cell annotation container.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.DeleteTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment)">
      <summary>Deletes the tag (overlay text) of a cell.</summary>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="alignment">The overlay text alignment.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.EditTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagInformation)">
      <summary>Edits the tag (overlay text) of a cell.</summary>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="position">The overlay text alignment.</param>
      <param name="information">A MedicalViewerTagInformation object that contains the new data for the tag.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.FlipAnnotationContainer">
      <summary>Flips all of the cell annotation containers.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.FlipLabels">
      <summary>Flips the label tags of an image in the cell with the specified parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.FlipOrientation">
      <summary>Flips the orientation of an image in the cell with the specified parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetActionButton(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Retrieves the mouse button associated with the specified action.</summary>
      <param name="actionType">The action for which the mouse button information is being obtained.</param>
      <returns>MedicalViewerMouseButtons enumeration value that represents the assigned mouse button.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetActionFlags(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Retrieves the flags associated with the specified action.</summary>
      <param name="actionType">The action which to retrieve its flags.</param>
      <returns>MedicalViewerActionFlags enumeration that indicates the flags associated with the specified action.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Gets the current properties for the specified action.</summary>
      <param name="actionType">The specified action.</param>
      <returns>A MedicalViewerBaseAction that contains the retrieved properties.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetAnnotationContainer">
      <summary>Gets the Leadtools.Annotations.Engine object which represents the annotation container.</summary>
      <returns>For an example, refer to MedicalViewerMultiCell.GetAnnotationContainer</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetCellRulerLength(System.Int32)">
      <summary>Gets or sets the value that represents the length of the specified ruler.</summary>
      <param name="horizontal">int</param>
      <returns>The length of the specified ruler. int</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetOffset">
      <summary>Gets the current coordinates of the image.</summary>
      <returns>Point2D object which represents the current coordinates of the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetSelectedAnnotationAttributes">
      <summary>Retrieves the selected annotation attributes for the cell.</summary>
      <returns>A MedicalViewerAnnotationAttributes object that contains the selected annotation attributes.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment)">
      <summary>Retrieves the tag (overlay text) for a cell.</summary>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="alignment">The overlay text alignment.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetWindowLevelCenter">
      <summary>Gets the window level center value for the image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetWindowLevelWidth">
      <summary>Gets the window level width value for the image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Invalidate">
      <summary>Redraws the cell and causes a paint message to be sent to the Leadtools.MedicalViewer control that owns this cells.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsActionAdded(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Determines whether the specified action has been added to the container (using the AddAction method).</summary>
      <param name="actionType">The action.</param>
      <returns>true if the action is added; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsValidForAction(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerActionFlags)">
      <summary>Determines whether the specified operation can be applied to the specified action.</summary>
      <param name="actionType">The action being tested.</param>
      <param name="applyingOperation">Flags that will be checked.</param>
      <returns>true if the applying operation is valid to be assigned to the action; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsValidForAction(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerMouseButtons)">
      <summary>Determines whether the specified mouse button can be assigned to the specified action.</summary>
      <param name="actionType">The type of action being tested.</param>
      <param name="mouseButton">The mouse button that will be checked.</param>
      <returns>true if the mouse button can be assigned to the action; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsValidForAction(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerMouseButtons,Leadtools.MedicalViewer.MedicalViewerActionFlags)">
      <summary>Determines whether the specified mouse button and applying operation can be set to the specified action.</summary>
      <param name="actionType">The action being tested.</param>
      <param name="mouseButton">The mouse button that will be checked.</param>
      <param name="applyingOperation">Flags that will be checked.</param>
      <returns>true if the mouse button and the flags are valid to be assigned to the action; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.LoadAnnotations(System.IO.Stream)">
      <summary>Loads the annotation container(s) in a cell.</summary>
      <param name="stream">A System.IO.Stream that contains the file being loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.LoadAnnotations(System.String)">
      <summary>Loads the annotation container(s) in a cell.</summary>
      <param name="fileName">A string that contains the path to the file being loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Match(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Matches the cell property specified by _action_ to _sourceCell_.</summary>
      <param name="action">Enumeration that represents the action to be matched.</param>
      <param name="sourceCell">The source cell that has the action parameters to be applied to this cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnAutomationDoubleClick(Leadtools.Annotations.Engine.AnnPointerEventArgs)">
      <summary>Must be called when the pointer (mouse or touch) is double clicked or tapped on the control.</summary>
      <param name="args">Leadtools.Annotations.Engine.AnnPointerEventArgs that contains the location information on the pointer event.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnAutomationPointerDown(Leadtools.Annotations.Engine.AnnPointerEventArgs)">
      <summary>Must be called when the pointer (mouse or touch) is pressed down or tapped on the control.</summary>
      <param name="args">Leadtools.Annotations.Engine.AnnPointerEventArgs that contains the location information on the pointer event.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnAutomationPointerMove(Leadtools.Annotations.Engine.AnnPointerEventArgs)">
      <summary>Must be called when the pointer (mouse or touch) is moving or dragging on the control.</summary>
      <param name="args">Leadtools.Annotations.Engine.AnnPointerEventArgs that contains the location information on the pointer event.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnAutomationPointerUp(Leadtools.Annotations.Engine.AnnPointerEventArgs)">
      <summary>Must be called when the pointer (mouse or touch) is released up from the control.</summary>
      <param name="args">Leadtools.Annotations.Engine.AnnPointerEventArgs that contains the location information on the pointer event.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RefreshAnnotation">
      <summary>Repaints the annotations on the sub-cell or cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RefreshAnnotation(System.Int32)">
      <summary>Repaints the annotations on the sub-cell or cell.</summary>
      <param name="subCellIndex">the sub-cell index of the cell which to repaint its annotations.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RemoveAction(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Removes the specified action from the medical viewer.</summary>
      <param name="actionType">The action to be removed.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.ResetWindowLevelValues">
      <summary>Resets the image window level to its default values.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.ReverseAnnotationContainer">
      <summary>Reverses all of the cell annotation containers.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.ReverseLabels">
      <summary>Reverses the label tags of an image in the cell with the specified subCellIndex.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.ReverseOrientation">
      <summary>Reverses the orientation of an image in the cell with the specified subCellIndex.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RotateAnnotationContainer(System.Double)">
      <summary>Rotates all the cell annotation containers by the specified amount.</summary>
      <param name="angle">The amount of rotation.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RotateLabels(System.Int32)">
      <summary>Rotates the label tags of an image in the cell with the specified parameters.</summary>
      <param name="degree">The rotation angle. The values must be multiple of 90 (i.e. 270, 180, 90, 0, -90, -180, etc.).</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.RotateOrientation(System.Int32)">
      <summary>Rotates the orientation of an image in the cell with the specified parameters.</summary>
      <param name="angle">The angle of rotation, the values must be multiple of 90 (i.e. 270, 180, 90, 0, -90, -180, etc.).</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SaveAnnotations(System.IO.Stream)">
      <summary>Saves the annotation container(s) of a cell to a file.</summary>
      <param name="stream">A System.IO.Stream to save the annotation container to.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SaveAnnotations(System.String)">
      <summary>Saves the annotation container(s) of a cell to a file.</summary>
      <param name="fileName">A string that contains the path to the file to save the annotation container to.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetAction(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerMouseButtons,Leadtools.MedicalViewer.MedicalViewerActionFlags)">
      <summary>Assigns the action to a specific mouse button.</summary>
      <param name="actionType">The action to be assigned.</param>
      <param name="mouseButton">The Mouse event to be associated with the specified action.</param>
      <param name="applyingOperation">Indicates the cells that the action is applied to and when the action is applied.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerBaseAction)">
      <summary>Sets the current properties for the specified action.</summary>
      <param name="actionType">The action for which the properties are being set.</param>
      <param name="actionProperties">The properties to be set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetAnnotationContainer(Leadtools.Annotations.Engine.AnnContainer)">
      <summary>Sets the Leadtools.Annotations.Engine.AnnContainer object which represents the annotation container.</summary>
      <param name="annContainer"></param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetDefaultWindowLevelValues(System.Int32,System.Int32)">
      <summary>Sets the default window level values for all the images in the cell.</summary>
      <param name="width">The default window level width value.</param>
      <param name="center">The default window level center value.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetOffset(System.Double,System.Double)">
      <summary>Translates the image position according to the provided X and Y values.</summary>
      <param name="x">The x coordinates that represents the new position of the image.</param>
      <param name="y">The y coordinates that represents the new position of the image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetOffset(Leadtools.MedicalViewer.Point2D)">
      <summary>Translates the image position according to the provided X and Y values.</summary>
      <param name="point">A Point2D object that represents the new position of the image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="position">The **row** parameter alignment.</param>
      <param name="type">The type of the tag.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType,System.String)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="position">The **row** parameter alignment.</param>
      <param name="type">The type of tag.</param>
      <param name="userText">The user text.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetTag(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType,System.String,Font,Color)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">The **row** parameter alignment.</param>
      <param name="type">The type of the tag.</param>
      <param name="userText">The user text.</param>
      <param name="font">The font that will be used to draw the tag over the cell.</param>
      <param name="fontColor">The color of the text.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetWindowLevel(System.Int32,System.Int32)">
      <summary>Sets the window level width and center values for the image.</summary>
      <param name="width">A System.Int32 value that represents the new window level width value.</param>
      <param name="center">A System.Int32 value that represents the new window level center value.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewerBaseCell.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.Finalize">
      <summary>This member overrides Finalize.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.GetCellActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType,System.Int32)">
      <summary>Gets the current properties for the specified action.</summary>
      <param name="actionType">The specified action.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell for which the properties will be retrieved.</param>
      <returns>A MedicalViewerBaseAction that contains the retrieved properties.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsInputKey(Keys)">
      <summary>Overrides Control.IsInputKey.</summary>
      <param name="keyData">One of the System.Windows.Forms.Keys values.</param>
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnHandleCreated(System.EventArgs)">
      <summary>Overrides Control.OnHandleCreated.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnKeyDown(KeyEventArgs)">
      <summary>Overrides Control.OnKeyDown.</summary>
      <param name="e">An System.Windows.Forms.KeyEventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.OnPropertyChanged(System.String)">
      <summary>Fires the PropertyChanged event.</summary>
      <param name="info">The name of the property changed.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.SetCellActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerBaseAction,System.Int32)">
      <summary>Sets the current properties for the specified action.</summary>
      <param name="actionType">The action for which the properties are being set.</param>
      <param name="actionProperties">The properties to be set.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell for which the properties are being set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBaseCell.WndProc(Message@)">
      <summary>Processes Windows messages. Overrides WndProc.</summary>
      <param name="m">System.Windows.Forms.MessageRepresents the Windows Message to process.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationClicked">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationCreated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationDoubleClick">
      <summary>Event that must trigger when the pointer (mouse or touch) is double-clicked or double-tapped on the control. Leadtools.Annotations.Engine.AnnPointerEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationEnabledChanged">
      <summary>Event that must trigger whenever the value of AutomationEnabled is changed.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationGotFocus">
      <summary>Event that must trigger when the control receives the focus. LeadEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationLostFocus">
      <summary>Event that must trigger when the control loses the focus. LeadEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationPointerDown">
      <summary>Event that must trigger when the pointer (mouse or touch) is down or tapped on the control. Leadtools.Annotations.Engine.AnnPointerEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationPointerMove">
      <summary>Event that must trigger when the pointer (mouse or touch) is moved or dragged on the control. Leadtools.Annotations.Engine.AnnPointerEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationPointerUp">
      <summary>Event that must trigger when the pointer (mouse or touch) is up or released from the control. Leadtools.Annotations.Engine.AnnPointerEventArgs</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationSizeChanged">
      <summary>Event that must trigger whenever the size of the control changes.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationTransformChanged">
      <summary>Event that must trigger whenever the value of AutomationTransform is changed.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationUseDpiChanged">
      <summary>Event that must trigger whenever the value of AutomationUseDpi is changed.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.BuiltInTag">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.CellDragDrop">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.CellDragOver">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.CellParentChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.ChangingWindowLevel">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.CustomAnnotationDataRequested">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.DeleteAnnotation">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.DesignerCreated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.ProbeToolTextChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.SelectedSubCellChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.SpyGlassStarted">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.StartDrawingAnnotation">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerBaseCell.UserTag">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ActionCount">
      <summary>Gets the number of actions that have been added to the MedicalViewer.</summary>
      <value>The number of actions that have been added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ActiveBorderColor">
      <summary>Gets or sets the border color of the selected cell.</summary>
      <value>The border color of the selected cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ActiveSubCellBorderColor">
      <summary>Gets or sets the color of the active sub-cell border color.</summary>
      <value>The color of the active sub-cell border color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AlignScrollBarToLeft">
      <summary>Gets or sets the value that determines whether to align the cell scrollbar to the left or right.</summary>
      <value>True to align the scroll bar to the left; false to align the scrollbar to the right.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationDefaultCursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the handle of a selected annotation.</summary>
      <value>A System.Windows.Forms.Cursors object that represents the cursor to display when the mouse pointer is over the handle of a selected annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationMoveCursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over a selected annotation object.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is over a selected annotation object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationPrecedency">
      <summary>Gets or sets whether to give the priority to the annotation over any other action or not.</summary>
      <value>True to give priority to the annotation over any other action, it is false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AnnotationSelectCursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over a non-selected annotation.</summary>
      <value>A System.Windows.Forms.Cursors object that represents the cursor to display when the mouse pointer is over a non-selected annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Automation">
      <summary>Gets the automation object for this cell.</summary>
      <value>Leadtools.Annotations.Automation.AnnAutomation</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationAntiAlias">
      <summary>Gets or sets a value that indicate whether anti-aliasing should be used during rendering.</summary>
      <value>**true** to turn on anti-aliasing should be used during rendering, otherwise; **false**.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationContainer">
      <summary>Gets the Leadtools.Annotations.Engine.AnnContainer for this MedicalViewerBaseCell.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationContainerIndex">
      <summary>Gets or sets the active container index.</summary>
      <value>The 0-based index of the active container.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationDataProvider">
      <summary>Gets or sets the data provider to use for getting and setting image data.</summary>
      <value>The Leadtools.Annotations.Engine.AnnDataProvider object used when getting and setting image data.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationDpiX">
      <summary>Gets the horizontal resolution of the screen.</summary>
      <value>The horizontal resolution of the screen. The provided implementation returns the width of ImageViewer.ScreenDpi.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationDpiY">
      <summary>Gets the vertical resolution of the screen.</summary>
      <value>The vertical resolution of the screen. The provided implementation returns the height of ImageViewer.ScreenDpi.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationEnabled">
      <summary>Gets a value that indicates whether the automation control is enabled and can receive mouse, touch or keyboard events.</summary>
      <value>**true** if the automation control is enabled; otherwise, it is **false**.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationGetContainersCallback">
      <summary>Gets or sets the callback that is used to obtain the collection of annotation containers used by the automation.</summary>
      <value>The callback that is used to obtain the collection of annotation containers used by the automation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationManager">
      <summary>Gets the automation manager for this cell.</summary>
      <value>True to allow the user to draw the annotation again, false to go back to select mode after drawing the first annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationObject">
      <summary>Gets or sets the automation object.</summary>
      <value>The automation object being used with this control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationRotateAngle">
      <summary>Gets the automation object rotation angle.</summary>
      <value>Value that represents the automation rotation angle.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationScaleFactor">
      <summary>Gets the automation scale factor value.</summary>
      <value>Value that represents the automation scale factor value.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationScrollOffset">
      <summary>Gets the scroll offset being used by the control.</summary>
      <value>The scroll offset being used by the control in pixels.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationTransform">
      <summary>Gets the matrix object that represents the current transformation for the annotations objects.</summary>
      <value>The matrix object that represents the current transformation for the annotations objects.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationUseDpi">
      <summary>Gets a value that indicates whether to use the resolution values when viewing an image.</summary>
      <value>**true** to use the resolution values when viewing an image; otherwise, it is **false**.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationXResolution">
      <summary>Gets the horizontal resolution of the image.</summary>
      <value>The horizontal resolution of the image. The provided implementation returns the width of ImageViewer.ImageResolution.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.AutomationYResolution">
      <summary>Gets the vertical resolution of the image.</summary>
      <value>The vertical resolution of the image. The provided implementation returns the height of ImageViewer.ImageResolution.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.BorderStyle">
      <summary>Gets or sets an enumerated value that indicates the style of the selected cell border.</summary>
      <value>Enumerated value that indicates the style of the selected cell border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.CellBackColor">
      <summary>Gets or sets the color of the cell area.</summary>
      <value>The color of the cell area.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.CreateFromCenter">
      <summary>Gets or sets the value that determines whether to draw the annotation object from the center outward, or from edge to edge.</summary>
      <value>true to draw the annotation object from the center, false to draw from the edge.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Cursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is hovering over the medical control.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the mouse pointer is hovering over the medical control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DefaultAnnotationColor">
      <summary>Gets or sets the System.Drawing.Color that determines the default annotation color that will be used when drawing the annotation using the annotation action.</summary>
      <value>System.Drawing.Colorthe default annotation color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DefaultAnnotationFont">
      <summary>Gets or sets the Leadtools.Annotations.Engine.AnnFont class that represents the font used for the text in all the annotation objects.</summary>
      <value>Leadtools.Annotations.Engine.AnnFont class that represents the font used for the text in all the annotation objects that will be drawn later.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DefaultAnnotationThickness">
      <summary>Gets or sets the value that indicates the thickness of the annotation object created using the annotation action.</summary>
      <value>Value that indicates the thickness of the annotation object created using the annotation action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DefaultAnnotationUnit">
      <summary>Gets or sets the value that determines the default unit that will be used when the user draws an annotation.</summary>
      <value>A Leadtools.Annotations.Engine.AnnUnit enumeration value that determines the default unit that will be used when the user draws an annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DefaultRubberStampType">
      <summary>Gets or sets the default rubber stamp type that will be used when creating a new rubber stamp.</summary>
      <value>An Leadtools.Annotations.Engine.AnnRubberStampType object that will be used to create a new rubber stamp</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DesignImage">
      <summary>Gets or sets the design image to display when in layout design mode.</summary>
      <value>The image to display.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DesignText">
      <summary>Gets or sets the design text to display when in layout design mode.</summary>
      <value>The text to display.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.DisplayRulers">
      <summary>Gets or sets the enumerated MedicalViewerRulers value that indicates the displayed rulers.</summary>
      <value>An enumerated MedicalViewerRulers value that indicates the displayed rulers.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.EnableRulerLongTicks">
      <summary>Enables or disables the long ticks on the cell ruler.</summary>
      <value>true to enable the long tick; false to disable the long tick.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.FixedTextSize">
      <summary>Gets or sets the value that determines whether to maintain a fixed size of the text font, so if the user scale the annotations up or down, the text size will remain the same.</summary>
      <value>true to maintain a fixed size of the text font; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Font">
      <summary>Gets or sets the font that is used to draw the tags.</summary>
      <value>Font that represents the font that will be used to draw the tags (overlay text).</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Frozen">
      <summary>Gets or sets the value that determines whether the cell is frozen.</summary>
      <value>true if the cell is frozen; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.IsAutomationEventsHooked">
      <summary>Gets or sets whether the automation events are hooked or not.</summary>
      <value>true if the automation event are hooked, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.KeepDrawingAnnotation">
      <summary>Gets or sets whether the automation allows the user to draw the same object again or should the automation go directly to select mode after drawing for the first time.</summary>
      <value>True to allow the user to draw the annotation again, false to go back to select mode after drawing the first annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.LayoutPosition">
      <summary>Gets or sets the layout position.</summary>
      <value>The layout position.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.MaintainAnnotationObjectAspectRatio">
      <summary>Gets or sets the value that determines whether to maintain the aspect ratio when editing the annotation object using the mouse or not.</summary>
      <value>true to maintain the aspect ratio; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.MaintainAnnotationThickness">
      <summary>Gets or sets the value that determines whether to keep the annotation thickness as it is when scale the cell up or down.</summary>
      <value>true to keep the thickness from changing when scaling the cell/sub-cell; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.MaintainTextOrientation">
      <summary>Gets or sets the value that determines whether to keep the text orientation as it is when rotating, flipping or reversing the annotation container.</summary>
      <value>true to keep the text orientation; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.MeasurementUnit">
      <summary>Gets or sets the unit of measure for the rulers.</summary>
      <value>The unit of measure for the rulers.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.NonActiveBorderColor">
      <summary>Gets or sets the color of the non-selected cell border.</summary>
      <value>The color of the non-selected cell border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.OverlapPriority">
      <summary>Gets or sets the overlap priority.</summary>
      <value>The overlap priority. The range is from 1 to 100.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.OverlayTextSize">
      <summary>Gets or sets the size of the cell or sub-cell tags.</summary>
      <value>Value that indicates the size of the cell or sub-cell tags. If set to zero, the size of the tag will depend on the size of the cell or the sub-cell to identify the size of the tag. Default is 0.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ParentViewer">
      <summary>Gets the medical viewer object which is the owner of the cell.</summary>
      <value>A Leadtools.MedicalViewer object which is the owner of the cell. If the cell has not been added to the medical viewer, then the method will return null.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Position">
      <summary>Gets or sets the row/column position of the cell.</summary>
      <value>The MedicalViewerCellPosition object that represents the row and column position of the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RenderingEngine">
      <summary>Gets or sets the rendering engine associated with this control.</summary>
      <value>The rendering engine associated with this control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RulerInColor">
      <summary>Gets or sets the color of the ruler.</summary>
      <value>The color of the ruler. This is useful if the value of the RulerStyle is MedicalViewerRulerStyle.Bordered.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RulerLength">
      <summary>Gets or sets the length of the cell ruler.</summary>
      <value>The length of the cell ruler. Valid values are range from 1 to 1000.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RulerOutColor">
      <summary>Gets or sets the color of the ruler boundaries.</summary>
      <value>The color of the ruler boundaries. This is useful if the value of the RulerStyle is MedicalViewerRulerStyle.Bordered.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RulerStyle">
      <summary>Gets or sets an enumerated value that indicates the style of the cell horizontal and vertical rulers.</summary>
      <value>Enumerated value that indicates the style of the cell horizontal and vertical rulers.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.RulerTickSize">
      <summary>Gets or sets the length of the cell ruler ticks.</summary>
      <value>The length of the cell ruler ticks.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ScaleTagType">
      <summary>Gets or sets the style of scale overlay tag value which will be displayed on the cell.</summary>
      <value>A MedicalViewerScaleTagType enumeration that represents the style of scale overlay tag value which will be displayed on the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Selected">
      <summary>Gets or sets the value that determines whether the cell is selected.</summary>
      <value>true if the cell is selected; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.SelectMultipleAnnotation">
      <summary>Gets or sets the value that indicates whether to allow the selection of multiple annotation or not.</summary>
      <value>true to allow the user to select multiple annotation, false to prevent multiple annotation selection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ShowCellRulerUnit">
      <summary>Shows or hides the ruler measurement unit.</summary>
      <value>true to show the ruler measurement unit; false to hide the ruler measurement unit.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ShowControlPoints">
      <summary>Gets or sets the value that indicates whether to display the annotation control point or not.</summary>
      <value>true to show the annotation control point; otherwise, it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ShowRotationHandle">
      <summary>Gets or sets the value that determines whether to show the annotation rotation handle.</summary>
      <value>true to show the rotation handle along with the rotation center; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ShowRulerLength">
      <summary>Gets or sets the value that indicates whether to show the cell ruler length.</summary>
      <value>true to display the cell ruler length; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.ShowTags">
      <summary>Gets or sets the value that indicates whether to show the tags on the cells.</summary>
      <value>true to show the tags, false to hide the tags.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.SubCells">
      <summary>Gets the MedicalViewerCollection assigned to the cell.</summary>
      <value>The MedicalViewerCollection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.Synchronization">
      <summary>Gets the MedicalViewerSynchronization assigned to the cell, which contains the collection where to add synchronization objects.</summary>
      <value>The MedicalViewerSynchronization.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.TextColor">
      <summary>Gets or sets the color of the cell overlay text.</summary>
      <value>The color of the cell overlay text.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.TextQuality">
      <summary>Gets or sets an enumerated value that indicates the quality of the overlay text.</summary>
      <value>Enumerated value that indicates the style of the quality of the overlay text.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.TextShadowColor">
      <summary>Gets or sets the color of the cell overlay text shadow.</summary>
      <value>The color of the cell overlay text shadow.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBaseCell.CreateParams">
      <summary>Overrides the property CreateParams.</summary>
      <value>Overrides the property CreateParams.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerBuiltInTagEventArgs">
      <summary>The MedicalViewerBuiltInTagEventArgs class provides data for the MedicalViewerBaseCell.BuiltInTag event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerBuiltInTagEventArgs.#ctor(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagType,System.String)">
      <summary>Initializes a new instance of the MedicalViewerBuiltInTagEventArgs class object with explicit parameters.</summary>
      <param name="subCellIndex">sub-cell index of the cell</param>
      <param name="tagType">the type of the tag.</param>
      <param name="text">the tag text.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBuiltInTagEventArgs.SubCellIndex">
      <summary>(Read only) Gets the index of sub-cell that contains the tag.</summary>
      <value>Value that represents the index of sub-cell that contains the tag.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBuiltInTagEventArgs.TagType">
      <summary>(Read only) Gets the type of the tag.</summary>
      <value>A MedicalViewerTagType enumeration that represents the type of the tag.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerBuiltInTagEventArgs.Text">
      <summary>Gets or sets the value that represents the tag text that will be displayed.</summary>
      <value>A string that represents the tag text that will be displayed.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCell">
      <summary>Represents the class that is used to create and adjust the cell being added to / removed from the Leadtools.MedicalViewer control.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.#ctor">
      <summary>Initializes a new MedicalViewerCell class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.#ctor(Leadtools.RasterImage)">
      <summary>Initializes a new MedicalViewerCell class object that has an image attached.</summary>
      <param name="image">The image that will be attached to this cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.#ctor(Leadtools.RasterImage,System.Boolean)">
      <summary>Initializes a new MedicalViewerCell class object that has an image that can be set to fit within the image.</summary>
      <param name="image">The image that will be attached to this cell.</param>
      <param name="fit">true to fit the image within the cell area; otherwise, false.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.#ctor(Leadtools.RasterImage,Leadtools.MedicalViewer.MedicalViewerLayoutPosition)">
      <summary>Initializes a new instance of the MedicalViewerCell class.</summary>
      <param name="image">The image that will be attached to this cell.</param>
      <param name="location">The location of the cell in the viewer.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.BeginUpdate">
      <summary>Stops the cell from being refreshed if any changes are applied. This is useful to increase the control speed efficiency.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.BestAligned(System.Int32,Leadtools.MedicalViewer.Point3D[],double[][])">
      <summary>Returns the index of the element that is best aligned with the specified cell frame.</summary>
      <param name="subCellIndex">The index of the cell frame.</param>
      <param name="imagePosition">An Array that contains candidate positions.</param>
      <param name="imageOrientation">An Array that contains candidate orientations.</param>
      <returns>The index of the element that is best aligned with the specified cell frame.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.ConvertAnnotationToRegion(Leadtools.RasterRegionCombineMode,System.Boolean)">
      <summary>Converts the selected annotation into a region of interest.</summary>
      <param name="combineMode">A Leadtools.RasterRegionCombineMode value that indicates how to create a region, if one is defined.</param>
      <param name="deleteAnnotation">true to delete the annotation after creating the region, otherwise it is false.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.DisposeCutPlanesData">
      <summary>Disposes the cut-plane data.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.DisposeInternalData">
      <summary>Disposes the cut-plane data created by either the cut-line or the panoramic image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.EnableLowMemoryUsage(System.Boolean,System.Int32,System.Int32)">
      <summary>Enables loading frames only when being viewed, to more efficiently use the system memory.</summary>
      <param name="enabled">true to enable the low memory usage, false to disable the low memory usage.</param>
      <param name="pageCount">The number of total frames that will be included in the specified cell.</param>
      <param name="hiddenFramesCount">The number of unseen frames that the control will load. Setting this value for example, to 2, makes the control load the 2 frames before the displayed frame as well as the 2 frames after the viewed frame.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.EnableLowMemoryUsage(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerImageInformation[])">
      <summary>Enables loading frames only when viewed to more efficiently use the system memory.</summary>
      <param name="hiddenFramesCount">The number of unseen frames that the control will load. Setting this value for example, to 2, makes the control load the 2 frames before the viewed frames as well as the 2 frames after the viewed frames.</param>
      <param name="imageCount">The number of total frames that will be included in the specified cell.</param>
      <param name="imagesInformation">An object that contains the image information being set. Can be null</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.EndUpdate">
      <summary>Refreshes the control to include all the changes made after using the BeginUpdate method.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.FlipImage">
      <summary>Flips all the images in the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetActionKeys(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Gets the keystroke combination for the specified action.</summary>
      <param name="actionType">The specified action which is having its keystroke combination retrieved.</param>
      <returns>A MedicalViewerKeys that contains the retrieved keystrokes combination.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType,System.Int32)">
      <summary>Gets the current properties for the specified action.</summary>
      <param name="actionType">The specified action.</param>
      <param name="subCellIndex">Index of the sub-cell for which the properties will be retrieved.</param>
      <returns>A MedicalViewerBaseAction that contains the retrieved properties.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetCellImage">
      <summary>Returns a printable version of the cell.</summary>
      <returns>System.Drawing.Image object which is the printable version of the cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetCellImage(System.Boolean,Leadtools.LeadRectD,Leadtools.MedicalViewer.MedicalViewerCellImageFeatures)">
      <summary>Returns a printable version of the cell using the specified dimensions.</summary>
      <param name="exploded">Set it to **true** to print the sub-cell after scaling it up to fit the entire cell area. Otherwise, set it to **false**.</param>
      <param name="displayRect">The desired LeadRectD used to specify the size of the output image.</param>
      <param name="features">A MedicalViewerCellImageFeatures value that lets you select which part of the cell besides the image to draw.</param>
      <returns>`System.Drawing.Image` object which is the printable version of the cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetCellImage(System.Boolean,Leadtools.MedicalViewer.MedicalViewerCellImageFeatures)">
      <summary>Returns a printable version of the cell.</summary>
      <param name="exploded">true to print the sub-cell, but after scaling it up to fit the entire cell area.</param>
      <param name="features">An Enumerated MedicalViewerCellImageFeatures value that lets you select which part of the cell besides the image to draw.</param>
      <returns>System.Drawing.Image object which is the printable version of the cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetDisplayedClippedImageRectangle">
      <summary>Gets the System.Drawing.Rectangle that represents the part of the cell or sub-cell that is occupied by the image.</summary>
      <returns>A System.Drawing.Rectangle that represents the part of the cell or sub-cell that is occupied by the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetDisplayedImageRectangle">
      <summary>Gets the System.Drawing.Rectangle that represents the image boundaries. This changes as you zoom in/out or offset the image.</summary>
      <returns>A System.Drawing.Rectanglethat represents the image boundaries. This changes as you zoom in/out or offset the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetDisplayedRectangle">
      <summary>Gets the System.Drawing.Rectangle that represent the display area of the cell/sub-cell.</summary>
      <returns>A System.Drawing.Rectangle that represent the display area of the cell/sub-cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetImagePosition(System.Int32)">
      <summary>Gets the image position of the cell frames based on the corresponding index.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell to retrieve its image position.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetPage(System.Int32)">
      <summary>Gets the image page with the specified sub-cell index.</summary>
      <param name="pageIndex">A zero-based index of the sub-cell to retrieve its frame.</param>
      <returns>Leadtools.RasterImage that represents the image assigned to the specified sub-cell index.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetPalette(Leadtools.MedicalViewer.MedicalViewerPaletteType)">
      <summary>Returns an array that contains the built-in palette entries of the look up table specified by _lookupTableType_.</summary>
      <param name="lookupTableType">The lookup table type.</param>
      <returns>A byte array that contains the built-in palette entries of the look up table specified by \lookupTableType\.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetRotateImagePerspectiveAngle">
      <summary>Gets the rotation angle for the image in the cell.</summary>
      <returns>The image rotation angle.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.GetScale">
      <summary>Gets the scale of the image.</summary>
      <returns>The scale value.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.InvertImage">
      <summary>Inverts all the images in the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.IsImageFlipped">
      <summary>Retrieves whether the image has been flipped or not.</summary>
      <returns>true if the image is flipped; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.IsImageInverted">
      <summary>Retrieves a value that indicates whether the image in the selected sub-cell index has been inverted.</summary>
      <returns>true if the image is inverted; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.IsImageReversed">
      <summary>Retrieves a value that indicates whether the image has been reversed.</summary>
      <returns>true if the image is reversed; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.LoadRegion(System.String)">
      <summary>Loads regions from a file.</summary>
      <param name="fileName">A string that contains the path to the file that contains the region(s) to load.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.PointToClient(Point)">
      <summary>Returns the client coordinates (the cell coordinates) corresponding to the image coordinates specified by the user.</summary>
      <param name="point">The System.Drawing.Point object that represents the image coordinates.</param>
      <returns>A System.Drawing.Point object that contains the client (the cell) coordinates.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.PointToImage(Point)">
      <summary>Returns the image coordinates corresponding to the mouse coordinates specified by the user.</summary>
      <param name="point">The System.Drawing.Point object that represents the mouse coordinates.</param>
      <returns>A System.Drawing.Point object that contains the image coordinates.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.Refresh">
      <summary>Updates and recalculates the data of the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.RemoveRegion">
      <summary>Deletes the region from all of the images in the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.ResumeCalculation">
      <summary>Resumes the usual calculation logic of the reference line.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.ReverseImage">
      <summary>Reverses all the images in the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.RotateImagePerspective(System.Int32)">
      <summary>Rotates the perspective of the cell images by the specified rotation angle.</summary>
      <param name="angle">The rotation angle.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SaveRegion(System.String)">
      <summary>Saves cell regions to a file.</summary>
      <param name="fileName">A string that contains the path to the file to which to save the region.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetActionKeys(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerKeys)">
      <summary>Sets the keystroke combination for the specified action.</summary>
      <param name="actionType">The specified action which is having its keystroke combination set.</param>
      <param name="keyClass">A MedicalViewerKeys that contains the keystroke combination.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetActionProperties(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerBaseAction,System.Int32)">
      <summary>Sets the current properties for the specified action.</summary>
      <param name="actionType">The action for which the properties are being set.</param>
      <param name="actionProperties">The properties to be set.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell for which the properties are being set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetImagePerspective(Leadtools.RasterViewPerspective)">
      <summary>Sets the value that represents the image view perspective for all the frames in the medical viewer.</summary>
      <param name="viewPerspective">Leadtools.RasterViewPerspective enumeration that represents the view perspective to be set for all the cell frames.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetImagePerspective(Leadtools.RasterViewPerspective,System.Int32)">
      <summary>Sets the value that represents the image view perspective.</summary>
      <param name="viewPerspective">Leadtools.RasterViewPerspective enumeration that represents the view perspective to be set.</param>
      <param name="subCellIndex">A zero-based index of the frame for which to set the view perspective.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetImagePosition(System.Int32,Leadtools.MedicalViewer.Point3D,System.Boolean)">
      <summary>Set the image position of the cell frames based on the corresponding index.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell.</param>
      <param name="imagePosition">The image position to be set.</param>
      <param name="update">true to update the cell data based on the newly inserted image position.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetNoImageText(System.String)">
      <summary>Sets the text that will be displayed if the image is not loaded yet. This is used only with the low memory usage feature, please refer to EnableLowMemoryUsage</summary>
      <param name="text">The text that will be displayed until the image is loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetRequestedImage(Leadtools.RasterImage,System.Int32)">
      <summary>Sends the requested image to the control. This method is used when the low memory usage feature is enabled (for more information see EnableLowMemoryUsage(Boolean,Int32,Int32))</summary>
      <param name="image">A Image object that contains the pages to be set in response to the FrameRequested event.</param>
      <param name="index">the index of image in the cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetRequestedImage(Leadtools.RasterImage,System.Int32[],Leadtools.MedicalViewer.MedicalViewerSetImageOptions)">
      <summary>Sends the requested images to the control. This method is used when the low memory usage feature is enabled (for more information see EnableLowMemoryUsage(Int32,Int32,MedicalViewerImageInformation\[\]))</summary>
      <param name="image">A Image object that contains the pages to be set in response to the FrameRequested event.</param>
      <param name="indexes">Array of Integers containing the index of each page in \image\, respectively.</param>
      <param name="options">An enumerated MedicalViewerSetImageOptions value that specifies whether to insert the page or replace the page with the same index.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetRequestedImageThumbnail(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32)">
      <summary>Sends the requested images to the control. This method is used when the low memory usage feature is enabled (for more information see EnableLowMemoryUsage(Int32,Int32,MedicalViewerImageInformation\[\]))</summary>
      <param name="image">The thumbnail to be set.</param>
      <param name="index">The index of the thumbnail in the image.</param>
      <param name="width">The width of the original image.</param>
      <param name="height">The height of the original image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetRequestedImageThumbnail(Leadtools.RasterImage,System.Int32[],System.Int32[],System.Int32[])">
      <summary>Sends the requested images to the control. This method is used when the low memory usage feature is enabled (for more information see EnableLowMemoryUsage(Int32,Int32,MedicalViewerImageInformation\[\]))</summary>
      <param name="image">the thumbnails to be set.</param>
      <param name="indexes">Array of Integers containing the index of each thumbnail in the cell.</param>
      <param name="widthArray">Array of Integers containing the width of the original image to each thumbnail.</param>
      <param name="heightArray">Array of Integers containing the height of the original image to each thumbnail.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetScale(System.Double)">
      <summary>Sets the scale of all the sub-cell images inside the image by a specified value.</summary>
      <param name="scale">The new scale value to be set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SetScaleMode(Leadtools.MedicalViewer.MedicalViewerScaleMode)">
      <summary>Sets the scale mode for all of the sub-cells in a cell.</summary>
      <param name="scaleMode">An enumerated MedicalViewerScaleMode value that represents the scale mode to be set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.SuspendCalculation">
      <summary>Temporarily suspends the calculation logic of the reference line for the cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.UpdateView">
      <summary>Recalculates the cell's internal values in order to update the view according to the changes made to the image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.ZoomToRectangle(Rectangle)">
      <summary>Zooms the image towards the specified rectangle.</summary>
      <param name="rectangle">the zoom rectangle.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewer.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.OnHandleCreated(System.EventArgs)">
      <summary>Overrides Control.OnHandleCreated.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCell.OnUIChanged(Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs)">
      <summary>Raises the UIChanged</summary>
      <param name="args">An EventArgs that contains the event data.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.AnimationStarted">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.AnimationStopped">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CellMouseClick">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CellMouseDoubleClick">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CellMouseDown">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CellMouseMove">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CellMouseUp">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CustomPaint">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.CutlineCreated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.Data3DFrameRequested">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.Data3DRequested">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.DerivativeGenerated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.FramesLoaded">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.FramesRequested">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.MPRPolygonClicked">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.MPRPolygonCreated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.PaintImage">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.PanoramicDataRequested">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.PlaneCutLineClicked">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.PostPaint">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.PrePaint">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.RegionCreated">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.Resized">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UIChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionKeyDown">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionKeyUp">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionMouseDown">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionMouseMove">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionMouseUp">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCell.UserActionMouseWheel">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ActiveSubCell">
      <summary>Gets or sets the index of the active sub-cell.</summary>
      <value>Value that indicates the index of the active sub-cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.AlwaysInterpolate">
      <summary>Gets or sets the value that determines whether to apply the interpolation always, and not to switch to no-interpolation when any action is active.</summary>
      <value>true to make the cell interpolate the image all the time, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.Animation">
      <summary>Gets the animation class that contains the properties to animate and adjust the animation style of a cell that contains multiple frames.</summary>
      <value>A MedicalViewerAnimation object that contains the properties to animate and adjust the animation style of a cell that contains multiple frames.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ApplyActionOnMove">
      <summary>Gets or sets the value that indicates whether to apply the action on the rest of the sub-cells while dragging the mouse.</summary>
      <value>true to apply the action while dragging the mouse, false causes the action to be applied when the user releases the mouse.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ApplyOnIndividualSubCell">
      <summary>Gets or sets the value that indicates whether to (apply window level and alpha) action on only the activated sub-cells.</summary>
      <value>true to apply the (window level and alpha) action only to the activated sub-cells, false to apply the action on all sub-cells.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.AutoCutLineDataDelete">
      <summary>Gets or sets the value that indicates whether to remove the cut-line internal data once all the cut-lines have been removed or not.</summary>
      <value>true to remove the cut-line data once all the cut-lines has been removed from the cell, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.AutoDisposeInternalData">
      <summary>Gets or sets the value that indicates whether to automatically remove the internal data created by either the cut-line or the panoramic image.</summary>
      <value>true to remove the internal data, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.AutoMagnifyEnabled">
      <summary>Gets or sets the value that indicates whether to enable the automatic magnify glass. which is a magnify glass that works if the user only hovers over the cell.</summary>
      <value>true to enable the auto magnify glass; false to disable the auto magnify glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.AxialName">
      <summary>Gets or sets the string that will be used as overlay text for the axial cell.</summary>
      <value>A value that indicates the string that will be used as overlay text for the axial cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.BorderThickness">
      <summary>Gets or sets the cell border thickness.</summary>
      <value>Value that represents the border thickness of the cell. The default value is 1.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.CoronalName">
      <summary>Gets or sets the string that will be used as overlay text for the coronal cell.</summary>
      <value>A value that indicates the string that will be used as overlay text for the coronal cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.CustomLookupTable">
      <summary>Gets the collection of custom lookup table that the user can assign to any frame (image) in the cell.</summary>
      <value>MedicalViewerCollection collection that contains arrays of a custom lookup tables that the user can assign to any frame or image in the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.Derivative">
      <summary>Gets the value that indicates whether the cell has a derivative image out of the cut-plane.</summary>
      <value>true if the cell is derivative; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.DerivativeSource">
      <summary>Gets the cell object which is used to generate the derivative images to the cell.</summary>
      <value>A MedicalViewerCell object which is used to generate the derivative images for the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.FitImageToCell">
      <summary>Gets or sets the value that indicates whether to resize the image to make it fit within the cell area.</summary>
      <value>true to fit the image, false to display the image at its original size.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.FrameOfReferenceUID">
      <summary>Gets or sets the frame reference of UID information that will be used when implementing the reference line.</summary>
      <value>A value that indicates the frame reference of UID information that will be used when implementing the reference line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.Image">
      <summary>Gets or sets the image that will be displayed when the cell is added to the MedicalViewerCell.</summary>
      <value>A Leadtools.RasterImage object that represents the image that will be displayed when the cell is added to the MedicalViewerCell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ImageOrientation">
      <summary>Gets or sets an array of float values that represent the orientation of the image attached to this cell.</summary>
      <value>Array of float values that represent the orientation of the image attached to this cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.InteractiveInterpolation">
      <summary>Gets or sets the value that determines whether to apply interpolation during the action, or only when releasing the mouse button or key.</summary>
      <value>true to activate the interactive interpolation feature; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.MaximumScaleValue">
      <summary>Gets or sets the maximum allowed value for the scale action to reach.</summary>
      <value>Value that indicates the maximum allowed value for the scale action to reach.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.MinimumScaleValue">
      <summary>Gets or sets the minimum allowed value for the scale action to reach.</summary>
      <value>Value that indicates the minimum allowed value for the scale action to reach.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.PageCount">
      <summary>Gets the number of frames of the cell.</summary>
      <value>value that indicates the number of frames assigned to the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.PaintingMethod">
      <summary>Gets or sets the enumerated value that indicates which painting method to use when drawing the image.</summary>
      <value>An enumerated value that indicates which painting method to use to draw the image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.PatientOrientation">
      <summary>Gets or sets an array of values that represent the patient orientation of the image attached to this cell.</summary>
      <value>An array of string values representing the orientation of the image attached to this cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.PhotometricInterpretation">
      <summary>Gets or sets the photometric interpretation that will be used to display the image.</summary>
      <value>A value that indicates the photometric interpretation that will be used to display the image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.PixelSpacing">
      <summary>Gets or sets the image pixel spacing. This property is used when implementing a reference line.</summary>
      <value>A Point2D value that represents the image pixel spacing. This property is used when implementing the reference line. This value can be retrieved from the DicomDataSet.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.Polygons">
      <summary>Gets the MedicalViewerCollection assigned to the control.</summary>
      <value>The MedicalViewerCollection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ReferenceLine">
      <summary>Gets the MedicalViewerReferenceLineProperties that is used to create the MedicalViewerPlaneCutLine, and adjust the reference line properties of this cell.</summary>
      <value>MedicalViewerReferenceLineProperties that is used to create the MedicalViewerPlaneCutLine, and adjust the reference line properties of this cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.RegionBorderColor1">
      <summary>Gets or sets the first color for the region marching ants.</summary>
      <value>The System.Drawing.Color object that represents first color for the region marching ants (an animated dotted line drawn around a selection).</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.RegionBorderColor2">
      <summary>Gets or sets the second color of the region marching ants.</summary>
      <value>The System.Drawing.Color object that represents second color of the region marching ants (an animated dotted line drawn around a selection).</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.RegionDefaultCursor">
      <summary>Gets or sets the cursor used to create the region of interest.</summary>
      <value>A System.Windows.Forms.Cursors object that represents the cursor to display when the user is creating the region of interest.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.RequestOnScroll">
      <summary>Gets or sets the value that determines whether to send FramesRequested event immediately when thumb-scrolling the cell scrollbar.</summary>
      <value>True to request FramesRequested event when using the scroll thumb, false otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.SagittalName">
      <summary>Gets or sets the string that will be used as overlay text for the sagittal cell.</summary>
      <value>A value that indicates the string that will be used as overlay text for the sagittal cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ScaleType">
      <summary>Gets or sets the scale type used when using the zoom action.</summary>
      <value>MedicalViewerScaleType enumeration that represents the scaling method used when zooming the image using the zoom action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ShowCellBoundaries">
      <summary>Enables or disables showing the Reference line color as a boundary surrounding the cell.</summary>
      <value>true to show the reference line color as a boundary on the cell, false to hide the cell boundaries.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ShowCellScroll">
      <summary>Enables or disables showing the cell scrollbar used to scroll through the frames.</summary>
      <value>true to show the cell scrollbar; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ShowFreezeText">
      <summary>Enables or disables showing the freeze text over the frozen cells.</summary>
      <value>true to show the freeze text; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.SnapRulers">
      <summary>Gets or sets the value that indicates whether to position the cell ruler directly on the image.</summary>
      <value>true to position the cell ruler on the image directly, false to apply the old behavior.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.SpyGlass">
      <summary>Gets the class that contains the properties that control the spy glass style and shape.</summary>
      <value>MedicalViewerSpyGlass class that contains the properties that control the spy glass style and shape.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.SynchronizationID">
      <summary>Gets or sets the ID that is used to synchronize multiple cells together.</summary>
      <value>A value that indicates the ID that is used to synchronize multiple cells together.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.Titlebar">
      <summary>Gets the MedicalViewerTitlebar assigned to the control.</summary>
      <value>The MedicalViewerTitlebar assigned to the control.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.UseDPI">
      <summary>Enables or disables using the DPI feature.</summary>
      <value>true to use the DPI, false to keep the normal behavior.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.UseWindowLevelBoundaries">
      <summary>Gets or sets the value that indicates whether to limit the width and center value to the range specified by the image calculated range.</summary>
      <value>true to limit the width and center values to the image boundaries, otherwise, it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.VirtualImage">
      <summary>Gets the MedicalViewerCollection assigned to the cell.</summary>
      <value>The MedicalViewerCollection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCell.ZoomCenterPoint">
      <summary>Gets or sets the point that is used as a reference point when zooming in or out using the dynamic zoom method.</summary>
      <value>System.Drawing.PointF that represents the dynamic zoom reference point.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerCellCollection`1">
      <summary>Represents a generic collection of MedicalViewerBaseCell objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerCellCollection\&lt;MedicalViewerBaseCell\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.Clear">
      <summary>Overridden. Removes all items from the MedicalViewerCellCollection\&lt;MedicalViewerBaseCell\&gt;.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.FreezeAll(System.Boolean)">
      <summary>Freezes or un-freezes all of the cells in the MedicalViewer control.</summary>
      <param name="freeze">true to freeze all cells, false to unfreeze all cells.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.FreezeSelected(System.Boolean)">
      <summary>Freezes or un-freezes the selected cells in the MedicalViewer control.</summary>
      <param name="freeze">true to freeze the selected cells, false to un-freeze the selected cells.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.InvertSelection">
      <summary>Inverts (if a cell is selected make it unselected and vice versa) the selection of the cell in the MedicalViewer control.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.Remove(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Removes the specified cell.</summary>
      <param name="item">Cell to remove.</param>
      <returns>true if the element was removed successfully; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the cell from the specified index.</summary>
      <param name="index">Index of the item to remove.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.Reposition(System.Int32,System.Int32,System.Boolean)">
      <summary>Repositions the cell by removing it and inserting it into another position in the MedicalViewer control.</summary>
      <param name="cellIndex">Index of the cell to be repositioned.</param>
      <param name="targetCellIndex">The zero-based index that represents the target position for the cell.</param>
      <param name="swap">true to swap the cells with the indexes cellIndex, targetCellIndex; false to insert the cell with index of cellIndex into targetCellIndex.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.SelectAll(System.Boolean)">
      <summary>Selects or un-selects all of the cells in the MedicalViewer control.</summary>
      <param name="select">true to select all cells, false to un-select all cells.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.OnItemAdded(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemAdded.</summary>
      <param name="e">An MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellCollection`1.OnItemRemoved(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemRemoved.</summary>
      <param name="e">An MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs">
      <summary>The MedicalViewerCellMouseEventArgs class provides data for various mouse events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs.#ctor(System.Int32,System.Int32,Rectangle,Rectangle,MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerCellMouseEventArgs class with explicit parameters.</summary>
      <param name="cellIndex">The zero-based index of the cell that received the mouse event.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that received the mouse event.</param>
      <param name="rectangle">The System.Drawing.Rectangle that represents the painting area of the cell or sub-cell.</param>
      <param name="imageRectangle">The System.Drawing.Rectangle that represents the image rectangle of the cell or sub-cell.</param>
      <param name="button">One of the System.Windows.Forms.MouseButtons values indicating which mouse button was used to fire this event.</param>
      <param name="clicks">The number of times a mouse button was pressed.</param>
      <param name="x">The x-coordinate of the mouse click, in pixels.</param>
      <param name="y">The y-coordinate of the mouse click, in pixels.</param>
      <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that received the mouse event. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the zero-based index of the cell that received the mouse event. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs.ImageRectangle">
      <summary>Gets the rectangle that represents the image rectangle of the cell or sub-cell.</summary>
      <value>The rectangle that represents the image rectangle of the cell or sub-cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs.Rectangle">
      <summary>Gets the rectangle that represents the painting area of the cell or sub-cell.</summary>
      <value>The rectangle that represents the painting area of the cell or sub-cell. This rectangle does not include the border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellMouseEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that received the mouse event.</summary>
      <value>Value that indicates the zero-based index of the sub-cell that received the mouse event.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCellPosition">
      <summary>Represents a class that is used to indicate the row and column position of the cell inside the Leadtools.MedicalViewer control.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCellPosition.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerCellPosition class, specifying how to create it.</summary>
      <param name="row">A zero-based index value that indicates in which row of the Leadtools.MedicalViewer control the cell is placed.</param>
      <param name="column">A zero-based index value that indicates in which column of the Leadtools.MedicalViewer control the cell is placed.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellPosition.Column">
      <summary>Gets the value that indicates in which column of the Leadtools.MedicalViewer control the cell is placed.</summary>
      <value>Value that indicates in which column of the Leadtools.MedicalViewer control the cell is placed.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCellPosition.Row">
      <summary>Gets the zero-based index value that indicates in which row of the Leadtools.MedicalViewer control the cell is placed.</summary>
      <value>Value that indicates in which row of the Leadtools.MedicalViewer control the cell is placed.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs">
      <summary>The MedicalViewerChangingWindowLevelEventArgs class provides data for the MedicalViewerBaseCell.ChangingWindowLevel event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerChangingWindowLevelEventArgs class with explicit parameters.</summary>
      <param name="subCellIndex">a Zero-based index of the sub-cell that contains the image which to be affected by the window level action.</param>
      <param name="width">The new window width.</param>
      <param name="oldWidth">The previous window width.</param>
      <param name="center">The new window center.</param>
      <param name="oldCenter">The previous window width</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.Center">
      <summary>Gets the value that indicates the new window center.</summary>
      <value>Value that indicates the new window center. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.OldCenter">
      <summary>Gets the value that indicates the previous window center.</summary>
      <value>Value that indicates the previous window center. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.OldWidth">
      <summary>Gets the value that indicates the previous window width.</summary>
      <value>Value that indicates the previous window width. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of sub-cell that contains the image which to be affected by the window level action.</summary>
      <value>Value that indicates the zero-based index of the sub-cell that contains the image which to be affected by the window level action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerChangingWindowLevelEventArgs.Width">
      <summary>Gets the value that indicates the new window width.</summary>
      <value>Value that indicates the new window width. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCobbAngle">
      <summary>Represents the class that is used to connect two annotation lines together and displays the angle between them. The angle between them is called the Cobb-Angle.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCobbAngle.#ctor(Leadtools.Annotations.Engine.AnnPolylineObject,Leadtools.Annotations.Engine.AnnPolylineObject)">
      <summary>Initializes a new instance of the MedicalViewerCobbAngle class with explicit parameters.</summary>
      <param name="line1">The first annotation line.</param>
      <param name="line2">The second annotation line.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.Angle">
      <summary>Gets the Cobb-angle value.</summary>
      <value>a value that represents the Cobb-angle in double precision, which is the angle between Line1 and Line2.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.BackgroundColor">
      <summary>Gets or sets the color of the cobb angle text background.</summary>
      <value>Leadtools.RasterColor that represents the color of the cobb angle text background.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.BorderColor">
      <summary>Gets or sets the color of the cobb angle text border.</summary>
      <value>Leadtools.RasterColor that represents the color of the cobb angle text border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.Line1">
      <summary>Gets or sets the first line of the cobb angle.</summary>
      <value>Leadtools.Annotations.Engine.AnnPolylineObject that represents the first line of the Cobb-angle.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.Line2">
      <summary>Gets or sets the second line of the Cobb-Angle.</summary>
      <value>Leadtools.Annotations.Engine.AnnPolylineObject that represents the second line of the Cobb-Angle.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngle.Parent">
      <summary>Gets the parent of this object.</summary>
      <value>MedicalViewerSubCell cell that represents the parent of this object.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1">
      <summary>Represents a generic collection of MedicalViewerCobbAngle objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerCobbAngleCollection\&lt;MedicalViewerCobbAngle\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1.Add(Leadtools.MedicalViewer.MedicalViewerCobbAngle)">
      <summary>Appends the cobb-angle object to the collection.</summary>
      <param name="item">The MedicalViewerCobbAngle that represents the item to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1.AddRange(Leadtools.MedicalViewer.MedicalViewerCobbAngle)">
      <summary>Appends an array of cobb-angle objects to the collection.</summary>
      <param name="cobbAngleArray">An array of MedicalViewerCobbAngle that represents the items to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1.Insert(System.Int32,Leadtools.MedicalViewer.MedicalViewerCobbAngle)">
      <summary>Appends the cobb-angle object to the collection using the specified index.</summary>
      <param name="index">Index of the item to insert.</param>
      <param name="item">MedicalViewerCobbAngle that represents the item to be inserted.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCobbAngleCollection`1.Parent">
      <summary>Gets the parent of the collection.</summary>
      <value>MedicalViewerSubCell cell that represents the parent of this collection.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs`1">
      <summary>Provides information for ItemAdded and ItemRemoved methods.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerCollectionEventArgs&lt;T&gt; class with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs`1.#ctor(``0)">
      <summary>Initializes a new instance of the MedicalViewerCollectionEventArgs&lt;T&gt; class with the specified parameters.</summary>
      <param name="item">The object that has been added or removed.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs`1.Item">
      <summary>The object that has been added or removed.</summary>
      <value>The object that has been added or removed.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerCollection`1">
      <summary>Represents a generic collection of objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.#ctor">
      <summary>Creates a new instance of MedicalViewerCollection&lt;T&gt; with default settings.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.Add(T)">
      <summary>Adds the specified item to the end of the collection.</summary>
      <param name="item">Object to add.</param>
      <returns>The index of the newly added item.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.AddRange(ICollection&lt;T&gt;)">
      <summary>Adds the elements of an ICollection to the end of the collection.</summary>
      <param name="collection">The ICollection whose elements should be added to the end of the collection.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.BringToFront(T,System.Boolean)">
      <summary>Brings the specified item forward in the collection.</summary>
      <param name="item">The item to move.</param>
      <param name="first">true to make the item the first item in the collection; false to move the item forward one index.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.Contains(T)">
      <summary>Determines whether or not the specified item is contained in the collection.</summary>
      <param name="item">Object to test.</param>
      <returns>true if the item is found in the collection; false, otherwise.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.CopyTo(T[],System.Int32)">
      <summary>Copies all the elements of the collection to the specified one-dimensional array starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the current collection.</param>
      <param name="arrayIndex">The index at which copying begins.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.DisableEvents">
      <summary>Called to disable raising the ItemAdded and ItemRemoved events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.EnableEvents">
      <summary>Called to enable raising the ItemAdded and ItemRemoved events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.GetEnumerator">
      <summary>Returns a generic enumerator that can iterate through the MedicalViewerCollection&lt;T&gt;</summary>
      <returns>A generic enumerator that can iterate through the MedicalViewerCollection&lt;T&gt;.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.IndexOf(T)">
      <summary>Returns the index of the specified item if it is found in the collection.</summary>
      <param name="item">Object to test.</param>
      <returns>The index of the specified item if it is found in the collection.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.Insert(System.Int32,T)">
      <summary>Inserts the specified item at the specified index.</summary>
      <param name="index">Index at which to insert the item.</param>
      <param name="item">Item to insert.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.Remove(T)">
      <summary>Removes the specified item.</summary>
      <param name="item">Item to remove.</param>
      <returns>true if the item is removed, false otherwise.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the item from the specified index.</summary>
      <param name="index">Index of the item to remove</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.SendToBack(T,System.Boolean)">
      <summary>Sends the specified item back in the collection.</summary>
      <param name="item">The item to move.</param>
      <param name="last">true to make the item the last item in the collection; false to move the item back one index.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.OnItemAdded(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Raises the ItemAdded event.</summary>
      <param name="e">An MedicalViewerCollectionEventArgs&lt;T&gt; that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCollection`1.OnItemRemoved(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Raises the ItemRemoved event.</summary>
      <param name="e">An MedicalViewerCollectionEventArgs&lt;T&gt; that contains the event data.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCollection`1.ItemAdded">
      <summary>Occurs when an item is added to the collection.</summary>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerCollection`1.ItemRemoved">
      <summary>Occurs when an item is removed from the collection.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCollection`1.Count">
      <summary>Gets the number of items in the collection.</summary>
      <value>The number of items in the collection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCollection`1.IsReadOnly">
      <summary>Specifies whether or not the collection is Read Only.</summary>
      <value>true if the collection is read only; false, otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCollection`1.Item">
      <summary>Gets and sets the item at the specified index from within the collection.</summary>
      <value>The item at the specified index.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCommonActions">
      <summary>Represents the base class used for the basic actions.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCommonActions.#ctor">
      <summary>Initializes a new instance of the MedicalViewerWindowLevel class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCommonActions.#ctor(System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerCommonActions class with specified mouse sensitivity, mouse reset, and cursor.</summary>
      <param name="sensitivity">Integer value that represents the mouse sensitivity, in percent. Default is 100.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false. A value of 100 indicates that the amount of change in the action is equal to the amount of movement of the mouse. For example, if the mouse is moved 1 pixel, the action changes by 1 unit. A value of 50 indicates that the amount of change in the action is 50 percent of the amount of mouse movement. For example, if the mouse is moved 2 pixels, the action only changes by one unit.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCommonActions.Dispose">
      <summary>Releases all resources used by the MedicalViewerCommonActions.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCommonActions.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewerCommonActions.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCommonActions.ActionCursor">
      <summary>Gets or sets the cursor that is displayed when applying the action.</summary>
      <value>A System.Windows.Forms.Cursor object that represents the cursor to display when the action is being applied.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCommonActions.CircularMouseMove">
      <summary>Indicates whether to reset the mouse when it reaches one of the screen edges.</summary>
      <value>true to reset the mouse; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCommonActions.Sensitivity">
      <summary>Gets or sets the value that indicates the percentage value of the mouse sensitivity.</summary>
      <value>Value that indicates the percentage value of the mouse sensitivity.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs">
      <summary>The MedicalViewerCustomAnnotationArgs class provides data for the MedicalViewerBaseCell.CustomAnnotationDataRequested event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.MedicalViewer.MedicalViewerCustomAnnotationRequestedObject)">
      <summary>Initializes a new instance of the MedicalViewerCustomAnnotationArgs class with explicit parameters.</summary>
      <param name="action">the action that determines the kind of annotation information that is needed.</param>
      <param name="requestedObject">an enumeration that represents the type of the requested data.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.AnnotationAction">
      <summary>Gets the custom annotation action type that will specify the type of the annotation that has its data requested.</summary>
      <value>MedicalViewerActionType enumeration that represents the custom annotation action type that will specify the type of the annotation that has its data requested.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.AnnotationObject">
      <summary>Gets or sets the instance of the custom annotation object requested.</summary>
      <value>Leadtools.Annotations.Engine.AnnObject that represents the custom annotation object requested.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.DrawDesigner">
      <summary>Gets or sets the DrawDesigner for the requested custom annotation.</summary>
      <value>Leadtools.Annotations.Designers.AnnDrawDesigner that will be used when drawing the requested custom annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.EditDesigner">
      <summary>Gets or sets the AnnEditDesigner for the requested custom annotation.</summary>
      <value>Leadtools.Annotations.Designers.AnnEditDesigner that will be used when editing the requested custom annotation.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationArgs.RequestedObject">
      <summary>Gets the value that represents the requested custom annotation data.</summary>
      <value>MedicalViewerCustomAnnotationRequestedObject enumeration that represents the requested custom annotation data.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCutlineCreatedEventArgs">
      <summary>The MedicalViewerCutlineCreatedEventArgs class provides data for the MedicalViewerCell.CutlineCreated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerCutlineCreatedEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerCutlineCreatedEventArgs class object with explicit parameters.</summary>
      <param name="doubleCutLine">true if this class will be used for the double-cutline, false, if it is going to be used with the single cutline.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCutlineCreatedEventArgs.DoubleCutLine">
      <summary>Gets the value that represents whether the sender is a double-cutline, or a single cutline.</summary>
      <value>true if this class will be used for the double-cutline, false, if it is going to be used with the single cutline.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCutlineCreatedEventArgs.FirstCell">
      <summary>Gets or sets the cell that will hold the cutline image, or the first cutline image in case of the double cutline.</summary>
      <value>MedicalViewerCell that represents the cell that will hold the first cutline image..</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerCutlineCreatedEventArgs.SecondCell">
      <summary>Gets or sets the cell that will hold the second cutline image.</summary>
      <value>MedicalViewerCell that represents the cell that will hold the second cutline image. This is only useful in case of the double cutline. For the single cut-line, this property is useless.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerData3DRequestedEventArgs">
      <summary>The MedicalViewerData3DRequestedEventArgs class provides data for the MedicalViewerCell.Data3DRequested event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerData3DRequestedEventArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerBaseCell,Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType)">
      <summary>Initializes a new instance of the MedicalViewerData3DRequestedEventArgs class object with explicit parameters.</summary>
      <param name="cell">The cell that requested the 3D information.</param>
      <param name="informationType">MedicalViewer3DRequestedInformationType the represents what the requested information is.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerData3DRequestedEventArgs.ImageIndex">
      <summary>Gets the value that indicates the index of the requested image.</summary>
      <value>A value that indicates the index of the requested image, which the user is responsible for providing. The user should retrieve this image and place it in the property Image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerData3DRequestedEventArgs.InformationType">
      <summary>Gets the type of the requested 3D information from the Medical Viewer to the Medical 3D engine.</summary>
      <value>A MedicalViewer3DRequestedInformationType enumeration value that represents the type of information the requested information is.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerData3DRequestedEventArgs.Succeed">
      <summary>Gets or sets the value that indicates whether the request for 3D information has succeeded.</summary>
      <value>true if the 3D information was successfully retrieved; otherwise, false.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDeleteEventArgs">
      <summary>The MedicalViewerDeleteEventArgs class provides data for various MedicalViewer user interaction events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDeleteEventArgs.#ctor(System.Int32[])">
      <summary>Initializes a new instance of the MedicalViewerDeleteEventArgs class.</summary>
      <param name="cellIndexes">Array of values that indicate the indexes of the cells that will be affected by the delete process.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDeleteEventArgs.CellIndexes">
      <summary>Gets the array of values that indicate the indexes of the cells that will be affected by the deleting process.</summary>
      <value>Array of values that indicate the zero-based indices of the cells that will be affected by the deleting process.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDeleteEventArgs.Delete">
      <summary>Gets or sets the value that indicate whether to apply the delete process or not.</summary>
      <value>true to apply the delete process; otherwise, false.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDerivativeGeneratedEventArgs">
      <summary>The MedicalViewerDerivativeGeneratedEventArgs class provides data for the MedicalViewerCell.DerivativeGenerated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDerivativeGeneratedEventArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerCell)">
      <summary>Initializes a new instance of the MedicalViewerDerivativeGeneratedEventArgs class object with explicit parameters.</summary>
      <param name="cell">The cell that will hold the derivative cell.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDerivativeGeneratedEventArgs.DerivativeCell">
      <summary>Gets the cell that contains the derivative image.</summary>
      <value>Value that indicates the cell which contains the derivative image.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs">
      <summary>The MedicalViewerDesignerCreatedEventArgs class provides data for the MedicalViewerBaseCell.DesignerCreated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerDesignerType,Leadtools.Annotations.Designers.AnnDesigner,System.Int32,Leadtools.Annotations.Engine.AnnContainer,Leadtools.Annotations.Engine.AnnObject)">
      <summary>The MedicalViewerDesignerCreatedEventArgs class provides data for the MedicalViewerBaseCell.DesignerCreated event.</summary>
      <param name="type">MedicalViewerDesignerType enumeration that represents the type of the designer that has been created.</param>
      <param name="designer">Leadtools.Annotations.Designers.AnnDesigner object that represents the designer object.</param>
      <param name="subCellIndex">the sub-cell index of the cell that has the annotation container that fired this event.</param>
      <param name="container">Leadtools.Annotations.Engine.AnnContainer the annotation container that fired this event.</param>
      <param name="annObject">the annotation object to be created, edited, or clicked under the run mode.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.Container">
      <summary>Gets the annotation container that contains the annotation object that is being created, clicked under the run time mode or edited.</summary>
      <value>Leadtools.Annotations.Engine.AnnContainer that represents the annotation container that contains the annotation object that is being created, clicked under the run time mode or edited.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.Designer">
      <summary>Gets the newly created designer.</summary>
      <value>Leadtools.Annotations.Designers.AnnDesigner that represents the newly created designer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.Object">
      <summary>Gets the object that is being created, clicked under the run time mode, or edited.</summary>
      <value>Leadtools.Annotations.Engine.AnnObject that represents the annotation container that contains the annotation object that is being created, clicked under the run time mode, or edited.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.SubCellIndex">
      <summary>Gets the sub-cell index of the cell that contains the container of the object that is being created, clicked under the run time mode, or edited.</summary>
      <value>Value that represents the sub-cell index of the cell that contains the container of the object that is being created, clicked under the run time mode, or edited.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDesignerCreatedEventArgs.Type">
      <summary>Gets the type of the newly created designer.</summary>
      <value>MedicalViewerDesignerType enumeration that determines the type of the newly created designer.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine">
      <summary>Represents the class that is used to create and adjust a double oblique cut plane.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.#ctor">
      <summary>Initializes a new MedicalViewerDoublePlaneCutLine class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.#ctor(Leadtools.MedicalViewer.MedicalViewerCell,Leadtools.MedicalViewer.MedicalViewerCell)">
      <summary>Initializes a new MedicalViewerDoublePlaneCutLine class object with explicit parameters.</summary>
      <param name="firstDerivativeCell">MedicalViewerCell class that contains the derivative cell of one of the cut-planes.</param>
      <param name="secondDerivativeCell">MedicalViewerCell class that contains the derivative cell of one of the cut-planes.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.#ctor(Leadtools.MedicalViewer.Point2D,Leadtools.MedicalViewer.Point2D)">
      <summary>Initializes a new MedicalViewerDoublePlaneCutLine class object with explicit parameters.</summary>
      <param name="point1">Point2D struct that contains the x and y coordinates of the first line point.</param>
      <param name="point2">Point2D struct that contains the x and y coordinates of the second line point.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.FirstDerivativeCell">
      <summary>Gets the cell that contains the derivative image of the first cut-plane.</summary>
      <value>The MedicalViewerCell that represents the cell that contains the derivative image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.FirstLineColor">
      <summary>Gets or sets the first cut-plane color along  with its derivative cell color.</summary>
      <value>A System.Drawing.Color that represents the first cut-plane color and its derivative cell reference line color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.FirstSliceThickness">
      <summary>Gets or sets the desired thickness of the generated slice resulting from the first cut-line.</summary>
      <value>A value that represents the thickness of the generated slice resulted from the first cut-line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.Point3">
      <summary>Gets or sets the first point of the second cut-line.</summary>
      <value>Point2D that represents the first point of the second cutline.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.Point4">
      <summary>Gets or sets the second point of the second cut-line.</summary>
      <value>Point2D that represents the second point of the second cut-line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.SecondDerivativeCell">
      <summary>Gets the cell that contains the derivative image of the second cut-plane.</summary>
      <value>The MedicalViewerCell that represents the cell that contains the derivative image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.SecondLineColor">
      <summary>Gets or sets the second cut-plane color along along with it's derivative cell color.</summary>
      <value>The System.Drawing.Color that represents the second cut-plane color and its derivative cell reference line color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine.SecondSliceThickness">
      <summary>Gets or sets the desired thickness of the generated slice resulted from the second cut-line.</summary>
      <value>A value that represents the thickness of the generated slice resulted from the second cut-line.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1">
      <summary>Represents a generic collection of MedicalViewerDoublePlaneCutLine objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerDoublePlaneCutLinesCollection\&lt;MedicalViewerDoublePlaneCutLine\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.Add(Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine)">
      <summary>Appends the double cut line object to the collection.</summary>
      <param name="item">The MedicalViewerDoublePlaneCutLine that represents the item to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.Insert(System.Int32,Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine)">
      <summary>Appends the double cut line object to the collection using the specified index..</summary>
      <param name="index">Index of the item to insert.</param>
      <param name="item">MedicalViewerDoublePlaneCutLine that represents the item to be inserted.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.Remove(Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLine)">
      <summary>Removes the specified cell.</summary>
      <param name="item">Plane Cut line to remove.</param>
      <returns>true if the element was removed successfully, otherwise it is false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the plane cut line from the specified index.</summary>
      <param name="index">Index of the item to remove.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.OnItemAdded(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemAdded.</summary>
      <param name="e">A MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDoublePlaneCutLinesCollection`1.OnItemRemoved(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemRemoved.</summary>
      <param name="e">A MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDragEventArgs">
      <summary>Provides data for the MedicalViewer.ViewerDragDrop, MedicalViewer.ViewerDragOver, MedicalViewerBaseCell.CellDragDrop, and MedicalViewerBaseCell.CellDragOver events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDragEventArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerBaseCell,System.Int32,System.Int32,IDataObject,System.Int32,System.Int32,System.Int32,DragDropEffects,DragDropEffects)">
      <summary>Initializes a new instance of the MedicalViewerDragEventArgs class with explicit parameters.</summary>
      <param name="cell">the cell that the drag is on.</param>
      <param name="cellIndex">the cell index that the drag is over right now.</param>
      <param name="subCellIndex">the sub-cell index that the drag is over right now.</param>
      <param name="data">IDataObject that contains the data associated with this event.</param>
      <param name="keyState">the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</param>
      <param name="x">the x-coordinate of the mouse pointer, in screen coordinates.</param>
      <param name="y">the y-coordinate of the mouse pointer, in screen coordinates.</param>
      <param name="allowedEffect">the drag-and-drop operations which are allowed by the originator (or source) of the drag event.</param>
      <param name="effect">the target drop effect in a drag-and-drop operation.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDragEventArgs.CellIndex">
      <summary>Gets the cell index that the drag is over right now.</summary>
      <value>Value that represents the cell index that the drag is over right now.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDragEventArgs.SubCellIndex">
      <summary>Gets the sub-cell index that the drag is over right now.</summary>
      <value>Value that represents the sub-cell index that the drag is over right now.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs">
      <summary>The MedicalViewerDrawingAnnotationsEventArgs class provides data for the MedicalViewerBaseCell.StartDrawingAnnotation event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs.#ctor(System.Int32,Leadtools.Annotations.Engine.AnnObject,Leadtools.MedicalViewer.MedicalViewerActionType,Leadtools.Annotations.Engine.AnnContainer)">
      <summary>The MedicalViewerDrawingAnnotationsEventArgs class provides data for the MedicalViewerBaseCell.StartDrawingAnnotation event.</summary>
      <param name="subCellIndex">the sub-cell index of the cell that has the annotation container that fired the event.</param>
      <param name="annObject">the annotation object to be created.</param>
      <param name="type">MedicalViewerActionType enumeration that represents the type of the annotation object to be created.</param>
      <param name="container">Leadtools.Annotations.Engine.AnnContainer the annotation container that fired the event.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs.Container">
      <summary>Gets the annotation container that contains the annotation object to be created.</summary>
      <value>Leadtools.Annotations.Engine.AnnContainer that represents the annotation container that contains the annotation object to be created.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs.Object">
      <summary>Gets the object that is being created.</summary>
      <value>Leadtools.Annotations.Engine.AnnObject that represents the annotation container that contains the annotation object that is being created.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs.SubCellIndex">
      <summary>Gets the sub-cell index of the cell that contains the container of the object that is being created.</summary>
      <value>Value that represents the sub-cell index of the cell that contains the container of the object that is being created.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerDrawingAnnotationsEventArgs.Type">
      <summary>Gets the enumeration value that determines the type of the object being created.</summary>
      <value>MedicalViewerActionType enumeration that represents the type of the annotation object that is being created.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerFramesLoadedEventArgs">
      <summary>The MedicalViewerFramesLoadedEventArgs class provides data for the MedicalViewerCell.FramesLoaded event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerFramesLoadedEventArgs.#ctor(System.Int32,System.Int32[])">
      <summary>Initializes a new instance of the MedicalViewerFramesLoadedEventArgs class object with explicit parameters.</summary>
      <param name="cellIndex">A zero-based index of the cell that fired the MedicalViewerCell.FramesLoaded event.</param>
      <param name="framesLoadedIndexes">Array of integers containing the a zero-based index of each loaded page.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFramesLoadedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that fired the event.</summary>
      <value>Value that indicates the zero-based index of the cell that fired the event. If the cell is not attached to a MedicalViewer the value will be 0.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFramesLoadedEventArgs.FramesLoadedIndexes">
      <summary>Gets the array of integers containing the a zero-based index of each loaded page.</summary>
      <value>Array of integers that represents a zero-based index of each loaded page.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerFusion">
      <summary>A class that contains the fused image along with properties that handle the fusion process.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerFusion.#ctor">
      <summary>Initializes a new instance of the MedicalViewerFusion class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.Center">
      <summary>Gets or sets the window-level center value for the fused image.</summary>
      <value>Value that determine the window level center value of the fused image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.ColorPalette">
      <summary>Gets or sets the palette used to fuse the image.</summary>
      <value>MedicalViewerPaletteType enumeration that represents the palette used to fuse the image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.DisplayRectangle">
      <summary>Gets or sets the rectangle that is used to display the fused image.</summary>
      <value>A System.Drawing.RectangleF that represents the rectangle that is used to display the fused image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.Fit">
      <summary>Enables or disables fitting the fused image to the original image.</summary>
      <value>true to enable fitting the fused image to the original image; false, otherwise.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.FusedImage">
      <summary>Gets or sets the image that will be fused with the original image. Image.</summary>
      <value>Leadtools.RasterImage that will be fused with the original image Image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.FusionScale">
      <summary>Gets or set the value that represents the amount of transparency in the fusion.</summary>
      <value>Value that determine the amount of transparency in the fusion.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.OffsetX">
      <summary>Gets or sets the X offset of the fused image relative to the original image.</summary>
      <value>Value that represents the X offset of the fused image relative to the original image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.OffsetY">
      <summary>Gets or sets the Y offset of the fused image relative to the original image.</summary>
      <value>Value that represents the Y offset of the fused image relative to the original image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.Rotation">
      <summary>Gets or sets the amount of rotation to the fused image.</summary>
      <value>The amount of rotation to the fused image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.Scale">
      <summary>Gets or sets the normalized scale of the fused image.</summary>
      <value>Value that represents the normalized scale of the fused image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerFusion.Width">
      <summary>Gets or sets the window-level width value of the fused image.</summary>
      <value>Value that determine the window level width value of the fused image.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerIcon">
      <summary>Represents the class that contains the properties of the medical viewer icons.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerIcon.#ctor">
      <summary>Initializes a new instance of the MedicalViewerIcon class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerIcon.Color">
      <summary>Gets or sets the value that represents the color of the icon when unpressed.</summary>
      <value>A Leadtools.RasterColor that represents the color of the icon when unpressed.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerIcon.ColorHover">
      <summary>Gets or sets the value that represents the color of the icon when the mouse is hovering over it.</summary>
      <value>A Leadtools.RasterColor that represents the color of the icon when the mouse is hovering over it.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerIcon.ColorPressed">
      <summary>Gets or sets the value that represents the color of the icon when pressed.</summary>
      <value>A Leadtools.RasterColor that represents the color of the icon when pressed.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerIcon.ReadOnly">
      <summary>Determines whether to make the icon read-only (meaning that it can not be adjusted manually).</summary>
      <value>true to make it read-only; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerIcon.Visible">
      <summary>Determines whether to display the icon.</summary>
      <value>true to show the icon, false to hide the icon.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerImageData">
      <summary>The MedicalViewerImageData class contains information about a DICOM image information obtained from the data set.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerImageData.#ctor">
      <summary>Initializes a new MedicalViewerImageData class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerImageData.#ctor(System.Object,Leadtools.MedicalViewer.Point3D,System.String,Leadtools.MedicalViewer.Point2D,System.Int32,System.String,System.Int32)">
      <summary>Initializes a new MedicalViewerImageData class object with explicit parameters.</summary>
      <param name="data">An object that contains data about the image represented by this class.</param>
      <param name="imagePosition">The image position of the frame image.</param>
      <param name="imageOrientation">The image orientation of the frame image.</param>
      <param name="pixelSpacing">The pixel spacing of the image.</param>
      <param name="echoNumber">The image echo number.</param>
      <param name="frameOfReferenceUID">The image frame of reference UID.</param>
      <param name="instanceNumber">The image instance number.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.AcquisitionTime">
      <summary>Gets or sets the value that determines the image acquistion time.</summary>
      <value>System.DateTime that represents the image acquistion time.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.CaptureTime">
      <summary>Gets or sets image capture date and time.</summary>
      <value>A value that represents the image capture date and time. This value is useful for sorting and retrieving more accurate information.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.Data">
      <summary>Gets or sets a user-defined object that contains data about image represented by this class.</summary>
      <value>A value that indicates the user-defined object that contains data about image represented by this class.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.EchoNumber">
      <summary>Gets or sets the image echo number.</summary>
      <value>A value that represents the image echo number.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.FrameOfReferenceUID">
      <summary>Gets or sets the frame reference of UID.</summary>
      <value>A value that indicates the frame reference for the UID information. It will be used when implementing the reference line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.Image">
      <summary>Gets or sets the Leadtools.RasterImage represented by this class.</summary>
      <value>A Leadtools.RasterImage that is represented by this class. This Property can be left empty when trying to sort the **MedicalViewerImageData** list using the MedicalViewerSeriesManager.Sort method. However, if the value is not set, the Data property needs to be set to identify each image class from the list after sorting.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.ImageOrientation">
      <summary>Gets or sets a string with the float values that represent the orientation of the image attached to this cell.</summary>
      <value>A string with the float values that represents the orientation of the image attached to this cell. The values are separated in this string by '\\'.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.ImageOrientationArray">
      <summary>Gets or sets the array that represents the Image orientation.</summary>
      <value>Array of float that represents the orientation of the image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.ImagePosition">
      <summary>Gets or sets the image position of the image that is represented by this class.</summary>
      <value>A Point3D that represents the image position of the image that is represented by this class.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.InstanceNumber">
      <summary>Gets or sets the image instance number.</summary>
      <value>A Value that represents the image instance number. This value is useful for sorting and retrieving more accurate information.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.PixelSpacing">
      <summary>Gets or sets the image pixel spacing.</summary>
      <value>Point2D that represents the image pixel spacing.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageData.SequenceName">
      <summary>Gets or sets the image sequence name.</summary>
      <value>A string that represents the image sequence name. This value is useful for classifying and grouping the images.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerImageInformation">
      <summary>Represents the class that is used to set or get image information.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerImageInformation.#ctor">
      <summary>Initializes a new instance of the MedicalViewerImageInformation class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerImageInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerImageInformation class with explicit parameters.</summary>
      <param name="xResolution">The image horizontal resolution, in dots per inch (DPI).</param>
      <param name="yResolution">The image vertical resolution, in dots per inch (DPI).</param>
      <param name="imageWidth">The width of the image in pixels.</param>
      <param name="imageHeight">The height of the image in pixels.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageInformation.ImageHeight">
      <summary>Gets or sets the value that indicates the height of the image in pixels.</summary>
      <value>Value that indicates the height of the image in pixels.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageInformation.ImageWidth">
      <summary>Gets or sets the value that indicates the width of the image in pixels.</summary>
      <value>Value that indicates the width of the image in pixels.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageInformation.XResolution">
      <summary>Gets or sets the image horizontal resolution, in dots per inch (DPI).</summary>
      <value>Value that indicates horizontal resolution in dots per inch (DPI).</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerImageInformation.YResolution">
      <summary>Gets or sets the image vertical resolution, in dots per inch (DPI).</summary>
      <value>Value that indicates vertical resolution in dots per inch (DPI).</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerKeyEventArgs">
      <summary>The MedicalViewerKeyEventArgs class provides data for various MedicalViewer user interaction events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerKeyEventArgs.#ctor(System.Int32,Leadtools.RasterImage[],System.Int32,Keys)">
      <summary>Initializes a new instance of the MedicalViewerKeyEventArgs class.</summary>
      <param name="cellIndex">The index of the cell that the user tag will be drawn on.</param>
      <param name="images">Array of Leadtools.RasterImage objects that contain the images to be updated.</param>
      <param name="actionID">The ID of the action that raised the event.</param>
      <param name="keyData">A System.Windows.Forms.Keys value representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, or ALT key was pressed at the same time. Possible values are obtained be applying the bitwise OR ( &amp;#166; ) operator to constants from the Keys enumeration.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeyEventArgs.ActionID">
      <summary>Gets or sets the ID of the action that raised the event.</summary>
      <value>Value that indicates the ID of the action that raised the event.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeyEventArgs.CellIndex">
      <summary>Gets or sets the value that indicates the index of the cell that received the action.</summary>
      <value>Value that indicates the index of the cell that received the action. This value is only valid if the cell is added to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeyEventArgs.Images">
      <summary>Gets or sets the array of Leadtools.RasterImage objects that contain the images to be updated.</summary>
      <value>Array of Leadtools.RasterImage objects that contain the images to be updated.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerKeys">
      <summary>Represents the class that is used to set the keys for a specific action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerKeys.#ctor">
      <summary>Initializes a new instance of the MedicalViewerKeys class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerKeys.#ctor(Keys,Keys,Keys,Keys,Leadtools.MedicalViewer.MedicalViewerModifiers)">
      <summary>Initializes a new instance of the MedicalViewerKeys class.</summary>
      <param name="mouseUp">A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged up.</param>
      <param name="mouseDown">A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged down.</param>
      <param name="mouseLeft">A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged left.</param>
      <param name="mouseRight">A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged right.</param>
      <param name="modifiers">A MedicalViewerModifiers enumeration value that indicates which modifier key needs to be pressed when pressing one of the emulator keys.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeys.Modifiers">
      <summary>Gets or sets the value that indicates the modifier key that needs to be pressed when one of the keys is pressed.</summary>
      <value>A MedicalViewerModifiers enumeration value that indicates the modifier key that needs to be pressed when one of the keys is pressed.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeys.MouseDown">
      <summary>Gets or sets the value that indicates the keyboard key that emulates the mouse being dragged down.</summary>
      <value>A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged down.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeys.MouseLeft">
      <summary>Gets or sets the value that indicates the keyboard key that emulates the mouse being dragged left.</summary>
      <value>A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged left.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeys.MouseRight">
      <summary>Gets or sets the value that indicates the keyboard key that emulates the mouse being dragged right.</summary>
      <value>A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged right.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerKeys.MouseUp">
      <summary>Gets or sets the value that indicates the keyboard key that emulates the mouse being dragged up.</summary>
      <value>A System.Windows.Forms.Keys enumeration value that emulates the mouse being dragged up.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerLayoutOptions">
      <summary>Represents the class that is used to configure layout options of the Medical Viewer.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.#ctor">
      <summary>Initializes a new instances of the MedicalViewerLayoutOptions class with default parameters</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.AllowOverlappingCells">
      <summary>Gets or sets a value indicating whether \[allow overlapping cells\].</summary>
      <value>`true` to allow overlapping cells; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.DesignTool">
      <summary>Gets or sets the design tool.</summary>
      <value>The design tool.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.GridColor">
      <summary>Gets or sets the color of the grid.</summary>
      <value>The color of the grid.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.GridSize">
      <summary>Gets or sets the size of the grid.</summary>
      <value>The size of the grid.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.RectBackColor">
      <summary>Gets or sets the color of the rect back.</summary>
      <value>The color of the rect back.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.RectForeColor">
      <summary>Gets or sets the color of the rect fore.</summary>
      <value>The color of the rect fore.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.ShowGrid">
      <summary>Gets or sets a value indicating whether to show the grid.</summary>
      <value>`true` to show the grid; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.ShowLines">
      <summary>Gets or sets a value indicating whether to show the grid lines.</summary>
      <value>`true` if to show the grid lines; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.ShowPosition">
      <summary>Gets or sets a value indicating whether to show position information during design mode.</summary>
      <value>`True` to show position during layout design mode; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.SnapToGrid">
      <summary>Gets or sets a value indicating whether to snap to the grid.</summary>
      <value>`true` to snap to the grid; otherwise, `false`.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutOptions.UserMode">
      <summary>Gets or sets the user mode.</summary>
      <value>The user mode.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerLayoutPosition">
      <summary>Represents a layout position of a cell when the MedicalViewer is created in layout mode.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerLayoutPosition.#ctor">
      <summary>Initializes a new instance of the MedicalViewerLayoutPosition class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerLayoutPosition.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>Initializes a new instance of the MedicalViewerLayoutPosition class.</summary>
      <param name="leftTopX">The left top X position.</param>
      <param name="leftTopY">The left top Y position.</param>
      <param name="rightBottomX">The right bottom X position.</param>
      <param name="rightBottomY">The right bottom Y position.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerLayoutPosition.#ctor(PointF,PointF)">
      <summary>Initializes a new instance of the MedicalViewerLayoutPosition class.</summary>
      <param name="leftTop">The left top position.</param>
      <param name="rightBottom">The right bottom position.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutPosition.LeftTop">
      <summary>Gets or sets the left top position.</summary>
      <value>The left top position.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerLayoutPosition.RightBottom">
      <summary>Gets or sets the right bottom position.</summary>
      <value>The right bottom position.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass">
      <summary>Represents the magnifying glass.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.#ctor">
      <summary>Initializes a new instance of the MedicalViewerMagnifyGlass class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.#ctor(System.Int32,System.Int32,System.Int32,Color,System.Boolean,System.Int32,System.Boolean,Leadtools.MedicalViewer.MedicalViewerCrosshairStyle)">
      <summary>Initializes a new instance of the MedicalViewerMagnifyGlass class with specified width, height, zoom factor, border color, shape, 3D border value, and crosshair style.</summary>
      <param name="width">The width of the magnifying glass.</param>
      <param name="height">The height of the magnifying glass.</param>
      <param name="zoom">The zoom factor of the magnifying glass.</param>
      <param name="penColor">The color of the magnifying glass border</param>
      <param name="elliptical">true to show an elliptical magnifying glass, false to show a rectangular magnifying glass.</param>
      <param name="borderSize">The border thickness of the magnifying glass .</param>
      <param name="border3d">true to show a 3D border, false to show a flat border.</param>
      <param name="crosshair">The style of crosshair of the magnifying glass.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Border3D">
      <summary>Indicates whether to show the 3D border of the magnifying glass.</summary>
      <value>true to show the 3D border, false to show a flat border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.BorderSize">
      <summary>Gets or sets the value that indicates the magnifying glass border thickness.</summary>
      <value>A System.Int32 value that indicates the magnifying glass border thickness.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Crosshair">
      <summary>Gets or sets an enumerated value that indicates the style of the crosshair of the magnifying glass.</summary>
      <value>A MedicalViewerCrosshairStyle enumerated value that indicates the type of the crosshair of the magnifying glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Elliptical">
      <summary>Indicates whether to show an elliptical magnifying glass.</summary>
      <value>true to show an elliptical magnifying glass, false to show a rectangular magnifying glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Height">
      <summary>Gets or sets the value that indicates the height of the magnifying glass.</summary>
      <value>A System.Int32 value that indicates the height of the magnifying glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.PenColor">
      <summary>Gets or sets the color of the magnifying glass border.</summary>
      <value>A System.Drawing.Color object that represents the color of the magnifying glass border.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Width">
      <summary>Gets or sets the value that indicates the width of the magnifying glass.</summary>
      <value>A System.Int32 value that indicates the width of the magnifying glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMagnifyGlass.Zoom">
      <summary>Gets or sets the value that indicates the zoom factor of the magnifying glass.</summary>
      <value>A System.Int32 value that indicates the zoom factor of the magnifying glass.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMouseEventArgs">
      <summary>The MedicalViewerMouseEventArgs class provides data for various MedicalViewer user interaction events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMouseEventArgs.#ctor(Leadtools.RasterImage[],System.Int32,MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerMouseEventArgs class.</summary>
      <param name="images">Array of Leadtools.RasterImage that contains the images to update.</param>
      <param name="actionID">The ID of the action that raised the event.</param>
      <param name="button">One of the System.Windows.Forms.MouseButtons values indicating which mouse button was pressed.</param>
      <param name="clicks">The number of times a mouse button was pressed.</param>
      <param name="x">The x-coordinate of the mouse click, in pixels.</param>
      <param name="y">The y-coordinate of the mouse click, in pixels.</param>
      <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMouseEventArgs.ActionID">
      <summary>Gets or sets the ID of the action that raised the event.</summary>
      <value>Value that indicates the ID of the action that raised the event.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMouseEventArgs.Images">
      <summary>Gets or sets the array of Leadtools.RasterImage objects that contain the images to be updated.</summary>
      <value>Array of Leadtools.RasterImage objects that contain the images to be updated.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRCell">
      <summary>Represents the class that is used to create an MPR cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.#ctor">
      <summary>Initializes a new instance of the MedicalViewerMPRCell class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.CanExecuteAction(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>A method that is used to determine whether the action *actionType* can be executed in the Medical Viewer Cell.</summary>
      <param name="actionType">MedicalViewerActionTypethat represents the action which will be tested if it can be executed in the Medical Viewer Cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.GetImage">
      <summary>A method that is to Get a RasterImage version of the generated MPR image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewer.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.Finalize">
      <summary>This member overrides Finalize.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCell.OnHandleCreated(System.EventArgs)">
      <summary>Overrides Control.OnHandleCreated.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerMPRCell.CrossHairChanged">
      <summary>Notifies the instance that the cross-hair location on the cell has changed.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRCell.DistinguishMPRByColor">
      <summary>Gets or sets the value that indicates whether to color the MPR Cross hair line.</summary>
      <value>true to color the cross hair; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRCell.ShowMPRCrossHair">
      <summary>Gets or sets the value that determine whether to show the cross hair.</summary>
      <value>true to show the cross hair, false to hide the cross hair.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRCell.ShowSlabBoundaries">
      <summary>Gets or sets the value that determine whether to show the slab boundaries on the image.</summary>
      <value>true to show the slab boundaries, false to hide the slab boundaries.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRCrossHairChangedArgs">
      <summary>Provides data for the event CrossHairChanged.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRCrossHairChangedArgs.#ctor(Leadtools.LeadPointD)">
      <summary>Initializes a new instance of MedicalViewerMPRCrossHairChangedArgs with the specified parameter.</summary>
      <param name="crossHairPosition">The LeadPointD (x,y) coordinates of the cross-hair position.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRCrossHairChangedArgs.CrossHairPosition">
      <summary>Gets the coordinates of the cross-hair position.</summary>
      <value>LeadPointD that contains the coordinates of the cross-hair position.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRPolygon">
      <summary>MedicalViewerMPRPolygon class represents the MPR polygon that is used to generate a panoramic image as well as paraxial cut cells.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.#ctor">
      <summary>Initializes a new instance of the MedicalViewerMPRPolygon class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.#ctor(Leadtools.MedicalViewer.MedicalViewerCell)">
      <summary>Initializes a new instance of the MedicalViewerMPRPolygon class with explicit parameters.</summary>
      <param name="parent">MedicalViewerCell that represents the parent cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Recalculate">
      <summary>Recalculates the line position and the paraxial cut-line positions for the whole polygon.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Recalculate(System.Int32)">
      <summary>Recalculates the line position and the paraxials cut line positions.</summary>
      <param name="lineIndex">a zero-based index of the line that the user wants to recalculate its information.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Color">
      <summary>Gets or sets the color of the polygon.</summary>
      <value>System.Drawing.Color that represents the color of the polygon.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.EnableDragThickness">
      <summary>Gets or sets the value that determines whether to allow the user to click on the panoramic polygon body and drag a way to automatically adjust the thickness.</summary>
      <value>true to allow the user to click on the panoramic polygon body and drag a way to automatically adjust the thickness; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.PanoramicRepresentation">
      <summary>Gets or sets the cell that is used to display the panoramic image constructed using this polygon.</summary>
      <value>MedicalViewerPanoramicCell that is used to display the panoramic image constructed using this polygon.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.ParaxialCuts">
      <summary>Gets the MedicalViewerCollection assigned to the polygon.</summary>
      <value>MedicalViewerCollection assigned to the polygon.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Parent">
      <summary>Gets the MedicalViewerCell that represents the parent cell.</summary>
      <value>MedicalViewerCell that represents the parent cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Points">
      <summary>Gets the MedicalViewerPointCollection\&lt;PointF\&gt; that represents the polygon points.</summary>
      <value>MedicalViewerPointCollection\&lt;PointF\&gt; that represents the polygon points.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygon.Thickness">
      <summary>Gets or sets the value that determines the thickness of the panoramic polygon strip.</summary>
      <value>Value that indicates the thickness of the panoramic polygon strip.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRPolygonClickedEventsArgs">
      <summary>The MedicalViewerMPRPolygonClickedEventsArgs class provides data for the MedicalViewerCell.MPRPolygonClicked event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygonClickedEventsArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerMPRPolygon,System.Int32,Leadtools.MedicalViewer.MedicalViewerMPRPolygonHitTest,MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>The MedicalViewerMPRPolygonClickedEventsArgs class provides data for the MedicalViewerCell.MPRPolygonCreated event.</summary>
      <param name="polygon">MedicalViewerMPRPolygon that represents the clicked MPR polygon.</param>
      <param name="index">a zero-based index of the clicked polygon line or polygon handle. To determine if this index refer to polygon line or polygon handle, refer to Type.</param>
      <param name="type">MedicalViewerMPRPolygonHitTest enumeration that determines which part of the polygon has been clicked.</param>
      <param name="button">One of the System.Windows.Forms.MouseButtons values indicating which mouse button was used to fire this event.</param>
      <param name="clicks">The number of times a mouse button was pressed.</param>
      <param name="x">The x-coordinate of the mouse click, in pixels.</param>
      <param name="y">The y-coordinate of the mouse click, in pixels.</param>
      <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygonClickedEventsArgs.Index">
      <summary>Gets the index of the clicked polygon line or polygon handle.</summary>
      <value>A zero-based index of the clicked polygon line or polygon handle. To determine if this index refer to polygon line or polygon handle, refer to Type.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygonClickedEventsArgs.Polygon">
      <summary>Gets the MPR polygon that the user just clicked.</summary>
      <value>MedicalViewerMPRPolygon that represents the newly created polygon that the user clicked on.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygonClickedEventsArgs.Type">
      <summary>Gets the enumeration that determines which part of the polygon has been clicked. (the body or the handle).</summary>
      <value>MedicalViewerMPRPolygonHitTest enumeration that determines which part of the polygon has been clicked. (the body or the handle).</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRPolygonEventsArgs">
      <summary>The MedicalViewerMPRPolygonEventsArgs class provides data for the MedicalViewerCell.MPRPolygonCreated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMPRPolygonEventsArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerMPRPolygon)">
      <summary>The MedicalViewerMPRPolygonEventsArgs class provides data for the MedicalViewerCell.MPRPolygonCreated event.</summary>
      <param name="polygon">MedicalViewerMPRPolygon that represents the newly created MPR polygon.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMPRPolygonEventsArgs.Polygon">
      <summary>Gets the MPR polygon that the user just created.</summary>
      <value>MedicalViewerMPRPolygon that represents the newly created polygon that the user created using the action MedicalViewerActionType.PanoramicPolygon.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMultiCell">
      <summary>Represents the class that is used to create and adjust the cell being added to or removed from the MedicalViewer control.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.#ctor">
      <summary>Initializes a new MedicalViewerMultiCell class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.#ctor(Leadtools.RasterImage)">
      <summary>Initializes a new MedicalViewerMultiCell class object that has an image attached.</summary>
      <param name="image">The image that will be attached to this cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.#ctor(Leadtools.RasterImage,System.Boolean)">
      <summary>Initializes a new MedicalViewerMultiCell class object that has an image that can be set to fit within the image.</summary>
      <param name="image">The image that will be attached to this cell.</param>
      <param name="fit">true to fit the image within the cell area; otherwise, false.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.#ctor(Leadtools.RasterImage,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new MedicalViewerMultiCell class object that includes an image that can be set to fit within the image with sub-cells of the specified number of rows and columns.</summary>
      <param name="image">The image that will be attached to this cell.</param>
      <param name="fit">true to fit the image within the cell area; otherwise, false.</param>
      <param name="rows">Number of rows in the sub-cell areas, maximum allowed is 8.</param>
      <param name="columns">Number of columns in the sub-cell areas, maximum allowed is 8.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.Calibrate(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Int32)">
      <summary>Calibrates sub-cells based on information provided by the user. This allows the user to calibrate a sub-cell without using an annotation ruler.</summary>
      <param name="sourceDistance">The old length to be calibrated.</param>
      <param name="sourceMeasurementUnit">The unit of measure.</param>
      <param name="targetDistance">The new length to calibrate the old length to.</param>
      <param name="targetMeasurementUnit">The unit of measure.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell being calibrated. Pass -1 to calibrate all the sub-cells; pass -2 to calibrate the active sub-cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.Calibrate(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Int32,Leadtools.MedicalViewer.MedicalViewerCalibrationAxis)">
      <summary>Calibrates sub-cells along the specified axis based on information provided by the user. This allows the user to calibrate a cell without using an annotation ruler.</summary>
      <param name="sourceDistance">The old length to be calibrated.</param>
      <param name="sourceMeasurementUnit">The unit of measure.</param>
      <param name="targetDistance">The new length.</param>
      <param name="targetMeasurementUnit">The unit of measure.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell being calibrated. Pass -1 to calibrate all the sub-cells; pass -2 to calibrate the active sub-cell.</param>
      <param name="axis">The calibration axis.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.CalibrateRuler(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Int32)">
      <summary>Changes the length of the selected annotation ruler according to the new unit of measure.</summary>
      <param name="distance">The new length of the annotation ruler.</param>
      <param name="measurementUnit">The unit of measure.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell being calibrated. Pass -1 to calibrate all the sub-cells; pass -2 to calibrate the active sub-cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.CalibrateRuler(System.Double,Leadtools.MedicalViewer.MedicalViewerMeasurementUnit,System.Int32,Leadtools.MedicalViewer.MedicalViewerCalibrationAxis)">
      <summary>Changes the length of the selected annotation ruler according to the new unit of measure.</summary>
      <param name="distance">The new length of the annotation ruler.</param>
      <param name="measurementUnit">The unit of measure.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell being calibrated. Pass -1 to calibrate all the sub-cells; pass -2 to calibrate the active sub-cell.</param>
      <param name="axis">The calibration axis.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.ConvertAnnotationToRegion(System.Int32,Leadtools.RasterRegionCombineMode,System.Boolean)">
      <summary>Converts the selected annotation into a region of interest.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the selected annotation object being converted. Pass -1 to convert all sub-cells contained within the cell; pass -2 to convert only the active sub-cell.</param>
      <param name="combineMode">An enumerated Leadtools.RasterRegionCombineMode value that indicates how to create a region, if one is defined.</param>
      <param name="deleteAnnotation">true to delete the annotation after creating the region; otherwise, false.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.DeleteSelectedAnnotation(System.Int32)">
      <summary>This method deletes the selected annotation from the specified sub-cell annotation container.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell that contains the selected annotation.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.DeleteTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment)">
      <summary>Deletes the tag (overlay text) for the sub-cell.</summary>
      <param name="subCellIndex">Index of the sub-cell that will have the overlay text deleted.</param>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="alignment">The overlay text alignment.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.EditTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagInformation)">
      <summary>Edits the tag (overlay text) of the sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that will have the overlay text set.</param>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="alignment">The overlay text alignment.</param>
      <param name="information">A MedicalViewerTagInformation object that contains the new data for the tag.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.FlipAnnotationContainer(System.Int32)">
      <summary>Flips the annotation container with the specified sub-cell index.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell which has the annotation container being flipped.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.FlipImage(System.Int32)">
      <summary>Flips the image with the specified subCellIndex in the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which to flip.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.FlipOrientation(System.Int32)">
      <summary>Flips the orientation of an image in the cell with the specified parameters.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell that will have its orientation flipped.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.FreezeSubCell(System.Int32,System.Boolean)">
      <summary>Freezes the sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that is having its frozen status changed.</param>
      <param name="frozen">true to freeze the sub-cell, false to unfreeze the sub-cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetAnnotationContainer(System.Int32)">
      <summary>Gets the Leadtools.Annotations.Engine object which represents the annotation container.</summary>
      <param name="subCellIndex">sub-cell zero-based index value from which to get the annotation container.</param>
      <returns>&lt;!--MedicalViewer.AnnotationContainerExample--&gt;</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetCellImage(System.Int32,System.Boolean)">
      <summary>Returns a printable version of the sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell from which to get the image. If the cell layout displays more than one sub-cell and the user passed -1, the method will return a printable version of the entire cell.</param>
      <param name="exploded">true to print the sub-cell, but after scaling it up to fit the entire cell area.</param>
      <returns>System.Drawing.Image object which is the printable version of the sub-cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetCellImage(System.Int32,System.Boolean,Leadtools.MedicalViewer.MedicalViewerCellImageFeatures)">
      <summary>Returns a printable version of the sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell from which to get the image. If the cell layout displays more than one sub-cell and the user passed -1, the method will return a printable version of the entire cell.</param>
      <param name="exploded">true to print the sub-cell, but after scaling it up to fit the entire cell area.</param>
      <param name="features">An Enumerated MedicalViewerCellImageFeatures value that lets you select which part of the cell besides the image to draw.</param>
      <returns>System.Drawing.Image object which is the printable version of the sub-cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetCellImage(System.Int32,ValueType,System.Boolean,Leadtools.MedicalViewer.MedicalViewerCellImageFeatures)">
      <summary>Returns a printable version of the sub-cell using the specified dimensions.</summary>
      <param name="subCellIndex">Index value of the sub-cell to print.</param>
      <param name="rect">Rectangle specifying the size of the output image.</param>
      <param name="exploded"></param>
      <param name="features">A MedicalViewerCellImageFeatures value to select cell features besides the image to draw.</param>
      <returns>The **System.Drawing.Image** object representing the printable version of the cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetDefaultWindowLevelValues(System.Int32)">
      <summary>Retrieves the default window level values for the image with the specified sub-cell index.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which is having its default window level values retrieved. Pass -2 to retrieve the default window level values for the selected sub-cell image.</param>
      <returns>MedicalViewerWindowLevelValues object that contains the default window level values.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetDisplayedClippedImageRectangle(System.Int32)">
      <summary>Gets the System.Drawing.Rectangle that represents the part of the cell or sub-cell that is occupied by the image.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell of the rectangle that the method will retrieve.</param>
      <returns>A System.Drawing.Rectangle that represents the part of the cell or sub-cell that is occupied by the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetDisplayedImageRectangle(System.Int32)">
      <summary>Gets the System.Drawing.Rectangle that represents the image boundaries. This changes as you zoom in and out or offset the image.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell of the rectangle that the method will retrieve.</param>
      <returns>A System.Drawing.Rectanglethat represents the image boundaries. This changes as you zoom in and out or offset the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetDisplayedRectangle(System.Int32)">
      <summary>Gets the System.Drawing.Rectangle that represents the display area of the cell/sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell of the rectangle that the method will retrieve.</param>
      <returns>A System.Drawing.Rectangle that represents the display area of the cell/sub-cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetNoImageText(System.Int32)">
      <summary>Get the text that will be displayed if the image is not loaded yet. This is used only with the low memory usage feature, please refer to EnableLowMemoryUsage.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell getting its no-image-text retrieved.</param>
      <returns>A string that contains the no-image-text.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetOffset(System.Int32)">
      <summary>Gets the current coordinates of the image.</summary>
      <param name="subCellIndex">Zero-based index of sub-cell that contains the image whose position will be retrieved.</param>
      <returns>A Point2D object representing the current coordinates of the image.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetRotateImagePerspectiveAngle(System.Int32)">
      <summary>Gets the rotation angle for the image in the specified sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image for which the rotation angle is being retrieved. If the cell contains only 1 image, set this parameter to 0. Pass -2 to retrieve the rotation angle of the selected sub-cell.</param>
      <returns>The image rotation angle.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetScale(System.Int32)">
      <summary>Gets the scale of an image with the specified sub-cell index.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell which is having its scale retrieved.</param>
      <returns>The scale value.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetScaleMode(System.Int32)">
      <summary>Gets the scale mode for the specified sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell which is having its scale mode retrieved.</param>
      <returns>An enumerated MedicalViewerScaleMode value that represents the scale mode.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetSelectedAnnotationAttributes(System.Int32)">
      <summary>Retrieves the selected annotation attribute for the specified cell or sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the targeted selected annotation object.</param>
      <returns>A MedicalViewerAnnotationAttributes object that contains the selected annotation attributes.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment)">
      <summary>Retrieves the tag (overlay text) for a sub-cell.</summary>
      <param name="subCellIndex">Index of the sub-cell that is having its overlay text retrieved.</param>
      <param name="row">The line at which the overlay text is placed.</param>
      <param name="alignment">The overlay text alignment.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetTitlebarIconState(System.Int32,System.Int32)">
      <summary>Determines whether the specified icon is checked.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the targeted icon.</param>
      <param name="iconIndex">Index of the icon to be checked.</param>
      <returns>A MedicalViewerIconStatus enumeration value that contains the status of the specified icon in the specified cell.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetWindowLevelCenter(System.Int32)">
      <summary>Gets the window level center value for the image.</summary>
      <param name="subCellIndex">Zero-based index of sub-cell that contains the image whose window level center value will be retrieved</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.GetWindowLevelWidth(System.Int32)">
      <summary>Gets the window level width value for the image.</summary>
      <param name="subCellIndex">Zero-based index of sub-cell that contains the image whose window level width value will be retrieved.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.Invalidate(System.Int32)">
      <summary>Redraws the cell and causes a paint message to be sent to the MedicalViewer control that owns this cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that will be invalidated</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.InvertImage(System.Int32)">
      <summary>Inverts the image in the specific sub-cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image being inverted.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.IsImageFlipped(System.Int32)">
      <summary>Retrieves a value that indicates whether the image in the specified sub-cell index has been reversed or not.</summary>
      <param name="subCellIndex">Index of the sub-cell that has the image which to retrieve whether it is flipped.</param>
      <returns>true if the image is flipped; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.IsImageInverted(System.Int32)">
      <summary>Retrieves a value that indicates whether the image in the specified sub-cell index has been inverted.</summary>
      <param name="subCellIndex">The zero-based Index of the sub-cell that has the image being checked.</param>
      <returns>true if the image is inverted; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.IsImageReversed(System.Int32)">
      <summary>Retrieves whether the image in the specified sub-cell index has been reversed or not.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which to retrieve if it is reversed.</param>
      <returns>true if the image is reversed; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadAnnotations(System.IO.Stream,System.Int32)">
      <summary>Loads the annotation container to the specified sub-cell index from a file.</summary>
      <param name="stream">A System.IO.Stream that contains the file being loaded.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell to which the annotation container will be loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadAnnotations(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Loads the annotation container(s) to the specified sub-cell index from a file, starting from the specified page in the file.</summary>
      <param name="stream">A System.IO.Stream that contains the file being loaded.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell to which the annotation container will be loaded.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one annotation container.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadAnnotations(System.String,System.Int32)">
      <summary>Loads the annotation container to the specified sub-cell index from a file.</summary>
      <param name="fileName">A string that contains the path to the file being loaded.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell to which the annotation container will be loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadAnnotations(System.String,System.Int32,System.Int32)">
      <summary>Loads the annotation container(s) to the specified sub-cell index from a file, starting from the specified page in the file.</summary>
      <param name="fileName">A string that contains the path to the file with the annotation container being loaded.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell to which the annotation container will be loaded.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one annotation container.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadRegion(System.String,System.Int32)">
      <summary>Loads regions from a file in the specified sub-cell image.</summary>
      <param name="fileName">A string that contains the path to the file that contains the region(s) to load.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the image being loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.LoadRegion(System.String,System.Int32,System.Int32)">
      <summary>Loads regions from a file in the specified sub-cell image.</summary>
      <param name="fileName">A string that contains the path to the file that contains the region(s) to load.</param>
      <param name="subCellIndex">Index of the sub-cell that contains the image being loaded.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one region.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.PointToClient(System.Int32,Point)">
      <summary>Returns the client coordinates (the cell coordinates) corresponding to the image coordinates specified by the user.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the image which is having its coordinates sent.</param>
      <param name="point">The System.Drawing.Point object that represents the image coordinates.</param>
      <returns>A System.Drawing.Point object that contains the client (the cell) coordinates.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.PointToImage(System.Int32,Point)">
      <summary>Returns the image coordinates corresponding to the mouse coordinates specified by the user.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the image which is having its coordinates retrieved.</param>
      <param name="point">The System.Drawing.Point object that represents the mouse coordinates.</param>
      <returns>A System.Drawing.Point object that contains the image coordinates.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.RemoveRegion(System.Int32)">
      <summary>Deletes the region from all of the images in the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell to which the annotation container will be loaded.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.ResetWindowLevelValues(System.Int32)">
      <summary>Resets the image window level to its default values.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which will be reset to its default values. Pass -1 to reset the window level values for all the images in the cell. Pass - 2 to reset the window level values for the selected sub-cell image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.ReverseAnnotationContainer(System.Int32)">
      <summary>Reverses the annotation container with the specified sub-cell index.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell which is having its annotation container reversed.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.ReverseImage(System.Int32)">
      <summary>Reverses the image with the specified subCellIndex in the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which to reverse.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.ReverseOrientation(System.Int32)">
      <summary>Reverses the orientation of an image in the cell with the specified subCellIndex.</summary>
      <param name="subCellIndex">a zero-based index of the sub-cell that will have its orientation reversed.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.RotateAnnotationContainer(System.Double,System.Int32)">
      <summary>Rotates the annotation container with the specified sub-cell index by the specified amount.</summary>
      <param name="angle">The amount of rotation</param>
      <param name="subCellIndex">The zero-based index of the sub-cell which is having its annotation container rotated.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.RotateImagePerspective(System.Int32,System.Int32)">
      <summary>Rotates the perspective of the image with the specified sub-cell index by a specified rotation angle.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image is to be rotated. Pass -1 to rotate all the images in the cells. Pass - 2 to rotate the view perspective of the selected sub-cell image.</param>
      <param name="angle">The rotation angle.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.RotateOrientation(System.Int32,System.Int32)">
      <summary>Rotates the orientation of an image in the cell with the specified parameters.</summary>
      <param name="subCellIndex">a zero-based index of the sub-cell that will have its orientation rotated..</param>
      <param name="angle">angle of rotation, the values must be multiple of 90 (i.e. 270, 180, 90, 0, -90, -180, etc.).</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveAnnotations(System.IO.Stream,System.Int32)">
      <summary>Saves the annotation container of the specified sub-cell index to a file.</summary>
      <param name="stream">A System.IO.Stream that to which to save the annotation container.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the annotation container being saved.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveAnnotations(System.IO.Stream,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerFileOperation)">
      <summary>Saves the annotation container(s) of a cell to a file.</summary>
      <param name="stream">A System.IO.Stream that to which to save the annotation container.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the annotation container to be saved.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one annotation container. When saving a file, any value greater than the total number of pages will cause the saved annotation container to be appended to the end of the file.</param>
      <param name="operation">An enumerated MedicalViewerFileOperation value that indicates the operation to be taken on the file when saving the annotation container.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveAnnotations(System.String,System.Int32)">
      <summary>Saves the annotation container of the specified sub-cell index to a file.</summary>
      <param name="fileName">A string that contains the path to the file to which to save the annotation container.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the annotation container being saved.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveAnnotations(System.String,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerFileOperation)">
      <summary>Saves the annotation container(s) of a cell to a file.</summary>
      <param name="fileName">A string that contains the path to the file to which to save the annotation container.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the annotation container to be saved.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one annotation container. When saving a file, any value greater than the total number of pages will cause the saved annotation container to be appended to the end of the file.</param>
      <param name="operation">An enumerated MedicalViewerFileOperation value that indicates the operation to be taken on the file when saving the annotation container.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveRegion(System.String,System.Int32)">
      <summary>Saves regions to a file from the specified sub-cell image.</summary>
      <param name="fileName">A string that contains the path to the file which to save the region in.</param>
      <param name="subCellIndex">Index of the sub-cell that contains the image which to save its region.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SaveRegion(System.String,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerFileOperation)">
      <summary>Saves cell regions to a file.</summary>
      <param name="fileName">A string that contains the path to the file to which to save the region.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the image which is having its regions saved.</param>
      <param name="startPage">The page number of a multipage file, which can contain more than one region. When saving a file, any value greater than the total number of pages will cause the saved region to be appended to the end of the file.</param>
      <param name="operation">An enumerated MedicalViewerFileOperation value that indicates the operation to be taken on the file when saving a region.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetAnnotationContainer(Leadtools.Annotations.Engine.AnnContainer,System.Int32)">
      <summary>Sets the Leadtools.Annotations.Engine object which represents the annotation container.</summary>
      <param name="annContainer"></param>
      <param name="subCellIndex">The sub-cell zero-based index value which to set the annotation container into.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetDefaultWindowLevelValues(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the default window level values for the image with the specified sub-cell index.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that has the image which is having its default window level values set.</param>
      <param name="width">The default window level width value.</param>
      <param name="center">The default window level center value.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetNoImageText(System.Int32,System.String)">
      <summary>Set the text that will be displayed if the image is not loaded yet. This is used only with the low memory usage feature, please refer to EnableLowMemoryUsage</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell getting its no-image-text retrieved.</param>
      <param name="text">the text that will be displayed when the image is not loaded yet.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetOffset(System.Int32,System.Double,System.Double)">
      <summary>Translates the image position according to the provided X and Y values.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell that contains the image that will have its offset changed.</param>
      <param name="x">The x coordinates that represents the new position of the image.</param>
      <param name="y">The y coordinates that represents the new position of the image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetScale(System.Int32,System.Double)">
      <summary>Sets the scale of an image with a specified sub-cell index by a specified value.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell which is having its scale set.</param>
      <param name="scale">The new scale value to be set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetScaleMode(System.Int32,Leadtools.MedicalViewer.MedicalViewerScaleMode)">
      <summary>Sets the scale mode for the specified sub-cell.</summary>
      <param name="subCellIndex">The index of the sub-cell which is having its scale mode set.</param>
      <param name="scaleMode">An Enumerated MedicalViewerScaleMode value that represents the scale mode to be set.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that will have the overlay text set.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">The overlay text alignment.</param>
      <param name="type">The type of the tag.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType,System.String)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that will have the overlay text set.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">The overlay text alignment.</param>
      <param name="type">The type of tag.</param>
      <param name="userText">The user text. Ignored if the \type\ is not set to MedicalViewerTagType.UserData.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetTag(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,Leadtools.MedicalViewer.MedicalViewerTagType,System.String,Font,Color)">
      <summary>Adds a tag (overlay text) to the cell.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that will have the overlay text set.</param>
      <param name="row">The line at which the overlay text will be drawn.</param>
      <param name="alignment">The overlay text alignment.</param>
      <param name="type">The type of tag.</param>
      <param name="userText">The user text. Ignored if the \type\ is not set to MedicalViewerTagType.UserData.</param>
      <param name="font">The font that will be used to draw the tag over the cell.</param>
      <param name="fontColor">The color of the text.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetTitlebarIconState(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerIconStatus)">
      <summary>Checks or un-checks the specified icon.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell that contains the targeted icon.</param>
      <param name="iconIndex">Index of the icon to be checked un-checked.</param>
      <param name="status">The new status of the icon.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SetWindowLevel(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the window level width and center values for the image.</summary>
      <param name="subCellIndex">A zero-based index of the sub-cell that contains the image that will have its window level changed.</param>
      <param name="width">A System.Int32 value that represents the new window level width value.</param>
      <param name="center">A System.Int32 value that represents the new window level center value.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.SubCellFrozen(System.Int32)">
      <summary>Retrieves a value that indicates whether the sub-cell has been frozen.</summary>
      <param name="subCellIndex">The zero-based index of the sub-cell being checked.</param>
      <returns>true if the sub-cell is frozen; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewerMultiCell.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.Finalize">
      <summary>This member overrides Finalize.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerMultiCell.OnHandleCreated(System.EventArgs)">
      <summary>Overrides Control.OnHandleCreated.</summary>
      <param name="e">An System.EventArgs that contains the event data.</param>
    </member>
    <member name="E:Leadtools.MedicalViewer.MedicalViewerMultiCell.ActiveSubCellChanged">
      <summary>Optional delegate method for additional processing.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMultiCell.Columns">
      <summary>Gets or sets the value that indicates the number of sub-cell columns.</summary>
      <value>Value that indicates the number of sub-cell columns. The maximum allowed is 8.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMultiCell.EnableExplodeMode">
      <summary>Gets or sets the value that indicates whether to enable the exploded mode for the user so the cell will enter the exploded mode if the user double-clicks on any of the visible sub-cells.</summary>
      <value>true if the enable the exploded mode; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMultiCell.Exploded">
      <summary>Gets or sets the value that indicates whether the cell is in the exploded mode or not.</summary>
      <value>true if the cell is in the exploded mode, otherwise it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerMultiCell.Rows">
      <summary>Gets or sets the value that indicates the number of sub-cell rows.</summary>
      <value>Value that indicates the number of sub-cell rows. The maximum allowed is 8.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerNudgeTool">
      <summary>Represents the class that contains the properties of the nudge tool.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerNudgeTool.#ctor">
      <summary>Initializes a new instance of the MedicalViewerNudgeTool class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerNudgeTool.#ctor(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerNudgeToolShape)">
      <summary>Initializes a new instance of the MedicalViewerNudgeTool class with explicit parameters.</summary>
      <param name="width">The width of the nudge tool brush.</param>
      <param name="height">The height of the nudge tool brush.</param>
      <param name="shape">An Enumerated MedicalViewerNudgeToolShape value that indicates the shape of the nudge tool brush.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerNudgeTool.#ctor(System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerNudgeToolShape,System.Boolean)">
      <summary>Initializes a new instance of the MedicalViewerNudgeTool class with explicit parameters.</summary>
      <param name="width">The width of the nudge tool brush.</param>
      <param name="height">The height of the nudge tool brush.</param>
      <param name="shape">An Enumerated MedicalViewerNudgeToolShape value that indicates the shape of the nudge tool brush.</param>
      <param name="autoDetect">true to make nudge tool expand the region if the cursor is inside the region, and shrink if outside, false to always nudge or shrink regarding the cursor position.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerNudgeTool.AutoDetect">
      <summary>Gets or sets the value that represents whether to detect the nudge modification type.</summary>
      <value>true to make nudge tool expand the region if the cursor is inside the region, and shrink if outside, false to always nudge or shrink regarding the cursor position</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerNudgeTool.Height">
      <summary>Gets or sets the value that represents the height of the nudge tool brush.</summary>
      <value>Value that represents the height of the nudge tool brush, default is 20.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerNudgeTool.Shape">
      <summary>Gets or sets the enumerated value that indicates the shape of the nudge tool brush.</summary>
      <value>An Enumerated MedicalViewerNudgeToolShape value that indicates the shape of the nudge tool brush. The default is MedicalViewerNudgeToolShape.Ellipse.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerNudgeTool.Width">
      <summary>Gets or sets the value that represents the width of the nudge tool brush.</summary>
      <value>Value that represents the width of the nudge tool brush, default is 20.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerOffset">
      <summary>Represents the class that contains the properties of the offset action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerOffset.#ctor">
      <summary>Initializes a new instance of the MedicalViewerOffset class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerOffset.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerOffset class with specified x and y offsets.</summary>
      <param name="x">the x offset of the image.</param>
      <param name="y">the y offset of the image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerOffset class with specified x and y offsets, mouse sensitivity, mouse reset, and cursor.</summary>
      <param name="x">The x offset of the image.</param>
      <param name="y">The y offset of the image.</param>
      <param name="sensitivity">Integer value that represents the mouse sensitivity, in percent. Default is 100. A value of 100 indicates that the amount of change in the action is equal to the amount of movement of the mouse. For example, if the mouse is moved 1 pixel, the action changes by 1 unit. A value of 50 indicates that the amount of change in the action is 50 percent of the amount of mouse movement. For example, if the mouse is moved 2 pixels, the action only changes by one unit.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerOffset.X">
      <summary>Gets or sets the value that indicates the X offset of the image.</summary>
      <value>Value that indicates the X offset of the image. In other words, it is the horizontal distance between the center of the image and the center of the cell. The default value is 0.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerOffset.Y">
      <summary>Gets or sets the value that indicates the Y offset of the image.</summary>
      <value>Value that indicates the Y offset of the image. In other words, it is the vertical distance between the center of the image and the center of the cell. The default is 0.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPaintEventArgs">
      <summary>The MedicalViewerPaintEventArgs class provides information about the MedicalViewerCell.CustomPaint event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPaintEventArgs.#ctor(Graphics,Rectangle,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerPaintEventArgs class.</summary>
      <param name="graphics">The System.Drawing.Graphics used to paint the item.</param>
      <param name="clipRectangle">The System.Drawing.Rectangle that represents the rectangle in which to paint.</param>
      <param name="cellIndex">the index of the cell that that the user tag will be drawn on.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that that the user tag will be drawn on.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintEventArgs.CellIndex">
      <summary>Gets or sets the value that indicates the index of the cell that will be painted. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell that will be painted. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintEventArgs.SubCellIndex">
      <summary>Gets or sets the value that indicates the index of the sub-cell that will be painted.</summary>
      <value>Value that indicates the index of the sub-cell that will be painted.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs">
      <summary>The MedicalViewerPaintInformationEventArgs class provides data for various MedicalViewer painting events.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs.#ctor(Graphics,Rectangle,Rectangle,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerPaintInformationEventArgs class with explicit parameters.</summary>
      <param name="graphics">The System.Drawing.Graphics used to paint the cell or the sub-cell.</param>
      <param name="rectangle">The System.Drawing.Rectangle that represents the rectangle in which to paint.</param>
      <param name="imageRectangle">The System.Drawing.Rectangle that represents the image rectangle for the cell or sub-cell.</param>
      <param name="cellIndex">The zero-based index of the cell that is to be painted.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that is to be painted.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that is to be painted. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell that is to be painted. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs.Draw">
      <summary>Gets or sets the value that indicates whether to make the control draw the sub-cell. This is used only with the MedicalViewerCell.PrePaint event.</summary>
      <value>true to make the control draw the cell or the sub-cell; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs.ImageRectangle">
      <summary>Gets the rectangle that represents the image rectangle for the cell or sub-cell.</summary>
      <value>The rectangle that represents the image rectangle for the cell or sub-cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPaintInformationEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell that is to be painted.</summary>
      <value>Value that indicates the index of the sub-cell that is to be painted.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPanoramicCell">
      <summary>Represents the cell that will be used to display the panoramic frame resulted from adding a MedicalViewerMPRPolygon to another cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPanoramicCell.#ctor">
      <summary>Initializes a new instance of the MedicalViewerPanoramicCell class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPanoramicCell.#ctor(Leadtools.MedicalViewer.MedicalViewerMPRPolygon)">
      <summary>Initializes a new instance of the MedicalViewerMPRPolygon class with explicit parameters.</summary>
      <param name="polygon">The polygon which will be used as a source for generating the panoramic image.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPanoramicCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewerCommonActions.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPanoramicCell.Finalize">
      <summary>This member overrides Finalize.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPanoramicCell.Polygon">
      <summary>Gets or sets the polygon that will be used to generate the panoramic image for this cell.</summary>
      <value>MedicalViewerMPRPolygon that represents the polygon that will be used to generate the panoramic image for this cell.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs">
      <summary>The MedicalViewerPanoramicDataRequestedEventArgs class provides data for the MedicalViewerCell.PanoramicDataRequested event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerPanoramicDataRequestedEventArgs class object with explicit parameters.</summary>
      <param name="frameIndex">Index of the requested frame.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs.CaptureDate">
      <summary>Gets or sets the frame capture date</summary>
      <value>System.DateTime object that represents the capture date of the frame with the specified FrameIndex.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs.Frame">
      <summary>Gets or sets the requested frame</summary>
      <value>Leadtools.RasterImage that represents the requested frame with the specified FrameIndex.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs.FrameIndex">
      <summary>Gets the zero-based index of the requested frame.</summary>
      <value>A zero-based index of the requested frame. The user needs to provide the image with the specified index through Frame.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPanoramicDataRequestedEventArgs.InstanceNumber">
      <summary>Gets or sets the frame instance number</summary>
      <value>System.DateTime object that represents the instance number of the frame with the specified FrameIndex.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell">
      <summary>Represents the cell that will be used to display the paraxial cut cells. It is generated from creating and adding a MedicalViewerMPRPolygon to another cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.#ctor">
      <summary>Initializes a new instance of the MedicalViewerParaxialCutCell class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.#ctor(Leadtools.MedicalViewer.MedicalViewerMPRPolygon)">
      <summary>Initializes a new instance of the MedicalViewerParaxialCutCell class with explicit parameters.</summary>
      <param name="polygon">The polygon which will be used as a source for generating the paraxial cut frames.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.#ctor(Leadtools.MedicalViewer.MedicalViewerMPRPolygon,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerParaxialCutCell class with explicit parameters.</summary>
      <param name="polygon">The polygon which will be used as a source for generating the paraxial cut frames.</param>
      <param name="polygonLineIndex">A zero-based index of the polygon line where this paraxial cell will be attached to.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.Dispose(System.Boolean)">
      <summary>Releases all resources used by the MedicalViewerParaxialCutCell.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.ActiveLineColor">
      <summary>Gets or sets the color of the active paraxial line.</summary>
      <value>System.Drawing.Color that that represents the color of the active paraxial line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.EfficientMemoryEnabled">
      <summary>Enables the efficient memory usage for the paraxial cut cell.</summary>
      <value>true to enable the efficient memory usage for the paraxial cut cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.LinesColor">
      <summary>Gets or sets the color of the paraxial line.</summary>
      <value>System.Drawing.Color that that represents the color of the paraxial line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.ParaxialDistance">
      <summary>Gets or sets the distance between each paraxial line and the next.</summary>
      <value>value that determines the distance between each paraxial line and the next.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.ParaxialLength">
      <summary>Gets or sets the length of the paraxial lines.</summary>
      <value>Value that determines the length of the paraxial lines.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.Polygon">
      <summary>Gets the polygon that is used to generate the paraxial cut frames.</summary>
      <value>MedicalViewerMPRPolygon that is used to generated the paraxial cut frames.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.PolygonLineIndex">
      <summary>Gets or sets the index of the polygon line that will be used to calculate the paraxial lines position.</summary>
      <value>A zero-based index of the polygon line that will be used to calculate the paraxial lines position.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerParaxialCutCell.ShowLines">
      <summary>Gets or sets the value that determines whether to show the paraxial lines representation over the generator polygon MedicalViewerMPRPolygon and the MedicalViewerPanoramicCell.</summary>
      <value>true to show the paraxial line representation, false otherwise.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine">
      <summary>Represents the class that is used to create or adjust the oblique cut plane.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.#ctor">
      <summary>Initializes a new MedicalViewerPlaneCutLine class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.#ctor(Leadtools.MedicalViewer.MedicalViewerCell)">
      <summary>Initializes a new MedicalViewerPlaneCutLine class object with explicit parameters.</summary>
      <param name="derivativeCell">MedicalViewerCell that contains the derivative cell. The derivative is the cell that will hold the image generated from this cut plane.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.#ctor(Leadtools.MedicalViewer.Point2D,Leadtools.MedicalViewer.Point2D)">
      <summary>Initializes a new MedicalViewerPlaneCutLine class object with explicit parameters.</summary>
      <param name="point1">Point2D struct that contains the x and y coordinates of the first line point.</param>
      <param name="point2">Point2D struct that contains the x and y coordinates of the second line point.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.Color">
      <summary>Gets or sets the cut-plane color along with its derivative cell color.</summary>
      <value>System.Drawing.Color that represents the cut-plane color and its derivative cell reference line color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.DerivativeCell">
      <summary>Gets the cell that contains the derivative image.</summary>
      <value>MedicalViewerCell that represents the cell which contains the derivative image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLine.SliceThickness">
      <summary>Gets or sets the desired thickness of the generated slice resulted from the cut-line.</summary>
      <value>A value that represents the thickness of the generated slice resulted from the cut-line.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs">
      <summary>The MedicalViewerPlaneCutLineEventArgs class provides data for the MedicalViewerCell.PlaneCutLineClicked event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerMouseButtons)">
      <summary>Initializes a new instance of the MedicalViewerPlaneCutLineEventArgs class with explicit parameters.</summary>
      <param name="cellIndex">The index of the cell that that has had its cut line selected.</param>
      <param name="cutLineIndex">The index of the selected cut line.</param>
      <param name="x">The pointer X position.</param>
      <param name="y">The pointer Y position.</param>
      <param name="mouseButton">AMedicalViewerMouseButtons value that represents the button that was clicked to select the cut line.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.Button">
      <summary>Gets an enumerated value that indicates which Mouse button was used to click on the cut line object.</summary>
      <value>AMedicalViewerMouseButtons value that represents the button that was used to click on the cut line object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell that has the cut line that was selected. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell that has the cut line that was selected. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.CutLineIndex">
      <summary>Gets the value that indicates the index of the selected cut line.</summary>
      <value>Value that indicates the index of the selected cut line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.X">
      <summary>Gets the value that indicates the X position for the pointer.</summary>
      <value>Value that indicates the X position for the pointer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerPlaneCutLineEventArgs.Y">
      <summary>Gets the value that indicates the Y position for the pointer.</summary>
      <value>Value that indicates the Y position for the pointer.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1">
      <summary>Represents a generic collection of MedicalViewerPlaneCutLine objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerPlaneCutLinesCollection\&lt;MedicalViewerPlaneCutLine\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.Add(Leadtools.MedicalViewer.MedicalViewerPlaneCutLine)">
      <summary>Appends the cut line object to the collection.</summary>
      <param name="item">MedicalViewerPlaneCutLine that represents the item to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.Clear">
      <summary>Removes all items from the MedicalViewerPlaneCutLinesCollection\&lt;MedicalViewerPlaneCutLine\&gt;.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.Insert(System.Int32,Leadtools.MedicalViewer.MedicalViewerPlaneCutLine)">
      <summary>Appends the cut line object to the collection using the specified index.</summary>
      <param name="index">Index of the item to insert.</param>
      <param name="item">MedicalViewerPlaneCutLine that represents the item to be inserted.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.Remove(Leadtools.MedicalViewer.MedicalViewerPlaneCutLine)">
      <summary>Removes the specified cell.</summary>
      <param name="item">Plane Cut line to remove.</param>
      <returns>true if the element was removed successfully, otherwise it is false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the plane cut line from the specified index.</summary>
      <param name="index">Index of the item to remove.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.OnItemAdded(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemAdded.</summary>
      <param name="e">A MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPlaneCutLinesCollection`1.OnItemRemoved(Leadtools.MedicalViewer.MedicalViewerCollectionEventArgs)">
      <summary>Overrides the Leadtools.MedicalViewerCollection.OnItemRemoved.</summary>
      <param name="e">A MedicalViewerCollectionEventArgs that contains the event data.</param>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerPointCollection`1">
      <summary>Represents a generic collection of System.Drawing.PointF objects.</summary>
      <typeparam name="PointF"></typeparam>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPointCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerPointCollection\&lt;PointF\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPointCollection`1.Add(PointF)">
      <summary>Adds the specified point.</summary>
      <param name="item">Point to add.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPointCollection`1.Insert(System.Int32,PointF)">
      <summary>Inserts the specified point.</summary>
      <param name="index">Index of insertion.</param>
      <param name="item">Point to insert.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPointCollection`1.Remove(PointF)">
      <summary>Removes the specified point.</summary>
      <param name="item">Point to remove.</param>
      <returns>true if the element was removed successfully; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerPointCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the point from the specified index.</summary>
      <param name="index">Index of the item to remove.</param>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs">
      <summary>The MedicalViewerProbeToolTextChangedEventArgs class provides data for the MedicalViewerBaseCell.ProbeToolTextChanged event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs.#ctor(System.Int32,System.Single,System.Single,System.String)">
      <summary>Initializes a new instance of the MedicalViewerProbeToolTextChangedEventArgs class object with explicit parameters.</summary>
      <param name="subCellIndex">sub-cell index of the cell</param>
      <param name="x">the x-coordinates of the mouse position.</param>
      <param name="y">the x-coordinates of the mouse position.</param>
      <param name="text">the text that is displayed over the probe tool.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs.SubCellIndex">
      <summary>Gets the sub-cell index over which the probe tool hovers.</summary>
      <value>Value that indicates the sub-cell index over which the probe tool hovers.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs.Text">
      <summary>Gets or sets the text that is displayed over the probe tool.</summary>
      <value>A string that represents the text that is displayed over the probe tool.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs.X">
      <summary>Gets the x-coordinates of the mouse position relative to the cell.</summary>
      <value>Value that indicates the x-coordinates of the mouse position relative to the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerProbeToolTextChangedEventArgs.Y">
      <summary>Gets the y-coordinates of the mouse position relative to the cell.</summary>
      <value>Value that indicates the y-coordinates of the mouse position relative to the cell.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerReferenceLine">
      <summary>Represents the class that contains the two points used to draw the reference line.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerReferenceLine.#ctor">
      <summary>Initializes a new MedicalViewerReferenceLine class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerReferenceLine.#ctor(Leadtools.MedicalViewer.Point2D,Leadtools.MedicalViewer.Point2D)">
      <summary>Initializes a new MedicalViewerReferenceLine class object with explicit parameters.</summary>
      <param name="point1">A Point2D that represents the first point of the reference line.</param>
      <param name="point2">A Point2D that represents the second point of the reference line.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLine.Center">
      <summary>Gets or sets the Point2D that represents the center point of the cut-line and double-cutline.</summary>
      <value>Point2D that represents the center point of the cut-line and double-cutline.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLine.Point1">
      <summary>Gets or sets the Point2D that represents the first point of the reference line.</summary>
      <value>Point2D that represents the first point of the reference line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLine.Point2">
      <summary>Gets or sets the Point2D that represents the second point of the reference line.</summary>
      <value>Point2D that represents the second point of the reference line.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties">
      <summary>Represents the class that is used to create the MedicalViewerPlaneCutLine, and adjust to reference line properties of this cell.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.#ctor">
      <summary>Initializes a new MedicalViewerReferenceLineProperties class object with default parameters.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.Color">
      <summary>Gets or sets the System.Drawing.Color that represents the color of the reference line.</summary>
      <value>System.Drawing.Color that represents the color of the reference line.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.CutLines">
      <summary>Gets the MedicalViewerPlaneCutLinesCollection\&lt;MedicalViewerPlaneCutLine\&gt; assigned to the cell.</summary>
      <value>The MedicalViewerPlaneCutLinesCollection\&lt;MedicalViewerPlaneCutLine\&gt; assigned to the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.DoubleCutLines">
      <summary>Gets the MedicalViewerDoublePlaneCutLinesCollection\&lt;MedicalViewerDoublePlaneCutLine\&gt; assigned to the cell.</summary>
      <value>The MedicalViewerDoublePlaneCutLinesCollection\&lt;MedicalViewerDoublePlaneCutLine\&gt; assigned to the cell.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.Enabled">
      <summary>Gets or sets the value that indicates whether to display the reference line of this cell on other cells.</summary>
      <value>True to display the reference line, otherwise it is false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.Movable">
      <summary>Gets or sets a value that indicates whether to allow the user to move the cutline and double-cutlines by mouse.</summary>
      <value>true to allow the user to move the cutline and double-cutline by mouse; false to only allow the user to change the position of the cut-line and double-cutline programmatically.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerReferenceLineProperties.ShowFirstAndLast">
      <summary>Gets or sets a value that indicates whether to display the potential first and last reference lines of this cell on other cells.</summary>
      <value>true to display the potential first and last reference line; otherwise, it is false.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRegion">
      <summary>Represents the class that contains the properties of the region actions.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerRegion.#ctor">
      <summary>Initializes a new instance of the MedicalViewerRegion class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerRegion.#ctor(System.Boolean,Leadtools.RasterRegionCombineMode)">
      <summary>Initializes a new instance of the MedicalViewerRegion class.</summary>
      <param name="createFromCenter">true to create a region from the center; otherwise, false.</param>
      <param name="combineMode">The action to take regarding combining the existing image region, if one is defined.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegion.CreateFromCenter">
      <summary>Gets or sets a value that indicates whether to create a region from the center or from the edge.</summary>
      <value>true to create a region from the center; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegion.Operation">
      <summary>Gets or sets the enumerated value that specifies what action to take regarding the existing image region.</summary>
      <value>Enumerated value that specifies what action to take regarding the existing image region, if one is defined.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs">
      <summary>The MedicalViewerRegionCreatedEventArgs class provides data for the MedicalViewerCell.RegionCreated event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs.#ctor(Region,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerRegionState)">
      <summary>Initializes a new instance of the MedicalViewerRegionCreatedEventArgs class with explicit parameters.</summary>
      <param name="region">A System.Drawing.Region object that has been added or changed.</param>
      <param name="cellIndex">The zero-based index of the cell that received the region update.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell that received the region update.</param>
      <param name="state">An enumerated MedicalViewerRegionState value that represents the type of the region update made.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs.CellIndex">
      <summary>Gets a value that indicates the index of the cell that received the region update. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell that received the region update. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs.Region">
      <summary>Gets the System.Drawing.Region object that has been added or changed.</summary>
      <value>A System.Drawing.Region object that has been added or changed.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs.State">
      <summary>Gets an enumerated value that indicates the type of the region update made.</summary>
      <value>An enumerated MedicalViewerRegionState value that represents the type of the region update made.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRegionCreatedEventArgs.SubCellIndex">
      <summary>Gets a value that indicates the index of the sub-cell that received the region update.</summary>
      <value>Value that indicates the index of the sub-cell that received the region update.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRequestedFramesInformationEventArgs">
      <summary>The MedicalViewerRequestedFramesInformationEventArgs class provides data for the MedicalViewer MedicalViewerCell.FramesRequested event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerRequestedFramesInformationEventArgs.#ctor(System.Int32,System.Int32[])">
      <summary>Initializes a new instance of the MedicalViewerRequestedFramesInformationEventArgs class.</summary>
      <param name="cellIndex">The index of the cell on which the user tag will be drawn.</param>
      <param name="requestedFramesIndexes">Array of requested frame indexes.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRequestedFramesInformationEventArgs.CellIndex">
      <summary>Gets or sets a value that indicates the index of the cell that requested the frames. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell that requested the frames. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerRequestedFramesInformationEventArgs.RequestedFramesIndexes">
      <summary>Gets or sets the array of the requested frame indexes.</summary>
      <value>Array of array of the requested frame indexes.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerScale">
      <summary>Represents the class that contains the properties of the scale action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerScale.#ctor">
      <summary>Initializes a new instance of the MedicalViewerScale class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerScale.#ctor(System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerScale class with a specified scaling factor.</summary>
      <param name="scale">The scaling factor</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerScale.#ctor(System.Int32,System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerScale class with specified scaling, mouse sensitivity, mouse reset, and cursor.</summary>
      <param name="scale">An integer value that indicates the scaling factor</param>
      <param name="sensitivity">An integer value that represents the mouse sensitivity, in percent. Default is 100. A value of 100 indicates that the amount of change in the action is equal to the amount of movement of the mouse. For example, if the mouse is moved 1 pixel, the action changes by 1 unit. A value of 50 indicates that the amount of change in the action is 50 percent of the amount of mouse movement. For example, if the mouse is moved 2 pixels, the action only changes by one unit.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerScale.Scale">
      <summary>Gets or sets the value that indicates the scaling factor, given as a percentage.</summary>
      <value>Value that indicates the scaling factor, given in percentage. Default is 100.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSelectedCellsChangedEventArgs">
      <summary>The MedicalViewerSelectedCellsChangedEventArgs class provides data for the MedicalViewer.SelectedCellsChanged event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSelectedCellsChangedEventArgs.#ctor(System.Int32,System.Int32[])">
      <summary>Initializes a new instance of the MedicalViewerSelectedCellsChangedEventArgs class object with explicit parameters.</summary>
      <param name="cellIndex">the index of the cell which has triggered the event</param>
      <param name="selectedCellsIndexes">array of integer values that represents the indexes of the selected cells.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSelectedCellsChangedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell which has triggered the event. This value is only valid if the cell is add to the MedicalViewer.</summary>
      <value>Value that indicates the index of the cell which has triggered the event. This value is only valid if the cell is add to the MedicalViewer.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSelectedCellsChangedEventArgs.SelectedCellsIndexes">
      <summary>Gets an array of integer values that represents the indexes of the selected cells.</summary>
      <value>Array of integer values that represents the indexes of the selected cells.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSeriesLocalizer">
      <summary>the MedicalViewerSeriesLocalizer represents the localizer image.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesLocalizer.#ctor(Leadtools.MedicalViewer.MedicalViewerImageData)">
      <summary>Initializes a new MedicalViewerSeriesLocalizer class object with explicit parameters.</summary>
      <param name="localizeData">MedicalViewerImageData that contains the Localizer image Data.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesLocalizer.Criteria">
      <summary>Gets or sets the criteria that is used to separate the series into multiple stacks.</summary>
      <value>MedicalViewerSortSeparationCriteria that contains the criteria that is used to separate the series into multiple stacks.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesLocalizer.LocalizerData">
      <summary>Gets or sets the localizer image data.</summary>
      <value>MedicalViewerImageData that contains the Localizer image Data.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSeriesManager">
      <summary>The MedicalViewerSeriesManager sorts and group the given data and provides them to the user for easier and more organize access.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesManager.#ctor">
      <summary>Initializes a new MedicalViewerSeriesManager class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesManager.Sort(Leadtools.MedicalViewer.MedicalViewerImageData)">
      <summary>Sorts the input list of data based on various values stored inside them.</summary>
      <param name="inputList">a list of MedicalViewerImageData that will be stored.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesManager.Sort(Leadtools.MedicalViewer.MedicalViewerImageData,Leadtools.MedicalViewer.MedicalViewerSortCriteria)">
      <summary>Sorts the input list of data based on various values stored inside them.</summary>
      <param name="inputList">A list of MedicalViewerImageData that will be stored.</param>
      <param name="sortCriteria">The criteria to follow when sorting the frames.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesManager.Sort(Leadtools.MedicalViewer.MedicalViewerImageData,Leadtools.MedicalViewer.MedicalViewerSortCriteria,Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria)">
      <summary>Sorts the input list of data based on various values stored inside them.</summary>
      <param name="inputList">A list of MedicalViewerImageData that will be stored.</param>
      <param name="sortCriteria">The criteria to follow when sorting the frames.</param>
      <param name="seperateCriteria">Determines which DICOM tag will be used to separate the input list into multiple lists.</param>
      <param name="">will be put into a list, and items with a different echo number will be put into another list.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesManager.Localizers">
      <summary>Gets a list of localizers.</summary>
      <value>a list of MedicalViewerSeriesLocalizer which represents the localizer images filtered out.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesManager.Stacks">
      <summary>Gets a list of stacks of sorted images .</summary>
      <value>a list of MedicalViewerSeriesStack which represents stacks of sorted images.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSeriesStack">
      <summary>The MedicalViewerSeriesStack represents a stack of images.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSeriesStack.#ctor">
      <summary>Initializes a new MedicalViewerSeriesStack class object with default parameters.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesStack.Criteria">
      <summary>Gets or sets the criteria that is used to separate the series into multiple stacks.</summary>
      <value>MedicalViewerSortSeparationCriteria that contains the criteria that is used to separate the series into multiple stacks.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesStack.EchoNumber">
      <summary>Gets or sets the stack echo number.</summary>
      <value>Value that represents the stack echo number.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesStack.Items">
      <summary>Gets a list of image data.</summary>
      <value>A list of MedicalViewerImageData objects.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesStack.PixelSpacing">
      <summary>Gets or sets the pixel spacing of the images in the stack.</summary>
      <value>A Point3D that represents the pixel spacing of the images in the stack.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSeriesStack.SequenceName">
      <summary>Gets or sets the sequence name of the stack.</summary>
      <value>A string that represents the stack sequence name.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSplitter">
      <summary>Represents the class that is used to get or update the information about the viewer splitter.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSplitter.#ctor">
      <summary>Initializes a new instance of this class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSplitter.Position">
      <summary>Gets or sets the position of the splitter.</summary>
      <value>Value that determines the position of the splitter.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerSplitterCollection`1">
      <summary>Represents a collection of MedicalViewerSplitter objects.</summary>
      <typeparam name="MedicalViewerSplitter"></typeparam>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSplitterCollection`1.#ctor">
      <summary>Initializes a new instance of this class.</summary>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSpyGlass">
      <summary>Represents a spy glass containing properties that control the style and shape of the spy glass.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSpyGlass.#ctor">
      <summary>Initializes a new instance of the MedicalViewerSpyGlass class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSpyGlass.#ctor(System.Int32,System.Int32,System.Int32,Color,System.Boolean,System.Int32,System.Boolean,Leadtools.MedicalViewer.MedicalViewerCrosshairStyle)">
      <summary>Initializes a new instance of the MedicalViewerSpyGlass class with specified width, height, zoom factor, border color, shape, 3D border value, and crosshair.</summary>
      <param name="width">The width of the spy glass.</param>
      <param name="height">The height of the spy glass.</param>
      <param name="zoom">The zoom factor of the spy glass.</param>
      <param name="penColor">The color of the spy glass border</param>
      <param name="elliptical">true to show an elliptical spy glass, false to show a rectangular spy glass.</param>
      <param name="borderSize">The border thickness of the spy glass .</param>
      <param name="border3d">true to show a 3D border, false to show a flat border.</param>
      <param name="crosshair">The type of crosshair of the spy glass.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlass.PositionText">
      <summary>Gets or sets the enumeration value that determine whether to show or hide the position text and the style to display.</summary>
      <value>A MedicalViewerSpyGlassTextType enumeration that determines whether to show or hide the position text, and what style to display.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlass.ZoomOnScroll">
      <summary>Gets or sets the value that indicates whether to allow the user to change the zoom of the spy glass. The zoom is adjusted by scrolling the mouse wheel up or down while spy glass is active.</summary>
      <value>true to allow the zoom to change using the mouse wheel, false to prevent the user from changing the zoom of the spy glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlass.ZoomText">
      <summary>Gets or sets the enumeration value that determines whether to show or hide the zoom text and what style to display.</summary>
      <value>A MedicalViewerSpyGlassTextType enumeration that determine whether to show or hide the zoom text, and in which form.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSpyGlassStartedEventArgs">
      <summary>Provides data for the MedicalViewerBaseCell.SpyGlassStarted event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSpyGlassStartedEventArgs.#ctor(Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerSpyGlassStartedEventArgs class.</summary>
      <param name="image">A copy of the image that will be displayed on the spy glass.</param>
      <param name="cellIndex">A Zero-based index of the cell that contains the image.</param>
      <param name="subCellIndex">A Zero-based index of the sub-cell that contains the image</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlassStartedEventArgs.CellIndex">
      <summary>Gets the index of the cell that contains the spy glass image.</summary>
      <value>The zero-based index of the cell that contains the spy glass image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlassStartedEventArgs.Image">
      <summary>Gets the image that will be displayed on the spy glass surface.</summary>
      <value>Leadtools.RasterImage that represents the image that will be displayed on the surface of the spy glass.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSpyGlassStartedEventArgs.SubCellIndex">
      <summary>Gets the sub-cell index of the cell that contains the spy glass image.</summary>
      <value>The zero-based index of the sub-cell that contains the spy glass image page.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerStack">
      <summary>Represents the class that contains the properties of the stack action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStack.#ctor">
      <summary>Initializes a new instance of the MedicalViewerStack class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStack.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerStack class with specified scroll position and active sub-cell.</summary>
      <param name="scrollValue">The position of the **cell** scroll.</param>
      <param name="activeSubCell">The index of the active sub-cell.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStack.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerStack class, with specified scroll position, active sub-cell, mouse sensitivity, mouse reset, and cursor.</summary>
      <param name="scrollValue">The position of the **cell** scroll.</param>
      <param name="activeSubCell">The index of the active sub-cell.</param>
      <param name="sensitivity">Integer value that represents the mouse sensitivity, in percent. Default is 100.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerStack.ActiveSubCell">
      <summary>Gets or sets the value that indicates the index of the active sub-cell.</summary>
      <value>Value that indicates the index of the active sub-cell. If there is only one sub-cell then this property is 0.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerStack.ScrollValue">
      <summary>Gets or sets the value that indicates the position of the cell scroll.</summary>
      <value>Value that indicates the position of the **cell** scroll.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerStackSynchronizationObject">
      <summary>Represents the class that is used to synchronize multiple cells together by scrolling all the cells if the user scrolls one of them.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStackSynchronizationObject.#ctor">
      <summary>Initializes a new Leadtools.MedicalViewer.MedicalViewerStackSynchronizationObject class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStackSynchronizationObject.DoSynchronize(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>(Overridden) Synchronizes the cells together by scrolling all cells if the user scrolls one of them.</summary>
      <param name="baseCell">The cell that is just been added to synchronization object.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerStackSynchronizationObject.DoUnSynchronize(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>(Overridden) Un-Synchronizes the cells.</summary>
      <param name="baseCell">The cell that is just been removed to synchronization object.</param>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSubCell">
      <summary>Represents the sub-cell that contains the annotation container and the properties and methods that control the annotation.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSubCell.#ctor">
      <summary>Initializes a new instance of the MedicalViewerSubCell class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSubCell.StartEditing(Leadtools.Annotations.Engine.AnnObject)">
      <summary>Starts the object edit mode.</summary>
      <param name="annObject">the object that will be edited.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSubCell.Dispose(System.Boolean)">
      <summary>Releases all the resources used by this MedicalViewerSubCell.</summary>
      <param name="disposing"></param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.AnnotationContainer">
      <summary>Gets the annotation container of the cell or sub-cell.</summary>
      <value>Leadtools.Annotations.Engine.AnnContainer represents the cell or sub-cell annotation container.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.CobbAngles">
      <summary>Gets the MedicalViewerCobbAngleCollection\&lt;MedicalViewerCobbAngle\&gt; assigned to the cell.</summary>
      <value>The MedicalViewerCobbAngleCollection\&lt;MedicalViewerCobbAngle\&gt;.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.Fusion">
      <summary>Gets the MedicalViewerCollection assigned to the cell.</summary>
      <value>The MedicalViewerCollection.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.ImageOrientation">
      <summary>Gets or sets an array of double values that represents the orientation of the frame.</summary>
      <value>Array of double values that represents the orientation of the frame.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.PaletteType">
      <summary>Gets or sets the value representing the type of palette used to display the image.</summary>
      <value>A MedicalViewerPaletteType enumeration that represents the type of the palette used to display the image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.SelectedObject">
      <summary>Gets the annotation container selected object, if any.</summary>
      <value>Leadtools.Annotations.Engine.AnnObjectrepresents the selected object.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.Shutter">
      <summary>Gets the class that contains the annotation shutter objects.</summary>
      <value>ShutterArea that contains the annotation shutter objects.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.UserMode">
      <summary>Gets or sets the value that indicates the current annotation mode and whether it is a run or a design mode.</summary>
      <value>MedicalViewerUserMode that determines the current annotation mode, and whether it is a run or an edit mode.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSubCell.WindowLevelValueRange">
      <summary>Gets the class that contains the window level boundaries</summary>
      <value>WindowLevelRange that contains the window level boundaries.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSynchronization">
      <summary>Represents a class that holds a collection of synchronization objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronization.#ctor">
      <summary>Initializes a new instance of this class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronization.Objects">
      <summary>Gets the MedicalViewerSynchronizationObjectCollection\&lt;MedicalViewerSynchronizationObject\&gt; assigned to the control.</summary>
      <value>The MedicalViewerSynchronizationObjectCollection\&lt;MedicalViewerSynchronizationObject\&gt;.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject">
      <summary>Represents the base class that is used to synchronize multiple cells together through various action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.#ctor">
      <summary>Initializes a new Leadtools.MedicalViewer.MedicalViewerSynchronizationObject class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.#ctor(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Initializes a new instance of the MedicalViewerSynchronizationObject class.</summary>
      <param name="type">MedicalViewerActionType enumeration that serves as a flag to determines the type of synchronization of this object.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.DoSynchronize(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>(Abstract) Called when the user adds any new cell to the synchronization object.</summary>
      <param name="baseCell">The cell that is just been added to synchronization object.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.DoUnSynchronize(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>(Abstract) Called when the user removes any cell from the synchronization object.</summary>
      <param name="baseCell">The cell that is just been removed from synchronization object.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.Cells">
      <summary>Gets the collection that represents the cells that will be synchronized.</summary>
      <value>MedicalViewerCollection that represents the cells that will be synchronized together.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.Mode">
      <summary>Gets or sets the value that enables, disables or changes the synchronization type used to synchronize the cells in this viewer.</summary>
      <value>The synchronization type.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.Parent">
      <summary>Gets the parent of the synchronization object.</summary>
      <value>MedicalViewerBaseCell cell that represents the parent of this synchronization class.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObject.Type">
      <summary>Gets the type of the synchronization.</summary>
      <value>MedicalViewerActionType enumeration that represents the type of this synchronization object.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1">
      <summary>Represents a collection of MedicalViewerSynchronizationObject objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.#ctor">
      <summary>Initializes a new instance of the MedicalViewerSynchronizationObjectCollection\&lt;MedicalViewerSynchronizationObject\&gt; class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Add(Leadtools.MedicalViewer.MedicalViewerSynchronizationObject)">
      <summary>Appends the synchronization object to the collection.</summary>
      <param name="item">MedicalViewerSynchronizationObject that represents the item to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.AddRange(Leadtools.MedicalViewer.MedicalViewerSynchronizationObject)">
      <summary>Appends an array of synchronization objects to the collection.</summary>
      <param name="objectArray">An array of MedicalViewerSynchronizationObject that represents the items to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.CanSynchronize(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Determines whether the type type supports synchronization.</summary>
      <param name="action">MedicalViewerActionType enumeration that is being checked as to whether it supports synchronization.</param>
      <returns>true if the **type** type supports synchronization; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Clear">
      <summary>Overridden. Removes all items from the MedicalViewerSynchronizationObjectCollection\&lt;MedicalViewerSynchronizationObject\&gt;.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Insert(System.Int32,Leadtools.MedicalViewer.MedicalViewerSynchronizationObject)">
      <summary>Appends the synchronization object to the collection using the specified index.</summary>
      <param name="index">Index of the item to insert.</param>
      <param name="item">MedicalViewerSynchronizationObject that represents the item to be inserted.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.IsSynchronized(Leadtools.MedicalViewer.MedicalViewerActionType)">
      <summary>Determines if the type type is already synchronized.</summary>
      <param name="type">MedicalViewerActionType enumeration that is being checked whether it is already synchronized or not.</param>
      <returns>true if the **type** type is already synchronized; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Remove(Leadtools.MedicalViewer.MedicalViewerSynchronizationObject)">
      <summary>Removes the specified synchronization object.</summary>
      <param name="item">object to remove.</param>
      <returns>true if the synchronization object was removed successfully; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the synchronization object from the specified index.</summary>
      <param name="index">Index of the item to remove.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Item">
      <summary>An indexer definition, which allows client code to use \[\] notation on the class instance itself.</summary>
      <param name="type">MedicalViewerActionType enumeration that will be used as index of the collection</param>
      <value>MedicalViewerSynchronizationObject that represents the object with **type** type.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizationObjectCollection`1.Parent">
      <summary>Gets the parent of the collection.</summary>
      <value>MedicalViewerBaseCell cell that represents the parent of this synchronization collection.</value>
    </member>
    <member name="``0:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1">
      <summary>Represents a collection of MedicalViewerBaseCell objects.</summary>
      <typeparam name="MedicalViewerBaseCell"></typeparam>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.#ctor">
      <summary>Initializes a new Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.Add(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Appends the synchronized cell to the collection.</summary>
      <param name="item">MedicalViewerBaseCell that represents the item to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.AddRange(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Appends an array of synchronized cells to the collection.</summary>
      <param name="cellArray">An array of MedicalViewerBaseCell that represents the items to be appended.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.Clear">
      <summary>Overridden. Removes all items from the MedicalViewerSynchronizedCellCollection\&lt;MedicalViewerBaseCell\&gt;.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.Insert(System.Int32,Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Appends the synchronized cell to the collection using the specified index.</summary>
      <param name="index">index of the item to insert.</param>
      <param name="item">MedicalViewerBaseCell that represents the item to be inserted.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.Remove(Leadtools.MedicalViewer.MedicalViewerBaseCell)">
      <summary>Removes the specified synchronized cell.</summary>
      <param name="item">object to remove.</param>
      <returns>true if the synchronized cell was removed successfully; otherwise, false.</returns>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the synchronized cell from the specified index.</summary>
      <param name="index">index of the item to remove.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerSynchronizedCellCollection`1.Parent">
      <summary>Gets the parent of the collection.</summary>
      <value>MedicalViewerSynchronizationObject cell that represents the parent of this cell collection.MedicalViewerSynchronizationObject object that represents the parent of this cell collection.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTagInformation">
      <summary>Represents the class that is used to provide information about a medical viewer overlay tag.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerTagInformation.#ctor">
      <summary>Initializes a new instance of the MedicalViewerTagInformation class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerTagInformation.#ctor(System.Int32,Leadtools.MedicalViewer.MedicalViewerTagAlignment,System.String,Leadtools.MedicalViewer.MedicalViewerTagType)">
      <summary>Initializes a new instance of the MedicalViewerTagInformation class, with explicit parameters.</summary>
      <param name="position">The line at which the overlay text will be drawn.</param>
      <param name="alignment">An enumerated MedicalViewerTagAlignment value that represents the text alignment.</param>
      <param name="text">The user text.</param>
      <param name="type">An enumerated MedicalViewerTagType value that represents the type of tag.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTagInformation.Alignment">
      <summary>Gets or sets an enumerated value that represents the text alignment.</summary>
      <value>An enumerated MedicalViewerTagAlignment value that represents the text alignment.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTagInformation.Position">
      <summary>Gets or sets a value that indicates the line at which the overlay text will be drawn.</summary>
      <value>Value that indicates the line at which the overlay text will be drawn.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTagInformation.Text">
      <summary>Gets or sets the user text.</summary>
      <value>String that represents the user text.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTagInformation.Type">
      <summary>Gets or sets an enumerated value that indicates the type of tag.</summary>
      <value>An enumerated MedicalViewerTagType value that represents the type of tag.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTitlebar">
      <summary>Represents the class that contains the properties of the title bar.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerTitlebar.#ctor">
      <summary>Initializes a new instance of the MedicalViewerTitlebar class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTitlebar.Color">
      <summary>Gets or sets the value that represents the color of the title bar.</summary>
      <value>A Leadtools.RasterColor value that represents the color of the title bar. This property is useful only when the property UseCustomColor is set to true.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTitlebar.Icons">
      <summary>Gets or sets the icon array that can be used to customize each icon.</summary>
      <value>Icon array that can be used to customize each icon.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTitlebar.UseCustomColor">
      <summary>Determines whether to use the custom Color color to paint the title bar.</summary>
      <value>true to use the custom color, false to use the system theme color.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerTitlebar.Visible">
      <summary>Determines whether to display or hide the title bar.</summary>
      <value>true to show the title bar, false to hide the title bar.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs">
      <summary>The MedicalViewerUIChangedEventArgs class provides data for the UIChanged.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.#ctor(Leadtools.MedicalViewer.MedicalViewerActionType,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerActionStatus)">
      <summary>Initializes a new instance of the MedicalViewerUIChangedEventArgs class.</summary>
      <param name="action">A MedicalViewerActionType enumeration value that indicates the action that was applied.</param>
      <param name="cellIndex">The zero-based index of the cell which has the action applied on.</param>
      <param name="subCellIndex">The zero-based index of the sub-cell which has the action applied on.</param>
      <param name="x">The X coordinates of the cursor.</param>
      <param name="y">The Y coordinates of the cursor.</param>
      <param name="status">MedicalViewerActionStatus enumeration value that indicates the status of the action (whether it has just begun, is in progress, or has just finished.)</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.ActionState">
      <summary>Gets the MedicalViewerActionStatus enumeration value that indicates the status of the action.</summary>
      <value>MedicalViewerActionStatus enumeration value that indicates the status of the action (whether it has just begun, is in progress, or has just finished.)</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.ActionType">
      <summary>Gets the MedicalViewerActionType enumeration value that indicates the action that was applied.</summary>
      <value>MedicalViewerActionType enumeration that indicates the action that was applied.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.CellIndex">
      <summary>Gets the value that indicates the index of the cell to which the action has been applied.</summary>
      <value>Value that indicates the index of the cell to which the action has been applied.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.SubCellIndex">
      <summary>Gets the value that indicates the index of the sub-cell to which the action has been applied.</summary>
      <value>Value that indicates the index of the sub-cell to which the action has been applied.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.X">
      <summary>Gets the value that indicates the X coordinate of the cursor.</summary>
      <value>Value that indicates the X coordinate of the cursor.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUIChangedEventArgs.Y">
      <summary>Gets the value that indicates the Y coordinate of the cursor.</summary>
      <value>Value that indicates the Y coordinate of the cursor.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerUserTagEventArgs">
      <summary>The MedicalViewerUserTagEventArgs class provides information about the MedicalViewerBaseCell.UserTag event.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerUserTagEventArgs.#ctor(Graphics,Rectangle,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerUserTagEventArgs class.</summary>
      <param name="graphics">The System.Drawing.Graphics object used to paint the item.</param>
      <param name="clipRectangle">The System.Drawing.Rectangle that represents the rectangle in which to paint.</param>
      <param name="cellIndex">The index of the cell on which the user tag. will be drawn.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerUserTagEventArgs.CellIndex">
      <summary>Gets or sets the value that indicates the index of the cell on which the user tag will be drawn.</summary>
      <value>Value that indicates the zero-based index of the cell on which the user tag will be drawn.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerVirtualImage">
      <summary>Represents a class that is used for multiple purposes. These include checking for the state of the image (whether it exists or not), and whether it has a region. This is useful when low memory usage is enabled.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerVirtualImage.#ctor">
      <summary>Initializes a new instance of the MedicalViewerVirtualImage class.</summary>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerVirtualImage.HasRegion">
      <summary>Gets a value that indicates whether the image has a region.</summary>
      <value>true if the image has a region; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerVirtualImage.Image">
      <summary>Gets the loaded image.</summary>
      <value>A Leadtools.RasterImage object that represents the loaded image.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerVirtualImage.ImageExist">
      <summary>Gets a value that indicates whether the image is already loaded.</summary>
      <value>true if the image is already loaded; otherwise, false.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerWindowLevel">
      <summary>Represents the class that contains the properties for the window level action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerWindowLevel.#ctor">
      <summary>Initializes a new instance of the MedicalViewerWindowLevel class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerWindowLevel.#ctor(Color,Color,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerLookupTableType)">
      <summary>Initializes a new instance of the MedicalViewerWindowLevel class with specified starting color, ending color, width, center and Lookup table type.</summary>
      <param name="startColor">The color on the low end side of the Lookup table.</param>
      <param name="endColor">The color on the high end side of the Lookup table.</param>
      <param name="width">The width of the Lookup table.</param>
      <param name="center">The center of the Lookup table.</param>
      <param name="lookupTableType">A MedicalViewerLookupTableTypeMedicalViewerLookupTableType value that represents the type of Lookup table.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerWindowLevel.#ctor(Color,Color,System.Int32,System.Int32,Leadtools.MedicalViewer.MedicalViewerLookupTableType,System.Int32,System.Boolean,Cursor)">
      <summary>Initializes a new instance of the MedicalViewerWindowLevel class with specified starting color, ending color, width, center, Lookup table type, mouse sensitivity, mouse reset, and cursor.</summary>
      <param name="startColor">The color on the low end side of the Lookup table.</param>
      <param name="endColor">The color on the high end side of the Lookup table.</param>
      <param name="width">The width of the Lookup table.</param>
      <param name="center">The center of the Lookup table.</param>
      <param name="lookupTableType">The type of Lookup table.</param>
      <param name="sensitivity">Integer value that represents the mouse sensitivity, in percent. The default is 100. This means when the user moves the mouse one pixel, the values (width, center or any other factor) will change by 1 unit. If the value is set to 200 when the mouse is moved 2 pixels the values will change 1 unit.</param>
      <param name="circularMouseMove">true to make the mouse reset when it reaches the side of the container (when the mouse resets, if it is dragged to one side of the container, it will disappear from that side and reappear on the opposite side of the container); otherwise, false.</param>
      <param name="cursor">Default cursor for the action.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.Center">
      <summary>Gets or sets the value that represents the center of the Lookup table.</summary>
      <value>Value that represents the center of the Lookup table.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.EndColor">
      <summary>Gets or sets the color that represents the ending color used for the Lookup table.</summary>
      <value>A color that represents the color on the high end side of the Lookup table.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.LookupTableType">
      <summary>Gets or sets the enumerated value that indicates the type of Lookup table.</summary>
      <value>Enumerated value that indicates the type of Lookup table.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.RelativeSensitivity">
      <summary>Gets or sets the value that determines whether to use the relative sensitivity feature.</summary>
      <value>true to use the relative sensitivity feature; otherwise, false.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.StartColor">
      <summary>Gets or sets the color that represents the starting color used for the Lookup table.</summary>
      <value>A color that represents the color on the low end side of the Lookup table.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevel.Width">
      <summary>Gets or sets the value that represents the width of the Lookup table.</summary>
      <value>Value that represents the width of the Lookup table.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerWindowLevelValues">
      <summary>Represents the class that is used to set or get window level values.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerWindowLevelValues.#ctor">
      <summary>Initializes a new instance of the MedicalViewerWindowLevelValues class.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.MedicalViewerWindowLevelValues.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the MedicalViewerWindowLevelValues class with explicit parameters.</summary>
      <param name="width">The value that indicates the window level width value</param>
      <param name="center">The value that indicates the window level center value.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevelValues.Center">
      <summary>Gets or sets the value that indicates the window level center value.</summary>
      <value>Value that indicates the window level center value.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.MedicalViewerWindowLevelValues.Width">
      <summary>Gets or sets the value that indicates the window level width value.</summary>
      <value>Value that indicates the window level width value.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.ShutterArea">
      <summary>This class highlights areas marked by closed annotation object and dim the areas outside these objects.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.ShutterArea.#ctor(Leadtools.MedicalViewer.MedicalViewerSubCell)">
      <summary>Initializes a new ShutterArea class object with explict parameters.</summary>
      <param name="subCell">the subcell that contains the shutter.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.ShutterArea.Objects">
      <summary>Gets the collection of the shutter annotation objects.</summary>
      <value>A collection that represents the collection of the shutter annotation objects.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.ShutterArea.Transparency">
      <summary>Gets or sets the transparency value of the dimmed area outside the shutter annotation object.</summary>
      <value>Value that represents the transparency value of the dimmed area outside the shutter annotation object, valid values are from 0 to 1.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.WindowLevelRange">
      <summary>Represents the class that defines the boundaries of the window level action.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.WindowLevelRange.#ctor">
      <summary>Initializes a new instance of the WindowLevelRange class with default parameters.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.WindowLevelRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the WindowLevelRange class with default parameters.</summary>
      <param name="minimumCenter">the lower allowed center value of the window level.</param>
      <param name="maximumCenter">the upper allowed center value of the window level.</param>
      <param name="minimumWidth">the lower allowed width value of the window level.</param>
      <param name="maximumWidth">the upper allowed width value of the window level.</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.WindowLevelRange.MaximumCenter">
      <summary>Gets or sets the maximum value allowed for the center value of the window level action</summary>
      <value>Maximum value allowed for the center value of the window level action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.WindowLevelRange.MaximumWidth">
      <summary>Gets or sets the maximum value allowed for the width of the window level action</summary>
      <value>Maximum value allowed for the width of the window level action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.WindowLevelRange.MinimumCenter">
      <summary>Gets or sets the minimum value allowed for the center value of the window level action.</summary>
      <value>Minimum value allowed for the center value of the window level action.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.WindowLevelRange.MinimumWidth">
      <summary>Gets or sets the minimum value allowed for the width of the window level action.</summary>
      <value>Minimum value allowed for the width of the window level action.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType">
      <summary>Represents the enumeration that will be sent through the MedicalViewerCell.Data3DRequested and MedicalViewerCell.Data3DFrameRequested to request some 3D information.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.None">
      <summary>No information</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.MPRImage">
      <summary>Request a new MPR image.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.CrossHair">
      <summary>Request updating the cross hair data.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.CutPlaneImage">
      <summary>Request a new cut plane image.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.MPRExist">
      <summary>Request checking if a current MPR window exist or not.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.SlabParameters">
      <summary>request updating the Slab parameters</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.EnableSlab">
      <summary>Request enabling the slab feature of the 3D.</summary>
      <value>6</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.Create3DObject">
      <summary>Request creating a 3D object.</summary>
      <value>7</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.RequestFrame">
      <summary>Request a frame that will be used to create a 3D object.</summary>
      <value>8</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.DeleteContainer">
      <summary>Request deleting the container and freeing all the resources.</summary>
      <value>9</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.WindowLevel">
      <summary>Request applying a window level on the 3D object.</summary>
      <value>10</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.MPRWindowLevel">
      <summary>Request applying window level on the MPR image.</summary>
      <value>11</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.DeAttachMPR">
      <summary>Request detaching the MPR from the 3D control.</summary>
      <value>12</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.RequestPanoramicForTheFirstTime">
      <summary>Request creating a panoramic image for the first time.</summary>
      <value>18</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.UpdatePanoramic">
      <summary>Request updating the current panoramic image.</summary>
      <value>19</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.RequestSpecificPage">
      <summary>Request a specific derivative page (MPR or cut-line image).</summary>
      <value>20</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.ObjectWindowLevel">
      <summary>Request applying a window level on the 3D object.</summary>
      <value>21</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.GetParaxialPages">
      <summary>Request paraaxial page.</summary>
      <value>22</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.MPRCalibrated">
      <summary>The MPR plane is calibrated.</summary>
      <value>23</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewer3DRequestedInformationType.RequestMPRWindow">
      <summary>Request an MPR window.</summary>
      <value>24</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerActionFlags">
      <summary>Represents the cells to which the action is applied and when the action is applied.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.Active">
      <summary>Apply the effect on the active cell window only.</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.Selected">
      <summary>Apply the effect on all the cells.</summary>
      <value>0x00000002</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.AllCells">
      <summary>Apply the effect on the selected cells only.</summary>
      <value>0x00000004</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.RealTime">
      <summary>Apply the action during the mouse movement. This option is only valid if either AllCells or Selected is also set.</summary>
      <value>0x00000010</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.OnRelease">
      <summary>Apply the action after releasing the mouse button. This option is only valid if either AllCells or Selected is also set.</summary>
      <value>0x00000020</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionFlags.KeepPreviousAssignment">
      <summary>This flag allows the user to assign the same action to multiple mouse buttons.</summary>
      <value>0x00000100</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerActionStatus">
      <summary>Specifies the current status of the action.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionStatus.Started">
      <summary>The action has been started.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionStatus.Progress">
      <summary>The action is in progress.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionStatus.Finished">
      <summary>The action has just been finished.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerActionType">
      <summary>Represents the action to be associated with the specified mouse button.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.None">
      <summary>None.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.WindowLevel">
      <summary>Window leveling. Moving the mouse horizontally controls the window center parameter of the window level. Moving the mouse vertically controls the window width parameter of the window level.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Scale">
      <summary>Scaling. Moving the mouse vertically controls the scale factor of the image or the 3D object.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Offset">
      <summary>Offset. Moving the mouse in any direction causes the image or the 3D object to move towards that direction (Zoom in or out the 3D object if you are using the Medical3DControl).</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Stack">
      <summary>Stacking. Moving the mouse vertically scrolls through the frames.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.MagnifyGlass">
      <summary>Magnifying glass. Moving the mouse causes the magnify glass object to move.</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Alpha">
      <summary>Alpha. Moving the mouse horizontally changes the alpha factor of the LUT curve.</summary>
      <value>6</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationRuler">
      <summary>Ruler annotation. Clicking and dragging creates a ruler object.</summary>
      <value>7</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationAngle">
      <summary>Angle annotation. Clicking and dragging creates an angle object.</summary>
      <value>8</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationText">
      <summary>Text annotation. Clicking and dragging creates a text object.</summary>
      <value>9</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationArrow">
      <summary>Arrow annotation. Clicking and dragging creates an arrow object.</summary>
      <value>10</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationRectangle">
      <summary>Rectangle annotation. Clicking and dragging creates a rectangle object.</summary>
      <value>11</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationEllipse">
      <summary>Ellipse annotation. Clicking and dragging creates an ellipse object.</summary>
      <value>12</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationHilite">
      <summary>Highlight annotation. Clicking and dragging creates a hilite object.</summary>
      <value>13</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.RectangleRegion">
      <summary>Rectangular region. Clicking and dragging creates a rectangular region.</summary>
      <value>14</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.EllipseRegion">
      <summary>Elliptical region. Clicking and dragging creates an elliptical region.</summary>
      <value>15</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.FreeHandRegion">
      <summary>Free hand region. Clicking and dragging creates a free hand region.</summary>
      <value>16</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.PolygonRegion">
      <summary>Polygon region. Clicking defines the points of the polygon region. Double clicking closes the polygon region.</summary>
      <value>17</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.MagicWandRegion">
      <summary>Magic wand region. Clicking defines the starting point and color. The region will grow outwards from the selected point to the boundaries of that color. Dragging will increase the threshold of variation allowed from the selected color.</summary>
      <value>18</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ColorRangeRegion">
      <summary>Color range region. Moving the mouse horizontally controls the lower tolerance. Moving the mouse vertically controls the upper tolerance.</summary>
      <value>19</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.CircleRegion">
      <summary>Circular region. Clicking and dragging creates a circular region.</summary>
      <value>20</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.SquareRegion">
      <summary>Square region. Clicking and dragging creates a square region.</summary>
      <value>21</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.NudgeTool">
      <summary>Expand the region border using the mouse. It will serve also as a region painter.</summary>
      <value>22</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ShrinkTool">
      <summary>Shrink the region border using the mouse.</summary>
      <value>23</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.CutPlane">
      <summary>Drawing an oblique cut line using the mouse.</summary>
      <value>24</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.DoubleCutPlane">
      <summary>Drawing a double oblique cut line using the mouse.</summary>
      <value>25</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Rotate3DObject">
      <summary>Rotate the 3D object, only works with the Medical3DControl.</summary>
      <value>26</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Scale3DObject">
      <summary>Scale the 3D object, only works with the Medical3DControl.</summary>
      <value>27</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Rotate3DCamera">
      <summary>Rotate the 3D camera, only works with the Medical3DControl.</summary>
      <value>28</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Translate3DCamera">
      <summary>Offset the 3D camera, only works with the Medical3DControl.</summary>
      <value>29</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.TranslatePlane">
      <summary>Offset the MPR planes or the clipping planes (for VRT, MIP and MinIP), only works with the Medical3DControl.</summary>
      <value>30</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.RotatePlane">
      <summary>This method is deprecated for Medical3DControl.</summary>
      <value>31</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationLine">
      <summary>Line Annotation. Clicking and dragging creates a line object.</summary>
      <value>32</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationPolyline">
      <summary>Polyline Annotation. Clicking and dragging creates a polyline object.</summary>
      <value>33</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationPolygon">
      <summary>Polygon Annotation. Clicking and dragging creates a polygon object.</summary>
      <value>34</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationCurve">
      <summary>Curve Annotation. Clicking and dragging creates a curve object.</summary>
      <value>35</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationClosedCurve">
      <summary>Closed Curve Annotation. Clicking and dragging creates a closed curve object.</summary>
      <value>36</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationTextPointer">
      <summary>Text Pointer Annotation. Clicking and dragging creates a text pointer object.</summary>
      <value>37</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationFreeHand">
      <summary>Free Hand Annotation. Clicking and dragging creates a free hand object.</summary>
      <value>38</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationTextRollup">
      <summary>Text Rollup Annotation. Clicking and dragging creates a text rollup object.</summary>
      <value>39</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationNote">
      <summary>Note Annotation. Clicking and dragging creates a note object.</summary>
      <value>40</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationStamp">
      <summary>Stamp Annotation. Clicking and dragging creates a stamp object.</summary>
      <value>41</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationHotSpot">
      <summary>Hot Spot Annotation. Clicking and dragging creates a hot spot object.</summary>
      <value>42</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationFreeHandHotSpot">
      <summary>Freehand Hot Spot Annotation. Clicking and dragging creates a freehand hot spot object.</summary>
      <value>43</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationButton">
      <summary>Button Annotation. Clicking and dragging creates a button object.</summary>
      <value>44</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationPoint">
      <summary>Point Annotation. Clicking and dragging creates a point object.</summary>
      <value>45</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationPolyRuler">
      <summary>Polyruler Annotation. Clicking and dragging creates a polyruler object.</summary>
      <value>46</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationCrossProduct">
      <summary>Cross Product Annotation. Clicking and dragging creates a cross product object.</summary>
      <value>47</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationRedaction">
      <summary>Redaction Annotation. Clicking and dragging creates a redaction object.</summary>
      <value>48</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationEncrypt">
      <summary>Encrypt Annotation. Clicking and dragging creates an encrypt object.</summary>
      <value>49</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationAudio">
      <summary>Audio Annotation. Clicking and dragging creates an audio object.</summary>
      <value>50</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationMedia">
      <summary>Media Annotation. Clicking and dragging creates a media object.</summary>
      <value>51</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.AnnotationRubberStamp">
      <summary>Rubber Stamp Annotation. Clicking and dragging creates a rubber stamp object.</summary>
      <value>52</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.PanoramicPolygon">
      <summary>Panoramic polygon. Clicking and dragging multiple times creates a polygon that is used to create panoramic image. For more information refer to MedicalViewerMPRPolygon.</summary>
      <value>53</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Logarithmic">
      <summary>Logarithmic. Moving the mouse horizontally changes the logarithmic factor of the LUT curve.</summary>
      <value>54</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Exponential">
      <summary>Exponential. Moving the mouse horizontally changes the exponential factor of the LUT curve.</summary>
      <value>55</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.Sigmoid">
      <summary>Sigmoid. Moving the mouse horizontally changes the sigmoid factor of the LUT curve.</summary>
      <value>56</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.SpatialLocator">
      <summary>(For MPR Cells only) Clicking on one MPR cell will make the other cells scroll to the slice that correspond to the point clicked.</summary>
      <value>57</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ProbeTool">
      <summary>Clicking on the cell will display an information window next to the cursor and move with it.</summary>
      <value>58</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ClickZoomIn">
      <summary>Clicking will zoom the image in relation to the point clicked.</summary>
      <value>59</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ClickZoomOut">
      <summary>Clicking will zoom the image out relative to the point clicked.</summary>
      <value>60</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.ZoomToRectangle">
      <summary>Dragging will create a rectangle, releasing the button will zoom to the portion of the image highlighted by the rectangle.</summary>
      <value>61</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.SpyGlass">
      <summary>Moving the mouse causes the spy glass object to appear over the cell and move with the mouse. For more information refer to MedicalViewerSpyGlass.</summary>
      <value>62</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerActionType.FusionTranslucency">
      <summary>Moving the mouse changes the transparency value between two fused cells.</summary>
      <value>63</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnimationFlags">
      <summary>Specifies constants that control the animation feature.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PaintNormal">
      <summary>Paint normally while playing the animation.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PlayForward">
      <summary>Play forward.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.Sequence">
      <summary>When the animation reaches the end frame, it will jump to the start frame and play the animation all over again.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PaintResample">
      <summary>Paint using resample interpolation while playing the animation.</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PaintBicubic">
      <summary>Paint using bicubic interpolation while playing the animation.</summary>
      <value>0x00000002</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.ShowAnnotations">
      <summary>Show the annotation object while playing the animation.</summary>
      <value>0x00000010</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.ShowRegions">
      <summary>Show the region object while playing the animation.</summary>
      <value>0x00000100</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PlayBackward">
      <summary>Play backward.</summary>
      <value>0x00001000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.Loop">
      <summary>When the animation reaches the end frame, it will bounce back and play in reverse until it reaches the start frame and play the animation all over again.</summary>
      <value>0x00010000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.Shuffle">
      <summary>The animation engine will pick a random frame every time when playing the animation.</summary>
      <value>0x00020000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.PlayOnSelection">
      <summary>Play the animation while the cell is selected. When deselecting the cell, the animation will stop. When selecting the cell, the animation will start.</summary>
      <value>0x00100000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationFlags.StopAtEnd">
      <summary>Play the animation until it reach to the last frame if the combined with PlayForward or first frame if combined with PlayBackword.</summary>
      <value>0x01000000</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnimationIntervalType">
      <summary>Determines the meaning of the value MedicalViewerAnimation.Interval.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationIntervalType.Period">
      <summary>The value MedicalViewerAnimation.Interval represents the animation frames per second.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnimationIntervalType.FramesPerSecond">
      <summary>The value MedicalViewerAnimation.Interval represents the animation frames per second.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType">
      <summary>Represents the change applied to the annotations in the cell.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType.Creating">
      <summary>The user is about to draw a new annotation.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType.Created">
      <summary>A new annotation created.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType.Changed">
      <summary>An existing annotation object got changed.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType.Moved">
      <summary>An existing annotation object got moved.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationChangeType.Canceled">
      <summary>Drawing an annotation got canceled.</summary>
      <value>4</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerAnnotationFlags">
      <summary>Determines which annotation objects use the new setting.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationFlags.Selected">
      <summary>Apply on the selected object.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationFlags.AllObjects">
      <summary>Apply on objects that have the same type. (All rulers or all arrows).</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerAnnotationFlags.AllAnnotation">
      <summary>Apply on all annotation objects.</summary>
      <value>0x00000002</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerBorderStyle">
      <summary>Represents the border style.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerBorderStyle.Solid">
      <summary>Solid border.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerBorderStyle.Dash">
      <summary>Dashed border.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerBorderStyle.Dot">
      <summary>Dotted border. This is the default value.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerBorderStyle.DashDot">
      <summary>Dash and dot border.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerBorderStyle.DashDotDot">
      <summary>Dash and two dots border.</summary>
      <value>4</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCalibrationAxis">
      <summary>Specifies whether to calibrate one axis or both axes.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCalibrationAxis.Both">
      <summary>Calibrate both axes.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCalibrationAxis.YAxis">
      <summary>Calibrate the vertical axis.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCalibrationAxis.XAxis">
      <summary>Calibrate the horizontal axis.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures">
      <summary>Specifies which part of the cell or sub-cell besides the image to print.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.None">
      <summary>Nothing.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.Regions">
      <summary>Include the region when printing.</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.Annotations">
      <summary>Include any annotations when printing.</summary>
      <value>0x00000002</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.Borders">
      <summary>Include borders when printing.</summary>
      <value>0x00000004</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.Tags">
      <summary>Include tags when printing.</summary>
      <value>0x00000008</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.Rulers">
      <summary>Include the cell ruler when printing. To include the annotation ruler, use MedicalViewerCellImageFeatures.Annotation.</summary>
      <value>0x00000010</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellImageFeatures.All">
      <summary>Print everything.</summary>
      <value>0x0000001F</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCellMaintenance">
      <summary>Specifies how splitters will move.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellMaintenance.Size">
      <summary>The adjacent splitters to the right and to the bottom will move the same distance when the user drags one of the splitters.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCellMaintenance.Pos">
      <summary>No other splitter will be moved when the user moves one of the splitters.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCrosshairStyle">
      <summary>Specifies the type of crosshair to be used by the magnifying glass.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCrosshairStyle.None">
      <summary>No cross-hair.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCrosshairStyle.Fine">
      <summary>The cross-hair is one pixel wide and uses the color in MedicalViewerMagnifyGlass.PenColor. (Default).</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCrosshairStyle.Invert">
      <summary>The cross-hair is three pixels wide. The center pixel uses the color in MedicalViewerMagnifyGlass.PenColor. The outer pixels use the inverse of the color in MedicalViewerMagnifyGlass.PenColor.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCrosshairStyle.InvertScreen">
      <summary>The cross-hair is three pixels wide. The center pixel uses the color in MedicalViewerMagnifyGlass.PenColor. The outer pixels use the inverse of the screen color.</summary>
      <value>3</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationRequestedObject">
      <summary>Represents the enumeration that will be sent through the MedicalViewerBaseCell.CustomAnnotationDataRequested to the custom annotation object, run designer, or edit designer.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationRequestedObject.EditDesigner">
      <summary>The request is a new instance of the custom annotation edit designer.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationRequestedObject.DrawDesigner">
      <summary>The request is a new instance of the custom annotation run designer.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerCustomAnnotationRequestedObject.AnnotationObject">
      <summary>The request is a new instance of the custom annotation object.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDesignerType">
      <summary>Represents the enumeration that determines the type of the designer.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerDesignerType.EditDesigner">
      <summary>Edit designer.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerDesignerType.DrawDesigner">
      <summary>Draw designer.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerDesignerType.RunDesigner">
      <summary>Run designer.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerDesignTool">
      <summary>Specifies the design tool to uses during design mode in the viewer.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerDesignTool.Selection">
      <summary>The current tool in design mode is selection.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerDesignTool.Draw">
      <summary>The current tool in design mode is draw.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerFileOperation">
      <summary>Specifies which operations are performed when saving annotations or regions.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerFileOperation.Create">
      <summary>Create the file when saving. If the file already exists, overwrite it.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerFileOperation.Append">
      <summary>Append the file when saving. If the file does not exist, create it.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerFileOperation.Replace">
      <summary>Replace the page when saving.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerFileOperation.Insert">
      <summary>Inserts a page into the file. If the file does not exist, it creates one.</summary>
      <value>3</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerIconStatus">
      <summary>Represents the icon status (whether checked or not checked).</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerIconStatus.Unchecked">
      <summary>Unchecked.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerIconStatus.Checked">
      <summary>Checked.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerLookupTableType">
      <summary>Represents the type of lookup table being used.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerLookupTableType.None">
      <summary>Default.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerLookupTableType.Linear">
      <summary>Lookup table is linear.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerLookupTableType.Exponential">
      <summary>Lookup table is exponential.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerLookupTableType.Logarithmic">
      <summary>Lookup table is logarithmic.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerLookupTableType.Sigmoid">
      <summary>Lookup table is sigmoid.</summary>
      <value>4</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit">
      <summary>Represents the unit of measure for length.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Inches">
      <summary>Inches.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Feet">
      <summary>Feet.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Micrometers">
      <summary>Micrometers.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Millimeters">
      <summary>Millimeters.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Centimeters">
      <summary>Centimeters.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMeasurementUnit.Meters">
      <summary>Meters.</summary>
      <value>5</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerModifiers">
      <summary>Specifies constants that define which modifier(s) was/were pressed.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerModifiers.None">
      <summary>No modifier button.</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerModifiers.Shift">
      <summary>Left or right Shift button.</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerModifiers.Ctrl">
      <summary>Left or right Control button.</summary>
      <value>0x00000002</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerModifiers.Alt">
      <summary>Left or right Alt button.</summary>
      <value>0x00000004</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMouseButtons">
      <summary>Specifies constants that define which mouse button was pressed.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.None">
      <summary>No mouse button.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Left">
      <summary>left mouse button.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Right">
      <summary>Right mouse button.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Middle">
      <summary>Middle mouse button.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Wheel">
      <summary>Wheel.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Xbutton1">
      <summary>The first XButton. With Windows 2000, Microsoft is introducing support for the Microsoft IntelliMouse Explorer, which is a mouse with five buttons. The two new mouse buttons (XBUTTON1 and XBUTTON2) provide backward/forward navigation.</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMouseButtons.Xbutton2">
      <summary>The second XButton. With Windows 2000, Microsoft is introducing support for the Microsoft IntelliMouse Explorer, which is a mouse with five buttons. The two new mouse buttons (XBUTTON1 and XBUTTON2) provide backward/forward navigation.</summary>
      <value>6</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerMPRPolygonHitTest">
      <summary>Represents the enumeration that will be sent through the MedicalViewerCell.MPRPolygonClicked.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMPRPolygonHitTest.None">
      <summary>None.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMPRPolygonHitTest.Handle">
      <summary>The user clicked on one of the polygon handles.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerMPRPolygonHitTest.Body">
      <summary>The user clicked on the one of the polygon lines.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerNudgeToolShape">
      <summary>Specifies the shape of the nudge tool brush.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerNudgeToolShape.Rectangle">
      <summary>Rectangular nudge tool shape.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerNudgeToolShape.Ellipse">
      <summary>Elliptical nudge tool shape.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerNudgeToolShape.Slash">
      <summary>Slash nudge tool shape.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerNudgeToolShape.BackSlash">
      <summary>Back Slash nudge tool shape.</summary>
      <value>3</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPaintingMethod">
      <summary>Represents the technique used when painting the images.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaintingMethod.Normal">
      <summary>Normal painting.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaintingMethod.Resample">
      <summary>Use bilinear interpolation (resampling) if the paint process needs to resize the image. (slower than regular resize).</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaintingMethod.Bicubic">
      <summary>Use bicubic interpolation if the paint process needs to resize the image. (slower than Resample).</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerPaletteType">
      <summary>Represents the enumeration that determines the palette used to display the image.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.None">
      <summary>None, use the normal gray-scale lookup table.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.Cool">
      <summary>Cool palette.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.CyanHot">
      <summary>Cyan Hot palette.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.Fire">
      <summary>Fire palette.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.ICA2">
      <summary>ICA2 palette.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.Ice">
      <summary>Ice palette.</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.OrangeHot">
      <summary>Orange hot palette.</summary>
      <value>6</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.RainbowRGB">
      <summary>Rainbow RGB palette.</summary>
      <value>7</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.RedHot">
      <summary>Red hot palette.</summary>
      <value>8</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerPaletteType.Spectrum">
      <summary>Spectrum palette.</summary>
      <value>9</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRegionState">
      <summary>Specifies whether the region has been added, changed or removed.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRegionState.Removed">
      <summary>The existing region has been removed.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRegionState.Added">
      <summary>A new region has been added.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRegionState.Changed">
      <summary>The existing region has been changed.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRulers">
      <summary>Represents which ruler to display. (this does not include the annotation rulers).</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulers.None">
      <summary>No rulers.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulers.Both">
      <summary>Both vertical and horizontal rulers.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulers.Vertical">
      <summary>Vertical ruler only.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulers.Horizontal">
      <summary>Horizontal ruler only.</summary>
      <value>3</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerRulerStyle">
      <summary>Indicates the style for the rulers in the cells of the MedicalViewer.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulerStyle.Inverted">
      <summary>The ruler is drawn using an inverted pen. This is the default value.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerRulerStyle.Bordered">
      <summary>The ruler is drawn using both the pen specified in MedicalViewerBaseCell.RulerInColor and MedicalViewerBaseCell.RulerOutColor.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerScaleMode">
      <summary>Specifies the type of image scaling that will be used on the image.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.Normal">
      <summary>No fitting.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.Fit">
      <summary>Fit to width or height based on the image and cell or sub-cell shape.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.FitWidth">
      <summary>Fit to image width.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.FitHeight">
      <summary>Fit to image height.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.FitIfLarger">
      <summary>Fit the image to the cell only if the cell is smaller than the image.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleMode.Stretch">
      <summary>Stretch the image to the cell.</summary>
      <value>5</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerScaleTagType">
      <summary>Represents the style of scale overlay tag value which will be displayed on the cell.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleTagType.X">
      <summary>Displays the scale value in a normalized form.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleTagType.Percentage">
      <summary>Displays the scale value in a percentage form.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerScaleType">
      <summary>Represents the enumeration that determines the type of the zoom.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleType.Normal">
      <summary>The normal zoom, zooms to the part of the image that is displayed at the center of the cell.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerScaleType.Dynamic">
      <summary>Dynamic Zoom, zooms to the point that the user clicked to zoom to.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSetImageOptions">
      <summary>Specifies whether to insert the image or replace the existing one.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSetImageOptions.Insert">
      <summary>Insert the image.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSetImageOptions.Replace">
      <summary>Replaces the current image. This is useful if the user sets a thumbnail first before setting the actual image.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSortCriteria">
      <summary>Specifies cell sorting criteria that will be used to sort frames.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortCriteria.SortFor3D">
      <summary>Sort the frames according to their position in the 3D world.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortCriteria.AcquisitionTime">
      <summary>Sort the frames according to their acquistion time value.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria">
      <summary>Specifies the criteria that is used to separate the series into multiple stacks through the method Sort.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria.None">
      <summary>None</summary>
      <value>0x00000000</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria.EchoNumber">
      <summary>Stack or localizer is separated based on the DICOM image echo number.</summary>
      <value>0x00000001</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria.SequenceName">
      <summary>Stack or localizer is separated based on the DICOM image Sequence name.</summary>
      <value>0x00000002</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria.Orientation">
      <summary>Stack or localizer is separated based on the DICOM image orientation value.</summary>
      <value>0x00000004</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSortSeparationCriteria.DuplicateInstanceNumber">
      <summary>Stack or localizer is separated because they are from a different stack of the images but with the same instance number.</summary>
      <value>0x00000008</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSplitterStyle">
      <summary>Represents the type of splitters.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSplitterStyle.None">
      <summary>No splitters.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSplitterStyle.Thin">
      <summary>One pixel width splitters. (no extra splitters will be set when this value is set).</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSplitterStyle.Thick">
      <summary>Normal splitter (Default).</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSpyGlassTextType">
      <summary>Represents an enumeration that determines whether to show a text over or under the spy glass control, and the type of text shown.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSpyGlassTextType.None">
      <summary>Do not display the text.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSpyGlassTextType.Actual">
      <summary>Show the actual values. When used in the MedicalViewerSpyGlass.PositionText property it will display the value in pixels.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSpyGlassTextType.Percentage">
      <summary>Display the text in a percentage form.</summary>
      <value>2</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerSynchronizationType">
      <summary>Represents the enumeration that is used to set the synchronization type for the cells in the viewer.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSynchronizationType.None">
      <summary>No synchronization.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerSynchronizationType.Automatic">
      <summary>The cells will be synchronized if the they have the same MedicalViewerCell.SynchronizationID value.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTagAlignment">
      <summary>Specifies the origin point to begin counting the rows specified in the row parameter in the SetTag method.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.TopLeft">
      <summary>Start counting rows from the top of the cell. The tag will be left-justified.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.LeftCenter">
      <summary>The tag is placed in the center, based on the height of the cell, and is left-justified.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.BottomLeft">
      <summary>Start counting rows from the bottom of the cell. The tag will be left-justified.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.TopCenter">
      <summary>The tag is placed in the center, based on the width of the cell, and is top-justified.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.BottomCenter">
      <summary>The tag is placed in the center, based on the width of the cell, and is bottom-justified.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.TopRight">
      <summary>Start counting rows from the top of the cell. The tag will be right-justified.</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.RightCenter">
      <summary>The tag is placed in the center, based on the height of the cell, and is right-justified.</summary>
      <value>6</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagAlignment.BottomRight">
      <summary>Start counting rows from the bottom of the cell. The tag will be right-justified.</summary>
      <value>7</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTags">
      <summary>Indicates whether to show or hide the tags.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTags.Show">
      <summary>Show the tags.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTags.Hide">
      <summary>Hide the tags.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTagType">
      <summary>Represents the type of tag to be added.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.UserData">
      <summary>User data tag.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.Scale">
      <summary>Scale tag.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.WindowLevelData">
      <summary>Window level tag.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.FieldOfView">
      <summary>Field of view tag.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.OwnerDraw">
      <summary>Owner draw tag.</summary>
      <value>4</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.Frame">
      <summary>Frame tag.</summary>
      <value>5</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.RulerUnit">
      <summary>Ruler unit tag.</summary>
      <value>6</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.LeftOrientation">
      <summary>Left orientation tag.</summary>
      <value>7</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.RightOrientation">
      <summary>Right orientation tag.</summary>
      <value>8</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.TopOrientation">
      <summary>TopOrientation tag.</summary>
      <value>9</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.BottomOrientation">
      <summary>Bottom orientation tag.</summary>
      <value>10</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.Offset">
      <summary>the current position of the image in Pixels.</summary>
      <value>11</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.Alpha">
      <summary>the current alpha value (which is the amount of the lookup table curvature).</summary>
      <value>12</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTagType.MPRType">
      <summary>the cell type if it's an MPR cell, possible types are, Axial, Sagittal and Coronal, the user can change those names using the properties MedicalViewerCell.AxialName, MedicalViewerCell.SagittalName and MedicalViewerCell.CoronalName.</summary>
      <value>13</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerTextQuality">
      <summary>Represents the quality of the text and whether it is anti-aliased.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTextQuality.Default">
      <summary>Default quality.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTextQuality.Draft">
      <summary>Draft quality.</summary>
      <value>1</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTextQuality.Proof">
      <summary>Proof quality.</summary>
      <value>2</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTextQuality.NonAntialiased">
      <summary>Forces use of draft quality.</summary>
      <value>3</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerTextQuality.Antialiased">
      <summary>Enables anti-aliasing for the font.</summary>
      <value>4</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.MedicalViewerUserMode">
      <summary>Specifies the design mode of the viewer when the viewer is created in layout mode.</summary>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerUserMode.Run">
      <summary>The viewer will be placed in run mode. You will not be able to move the cells.</summary>
      <value>0</value>
    </member>
    <member name="F:Leadtools.MedicalViewer.MedicalViewerUserMode.Design">
      <summary>The viewer will be placed in design mode. Cells can be adjusted and moved around.</summary>
      <value>1</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.Point2D">
      <summary>Represents an ordered pair of x- and y-coordinates that defines a point on a two-dimensional plane.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.Point2D.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the Point2D class.</summary>
      <param name="x">the x-coordinate of this Point2D</param>
      <param name="y">the y-coordinate of this Point2D</param>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point2D.X">
      <summary>Gets or sets the x-coordinate of this Point2D.</summary>
      <value>Value that the x-coordinate of this Point2D.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point2D.Y">
      <summary>Gets or sets the y-coordinate of this Point2D.</summary>
      <value>Value that the y-coordinate of this Point2D.</value>
    </member>
    <member name="T:Leadtools.MedicalViewer.Point3D">
      <summary>Represents the 3D point.</summary>
    </member>
    <member name="M:Leadtools.MedicalViewer.Point3D.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the Point3D struct with default parameters.</summary>
      <param name="x">The X value of the 3D point.</param>
      <param name="y">The Y value of the 3D point.</param>
      <param name="z">The Z value of the 3D point.</param>
    </member>
    <member name="M:Leadtools.MedicalViewer.Point3D.FromDoubleArray(System.Double[])">
      <summary>Converts array of double into a Point3D struct.</summary>
      <param name="doubleArray">Array of double values to be converted.</param>
      <returns>Point3D that represents the convert double array.</returns>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point3D.Empty">
      <summary>Returns an empty Point3D struct.</summary>
      <value>Point3D that represents an empty struct.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point3D.X">
      <summary>Gets or sets the X value of the 3D point.</summary>
      <value>The X value.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point3D.Y">
      <summary>Gets or sets the Y value of the 3D point.</summary>
      <value>The Y value.</value>
    </member>
    <member name="P:Leadtools.MedicalViewer.Point3D.Z">
      <summary>Gets or sets the Z value of the 3D point.</summary>
      <value>The Z value.</value>
    </member>
  </members>
</doc>